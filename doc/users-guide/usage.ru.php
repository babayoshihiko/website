<?
$title = "Руководство пользователя - Инструмент fink";
$cvs_author = 'Author: horsager';
$cvs_date = 'Date: 2005/02/01 02:34:17';
$metatags = '<link rel="contents" href="index.php?phpLang=ru" title="Руководство пользователя Contents"><link rel="prev" href="conf.php?phpLang=ru" title="Конфигурационный файл Fink">';


include_once "header.ru.inc";
?>
<h1>Руководство пользователя - 6. Использование инструмента fink на строке команд</h1>
        
        
        <h2><a name="using">6.1 Использование инструмента fink</a></h2>
            
            <p>Инструмент <code>fink</code> использует несколько суффиксных команд для работы
                над пакетами дистрибуции на основе исходного кода. Некоторым из них нужно не менее одного
                имени пакета, но они могут обрабатывать несколько имен пакета одновременно.
                Можно указать только одно имя пакета (н-р gimp), полностью уточненное  имя
                с номером версии (н-р gimp-1.2.1) или
                с номерами и версии, и модификации (н-р gimp-1.2.1-3). Fink
                автоматически выберет последнюю имеющуюся версию и модификацию, если они не указаны.
                У других команд другие опции.</p>
            <p>Далее следует список команд для инструмента <code>fink</code>:</p>
        
        <h2><a name="options">6.2 Глобальные опции</a></h2>
            
            <p> Некоторые опции относятся ко всем командам fink. Если вы напечатаете
                 <code>fink --help</code>, то получите список опций: </p>
            <pre> -h, --help - отражает данный текст помощи -q, --quiet - делает
                fink менее многословным, в противоположность --verbose -V, --version -
                отражает информацию о версии -v, --verbose - делает
                fink более многословным, в противоположность --quiet -y, --yes - допускает ответ по умолчанию
                на все интерактивные вопросы -b, --use-binary-dist -
                скачивает предварительно скомпилированные пакеты бинарной дистрибуции, если они имеются
                 </pre>
            <p> Большинство данных опций говорят сами за себя. Их также можно настроить
                в <a href="conf.php?phpLang=ru">Fink configuration file</a>
                (fink.conf), если вы хотите иметь их с постоянной настройкой, а не только при обращении к
                 <code>fink</code>. </p>
            <p> При опции <code>--use-binary-dist</code>
                <code>fink</code> пытается скачать предварительно скомпилированные бинарные пакеты
                бинарной дистрибуции, если они имеются и если их
                еще нет в системе. (Данная опция возможна только начиная с
                версии <code>fink</code> 0.23.0) </p>
        
        <h2><a name="install">6.3 install</a></h2>
            
            <p>Команда install используется для инсталляции пакетов. Она запускает скачивание,
                конфигурирование, построение и инсталляцию указанных вами пакетов. Она также
                автоматически инсталлирует необходимые зависимости, не перед этим запросит
                ваше подтверждение. Пример:</p>
            <pre>fink install nedit Reading package info... Information
                about 131 packages read. The following additional package will
                be installed: lesstif Do you want to continue? [Y/n]</pre>
            <p> Если вы добавите <a href="#options">--use-binary-dist option</a>,
                <code>fink</code> попытается скачать имеющиеся бинарные пакеты вместо
                их построения. Это может сэкономить массу времени при
                инсталляции. </p>
            <p>Алиасы для команды install: update, enable, activate, use
                (в основном по историческим причинам).</p>
        
        <h2><a name="remove">6.4 remove</a></h2>
            
            <p>Команда remove удаляет пакеты из системы в форме вызова
                    '<code>dpkg --remove</code>'. Текущая реализация
                имеет недостаток: она сама не проверяет зависимости, а полностью предоставляет это
                инструменту dpkg (хотя обычно
                это не вызывает проблем).</p>
            <p>Команда remove удаляет только файл виртуальных пакетов
                (кроме файлов конфигурации), но оставляет нетронутым сжатый файл пакета .deb.
                Это значит, что вы можете реинсталлировать пакет позднее
                без повторного прохождения всего процесса компиляции.
                Если вам нужно место на диске, можно удалить .deb с дерева
                <code>/sw/fink/dists</code>.</p>
            <p>Алиасы: disable, deactivate, unuse, delete.</p>
        
        <h2><a name="purge">6.5 purge</a></h2>
            
            <p>Команда purge предназначена для очистки системы от пакетов. Она действует также, как
                команда remove, за исключением того, что также удаляет файл
                конфигурации.</p>
        
        <h2><a name="update-all">6.6 update-all</a></h2>
            
            <p>Данная команда обновляет все инсталлированные пакеты до последней
                версии. Ей не нужен список пакетов, т.е. вы можете просто напечатать:</p>
            <pre>fink update-all</pre>
            <p> Команда <a href="#options">--use-binary-dist option</a>
                здесь также применяется. </p>
        
        <h2><a name="list">6.7 list</a></h2>
            
            <p> Данная команда вызывает список имеющихся пакетов, статус инсталляции листинга,
                последнюю версию и краткое описание.
                Если вы обратились к этой команде без параметров, она просто даст список имеющихся
                пакетов. Можно также дать образец имени или оболочки, и fink
                предоставит список соответствующих наименований.</p>
            <p> Первая колонка отражает статус инсталляции со следующими
                значениями:</p>
            <pre> not installed i latest version is installed (i)
                installed, but a newer version is available</pre>
            <p> Есть также флаги для команды <code>fink list</code></p>
            <pre> -h,--help Отражает имеющиеся опции. -t,--tab
                Выводит список в формате ограничения табуляцией, полезного для выполнения
                вывода через скрипт. -i,--installed Отражает только текущие инсталлированные
                пакеты. -o,--outdated Отражает только устаревшие пакеты.
                 -u,--uptodate Отражает только
                только последние пакеты. -n,--notinstalled Отражает пакеты,
                не инсталлированные на данный момент. -s=expr,--section=expr Отражает
                только те пакеты в разделах, которые соответствуют регулярному выражению
                expr. -w=xyz,--width=xyz Устанавливает ширину дисплея, которую вы хотите для формата
                вывода. xyz является либо числовым, либо автоматическим значением
                (auto). auto устанавливает ширину на основании ширины терминала. Значение по умолчанию:
                auto.</pre>
            <p> Несколько примеров использования:</p>
            <pre> fink list - список всех пакетов fink list bash - проверка, есть ли
                bash и какой версии fink list --outdated - список
                устаревших пакетов fink list --section=kde - список пакетов
                в разделе kde fink list "gnome*" - список пакетов,
                начинающихся с 'gnome'</pre>
            <p> Кавычки в последнем примере необходимы для того, чтобы оболочка
                сама не начала интерпретировать образец. </p>
        
        <h2><a name="apropos">6.8 apropos</a></h2>
            
            <p> Данная команда ведет себя почти также, как <code>fink list</code>.
                Основное отличие в том, что <code>fink apropos</code>
                также находит и описание пакетов с целью нахождения пакетов. Второе отличие в том, что
                искомая строка должна предоставляться и не является опциональной. 
                </p>
            <pre> fink apropos irc - список всех пакетов, для которых 'irc'
                появляется в имени или описании fink apropos -s=kde irc - то же, что и выше,
                но установлено ограничение до пакетов раздела kde </pre>
        
        <h2><a name="describe">6.9 describe</a></h2>
            
            <p> Данная команда вызывает описание пакета, имя которого вы указываете на строке команд.
                Надо учитывать, что только некоторые пакеты на данный момент
                имеют описание.</p>
            <p> Алиасы: desc, description, info</p>
        
        <h2><a name="fetch">6.10 fetch</a></h2>
            
            <p>Скачивает указанные по именам пакеты, но не инсталлирует их. Эта команда
                скачивает тарболы, даже если они были скачаны до этого.</p>
        
        <h2><a name="fetch-all">6.11 fetch-all</a></h2>
            
            <p>Скачивает <b>все</b> файлы исходного кода пакета. Подобно fetch, она
                скачивает тарболы, даже если они были скачаны до этого.</p>
        
        <h2><a name="fetch-missing">6.12 fetch-missing</a></h2>
            
            <p>Скачивает <b>все</b> недостающие файлы исходного кода пакета. Данная команда
                скачивает только те файлы, которые не представлены в системе.</p>
        
        <h2><a name="build">6.13 build</a></h2>
            
            <p>Строит пакет, но не инсталлирует его. Как правило, тарболы исходного кода
                скачиваются, если их нельзя найти. Результат этой команды -
                инсталлируемый файл пакета .deb, который вы можете быстро инсталлировать
                после этого, при помощи команды install. Этой команде нечего делать, если
                уже существует файл .deb. Надо иметь в виду, что
                зависимости все еще<b>инсталлированы</b>, а не просто построены.</p>
            <p> The <a href="#options">--use-binary-dist option</a> is
                applicable here. </p>
        
        <h2><a name="rebuild">6.14 rebuild</a></h2>
            
            <p>Выполняет построение пакетов (lподобно команде build), но игнорирует и перезаписывает
                существующий файл .deb. Если пакет инсталлирован,
                вновь созданный файл .deb также будет инсталлирован в системе
                через <code>dpkg</code>. Это весьма полезно в процессе разработки пакета.</p>
            <p> Здесь применима опция <a href="#options">--use-binary-dist option</a>.
                 </p>
        
        <h2><a name="reinstall">6.15 reinstall</a></h2>
            
            <p>Действует также, как install, но инсталлирует пакет через
                <code>dpkg</code>, даже если он уже инсталлирован. Можно использовать
                эту команду, если вы случайно удалили файлы пакета или изменили
                файлы конфигурации и хотите опять иметь настройки по умолчанию.</p>
        
        <h2><a name="configure">6.16 configure</a></h2>
            
            <p> Запускает повторное выполнение конфигурации Fink. Это позволяет, в числе прочего, изменять
                ваши сайты зеркал и настройки прокси.</p>
        
        <h2><a name="selfupdate">6.17 selfupdate</a></h2>
            
            <p> Данная команда автоматизирует процесс обновления до новых выпусков версий Fink.
                Она проверяет веб-сайт Fink на наличие новой версии,
                затем скачивает описание пакетов и обновляет базовые пакеты,
                в т.ч. сам <code>fink</code>.
                Эта команда может запускать обновление до постоянных версий, но также
                может настроить ваше дерево каталогов <code>/sw/fink/dists</code> для
                прямого обновления через CVS. Это значит, что вы затем сможете иметь доступ
                к самым последним модификациям всех пакетов.</p>
            <p> Если активирована <a href="#options">--use-binary-dist option</a>,
                список пакетов, имеющихся в бинарной дистрибуции, также
                обновляется. </p>
        
        <h2><a name="index">6.18 index</a></h2>
            
            <p> Перестраивает кэш пакета. Обычно вам не надо выполнять это вручную,
                так как <code>fink</code> автоматически определяет,
                когда он нуждается в обновлении.</p>
        
        <h2><a name="validate">6.19 validate</a></h2>
            
            <p> Данная команда выполняет различные проверки в файлах .info and .deb.
                Координаторы пакетов должны это делать в описании своих пакетов
                и соответствующих построенных пакетах перед их предоставлением.</p>
            <p>Алиас: check</p>
        
        <h2><a name="scanpackages">6.20 scanpackages</a></h2>
            
            <p> Делает вызов dpkg-scanpackages(8) с указанными деревьями.</p>
        
        <h2><a name="cleanup">6.21 cleanup</a></h2>
            
            <p> Удаляет файлы устаревшиех пакетов (.info, .patch, .deb), если есть более свежие
                версии. Это может потребовать много места на диске.</p>
            <p> Если активирована <a href="#options">--use-binary-dist option</a>,
                устаревшие скачанные бинарные пакеты также удаляются. </p>
        
        <h2><a name="dumpinfo">6.22 dumpinfo</a></h2>
            
            <p> Действует только в версиях после <code>fink</code> 0.21.0 </p>
            <p> Отражает, как Fink синтаксически анализирует части файла .info в пакете Разные области
                и процентные расширения отражаются в соответствии со следующими
                <b>опциями</b>: </p>
            <pre> -h, --help - Отражают данные имеющиеся опции. -a,
                --all - Отражают все области на основании описания пакетов. Это режим
                по умолчанию, в котором нет флагов --field или --percent.
                -f fieldname, - Отражают имена областей,
                --field=fieldname в указанном в списке порядке. -p key, - Отражают клавиши данного
                процентного расширения, --percent=key в указанном в списке порядке.
                 </pre>
        
    
<? include_once "../../footer.inc"; ?>



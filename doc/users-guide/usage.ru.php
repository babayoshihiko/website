<?
$title = "Руководство пользователя - Инструмент fink";
$cvs_author = 'Author: michga';
$cvs_date = 'Date: 2005/06/05 05:05:08';
$metatags = '<link rel="contents" href="index.php?phpLang=ru" title="Руководство пользователя Contents"><link rel="prev" href="conf.php?phpLang=ru" title="Конфигурационный файл Fink">';


include_once "header.ru.inc";
?>
<h1>Руководство пользователя - 6. Использование инструмента fink в командной строке</h1>
        
        
        <h2><a name="using">6.1 Использование инструмента fink</a></h2>
            
            <p>Инструмент <code>fink</code> использует несколько суффиксных команд для работы
                над пакетами дистрибутива исходного кода. Некоторым из них требуется как минимум одно
                имя пакета, но они также могут обрабатывать несколько имен одновременно.
                Можно указать только имя пакета (н-р, gimp), но также можно дать полное точное имя пакета, включающее
                номер версии (н-р, gimp-1.2.1) или же полное имя с
                номером версии и модификации (н-р, gimp-1.2.1-3). Fink
                автоматически выберет последнюю имеющуюся версию и модификацию, если они не указаны.
                У других команд другие опции.</p>
            <p>Далее приводится список команд для инструмента <code>fink</code>:</p>
        
        <h2><a name="options">6.2 Глобальные опции</a></h2>
            
            <p> Некоторые опции относятся ко всем командам fink. Если вы напечатаете
                 <code>fink --help</code>, то получите список опций: </p>
            <p>(для <code>fink-0.24.1</code>)</p>
            
            <pre>-h, --help            - отражает данный справочный текст
                -q, --quiet           - делает fink менее многословным, в противоположность --verbose
                -V, --version         - отражает информацию о версии
                -v, --verbose         - делает fink более многословным, в противоположность --quiet
                -y, --yes             - допускает ответ по умолчанию на все интерактивные
                вопросы.
                -b, --use-binary-dist - дает указание скачать предварительно скомпилированные пакеты 
                бинарного дистрибутива, если они имеются (н-р, для сокращения времени компиляции
                или использования диска).
                Имейте в виду, что в данном режиме Fink получает указание скачать
                желаемую версию, если она доступна для
                скачивания; в этом случае Fink не выбирает версию
                на основе ее наличия в бинарном виде.
                --no-use-binary-dist  - не допускает использование предварительно скомпилированных
                пакетов бинарного дистрибутива (в противоположность --use-binary-dist)
                -K, --keep-root-dir   - дает указание Fink не удалять каталог
                /sw/src/root-[имя]-[версия]-[модификация]
                после построения пакета.
                -k, --keep-build-dir  - дает указание Fink не удалять каталог
                /sw/src/[имя]-[версия]-[модификация]
                после построения пакета.
                --build-as-nobody     - допускает работу пользователя без прав суперпользователя
                на этапах распаковки, выполнения патчей, компиляции и инсталляции. Имейте в виду, что
                построенные при помощи этой опции пакеты могут не работать. Этот режим
                следует использовать только для разработки и 
                отладки пакетов.</pre>
                                                          
            <p> Большинство названий данных опций говорят сами за себя. Их также можно настроить
                в <a href="conf.php?phpLang=ru">конфигурационном файле Fink</a>
                (fink.conf), если вы хотите иметь их постоянно, а не только при активации
                <code>fink</code>. </p>
            
             
        <h2><a name="install">6.3 install</a></h2>
            
            <p>Команда install используется для инсталляции пакетов. Она запускает скачивание,
                конфигурирование, построение и инсталляцию указанных вами пакетов. Она также
                автоматически инсталлирует необходимые зависимости, но перед этим запрашивает
                ваше подтверждение. Пример:</p>
            <pre>fink install nedit

Reading package info...
Information about 131 packages read.
The following additional package will be installed:
 lesstif
                Do you want to continue? [Y/n]</pre>
            <p> Использование опции <a href="#options">--use-binary-dist </a>
                в сочетании с <code>fink install</code> может значительно ускорить процесс
                построения сложных пакетов.
                 </p>
            <p>Алиасы для команды install: update, enable, activate, use
                (в основном по историческим причинам).</p>
        
        <h2><a name="remove">6.4 remove</a></h2>
            
            <p>Команда remove удаляет пакеты из системы при помощи
                    '<code>dpkg --remove</code>'. Имеющаяся на данный момент команда, осуществляемая по умолчанию, 
                имеет недостаток: она не проверяет зависимости сама, а полностью полагается на
                инструмент dpkg (хотя обычно
                это не вызывает проблем).</p>
            <p>Команда remove удаляет только файлы фактических пакетов
                (кроме конфигурационных файлов), но оставляет нетронутым файл сжатого пакета .deb.
                Это значит, что вы можете реинсталлировать пакет впоследствии
                без повторного прохождения всего процесса компиляции.
                Если вам нужно место на диске, можно удалить .deb в дереве
                <code>/sw/fink/dists</code>.</p>
            <p>Вместе с командой fink remove можно использовать следующие опции:
            </p>
            <pre>-h,--help             - показывает существующие опции.
                -r,--recursive        - удаляет также пакеты, зависящие от удаляемого
                пакета (т.е. исправляет вышеуказанный недостаток).</pre>
            <p>Алиасы: disable, deactivate, unuse, delete.</p>
        
        <h2><a name="purge">6.5 purge</a></h2>
            
            <p>Команда purge предназначена для очистки системы от пакетов. Она действует так же, как
                команда remove, но еще и удаляет конфигурационные файлы.
            </p>
            <p>Вместе с данной командой можно использовать следующие опции:
            </p>
            <pre>-h,--help            
                -r,--recursive        </pre>
        
        <h2><a name="update-all">6.6 update-all</a></h2>
            
            <p>Данная команда обновляет все инсталлированные пакеты до последней
                версии. Ей не нужен список пакетов; вы можете просто напечатать:</p>
            <pre>fink update-all</pre>
            <p> В сочетании с этой командой полезно применение опции <a href="#options">--use-binary-dist</a>.
                 </p>
        
        <h2><a name="list">6.7 list</a></h2>
            
            <p> Данная команда генерирует список имеющихся пакетов, с указанием статуса инсталляции и
                последней версии, а также с кратким описанием.
                Если вы обратились к этой команде без указания параметров, она просто предоставит список имеющихся
                пакетов. Вы также можете дать образец имени или оболочки, и fink
                предоставит список соответствующих наименований.</p>
            <p> Первая колонка отражает статус инсталляции со следующими
                значениями:</p>
            <pre>
     пакет не инсталлирован
 i   инсталлирована последняя версия
(i)  пакет инсталлирован, но имеется более поздняя версия
                p   виртуальный пакет, предоставленный инсталлированным пакетом</pre>
            <p> Для команды <code>fink list</code> существуют следующие опции:</p>
            <pre>
                -h,--help
                Отражает имеющиеся опции.
                -t,--tab
                Выводит список в формате ограничения табуляцией, полезном для
                выполнения вывода через скрипт.
                -i,--installed
                Отражает только текущие инсталлированные пакеты.
                -o,--outdated
                Отражает только устаревшие пакеты.
                -u,--uptodate
                Отражает только последние пакеты.
                -n,--notinstalled
                Отражает пакеты, не инсталлированные на данный момент.
                -s=expr,--section=expr
                Отражает только пакеты в разделах, которые соответствуют
                регулярному выражению expr.
                -m expr,--maintainer=expr
                Отражает только пакеты, координаторы которых соответствуют
                регулярному выражению expr.
                -r expr,--tree=expr
                Отражает только пакеты в деревьях, которые соответствуют
                регулярному выражению expr.
                -w=xyz,--width=xyz
                Устанавливает ширину дисплея, которая вам нужна для формата
                вывода. xyz является либо числовым, либо автоматическим значением (auto).
                Настройка auto устанавливает ширину на основании ширины терминала.
                Настройка по умолчанию: auto.
            </pre>                       
            <p> 
                Несколько примеров использования:</p>
            <pre>
                fink list                 - список всех пакетов
                fink list bash            - проверка наличия bash и его версии
                fink list --outdated      - список устаревших пакетов
                fink list --section=kde   - список пакетов в разделе kde
                fink list "gnome*"        - список пакетов, начинающихся с 'gnome'
            </pre>
            <p> 
            Кавычки в последнем примере необходимы для того, чтобы оболочка
                сама не начала интерпретировать образец. </p>
        
        <h2><a name="apropos">6.8 apropos</a></h2>
            
            <p> Данная команда ведет себя почти так же, как <code>fink list</code>.
                Основное отличие в том, что <code>fink apropos</code>
                также находит описание пакетов с целью их выявления. Другое отличие в том, что
                искомая строковая цепочка должна предоставляться и является обязательной. 
            </p>
            <pre>
                fink apropos irc          - список всех пакетов, имеющих 'irc' 
                в имени или описании.
                fink apropos -s=kde irc   - то же, что и выше, но с ограничением до 
                пакетов из раздела kde.
            </pre>            
        
        <h2><a name="describe">6.9 describe</a></h2>
            
            <p> Данная команда вызывает описание пакета, имя которого вы указываете в командной строке.
                Надо учитывать, что только некоторые пакеты на данный момент
                имеют описание.</p>
            <p>Алиасы: desc, description, info.</p>
        
        <h2><a name="fetch">6.10 fetch</a></h2>
            
            <p>Скачивает поименно указанные пакеты, но не инсталлирует их. Эта команда
                скачивает тарболы, даже если они уже были скачаны прежде.</p>
        
        <h2><a name="fetch-all">6.11 fetch-all</a></h2>
            
            <p>Скачивает <b>все</b> файлы исходного кода пакета. Подобно fetch, она
                скачивает тарболы, даже если они уже были скачаны прежде.</p>
            <p>С командой <code>fink fetch-all</code> можно использовать следующие опции:</p>
            <pre>-h,--help
                -i,--ignore-restrictive
                -d,--dry-run</pre>
        
        <h2><a name="fetch-missing">6.12 fetch-missing</a></h2>
            
            <p>Скачивает <b>все</b> недостающие исходные файлы пакета. Данная команда
                скачивает только те файлы, которые не представлены в системе.</p>
            <p>С командой <code>fink fetch-missing</code> можно использовать следующие опции:</p>
            <pre>-h,--help
                -i,--ignore-restrictive
                -d,--dry-run</pre>
        
        <h2><a name="build">6.13 build</a></h2>
            
            <p>Строит пакет, но не инсталлирует его. Как правило, тарболы исходного кода
                скачиваются, если их нельзя найти. Результат этой команды -
                готовый к инсталляции файл .deb пакета, который вы затем можете быстро инсталлировать
                при помощи команды install. Эта команда бесполезна, если
                уже существует файл .deb. Надо иметь в виду, что
                зависимости - в отличие от пакета - <b>инсталлированы</b>, а не просто построены.</p>
            <p> Здесь применима опция <a href="#options">--use-binary-dist</a>.
                 </p>
        
        <h2><a name="rebuild">6.14 rebuild</a></h2>
            
            <p>Выполняет построение пакета (lподобно команде build), но игнорирует и перезаписывает
                существующий файл .deb. Если пакет инсталлирован,
                вновь созданный файл .deb также будет инсталлирован в системе
                через <code>dpkg</code>. Это весьма полезно в процессе разработки пакета.</p>            
        
        <h2><a name="reinstall">6.15 reinstall</a></h2>
            
            <p>Действует так же, как install, но инсталлирует пакет через
                <code>dpkg</code>, даже если он уже инсталлирован. Можно использовать
                эту команду, если вы случайно удалили файлы пакета или изменили
                конфигурационные файлы и хотите опять иметь настройки по умолчанию.</p>
        
        <h2><a name="configure">6.16 configure</a></h2>
            
            <p> Запускает повторное выполнение конфигурации Fink. Это позволяет, в числе прочего, изменять
                ваши настройки сайтов зеркал и прокси.</p>
        
        <h2><a name="selfupdate">6.17 selfupdate</a></h2>
            
            <p> Данная команда автоматизирует процесс обновления до новых версий Fink.
                Она проверяет веб-сайт Fink на наличие новой версии,
                затем скачивает описание пакетов и обновляет базовые пакеты,
                в т.ч. сам <code>fink</code>.
                Эта команда может делать обновление до регулярных выпусков версий, но также
                может настроить ваше дерево каталогов <code>/sw/fink/dists</code> для
                прямого обновления через CVS. Это значит, что вы затем сможете иметь доступ
                к самым последним модификациям всех пакетов.</p>
            <p> Если активирована опция <a href="#options">--use-binary-dist</a>,
                список пакетов, имеющихся в бинарном дистрибутиве, также
                обновляется. </p>
        
        <h2><a name="index">6.18 index</a></h2>
            
            <p> Перестраивает кэш пакета. Обычно вам не надо выполнять это вручную,
                так как <code>fink</code> автоматически определяет,
                когда он нуждается в обновлении.</p>
        
        <h2><a name="validate">6.19 validate</a></h2>
            
            <p> Данная команда выполняет различные проверки в файлах .info и .deb.
                Координаторы пакетов должны это делать в описании своих пакетов
                и соответствующих построенных пакетах перед их предоставлением.</p>
            <p>Можно использовать следующие дополнительные опции:</p>
            <pre>-h,--help            - Отражает имеющиеся опции.
                -p,--prefix          - Имитирует альтернативный префикс базового маршрута Fink (%p) для
                проверяемых файлов.
                --pedantic, --no-pedantic
                - Контролирует отражение предупреждений о форматировании.
                --pedantic  - настройка по умолчанию.</pre>
            <p>Алиас: check.</p>
        
        <h2><a name="scanpackages">6.20 scanpackages</a></h2>
            
            <p> Данная команда активирует dpkg-scanpackages(8) в определенных деревьях.</p>
        
        <h2><a name="cleanup">6.21 cleanup</a></h2>
            
            <p> Удаляет файлы устаревших пакетов (.info, .patch, .deb), если есть более свежие
                версии. Это может потребовать много места на диске.</p>
            <p> Если активирована опция <a href="#options">--use-binary-dist</a>, то при этом также
                удаляются устаревшие скачанные бинарные пакеты и выполняется команда <code>fink scanpackages</code>. </p>
        
        <h2><a name="dumpinfo">6.22 dumpinfo</a></h2>
            
            <p> Действует только в версиях после <code>fink</code> 0.21.0. </p>
            <p> Отражает, как Fink синтаксически анализирует части файла .info пакета. Разные области
                и процентные расширения отражаются в соответствии со следующими
                <b>опциями</b>: </p>
            <pre>
                -h, --help           - Отражает имеющиеся опции.
                -a, --all            - Отражает все области на основании описания пакетов.
                Это режим по умолчанию, в котором нет флагов --field и --percent .               
                -f fieldname, --field=fieldname       - Отражает имена областей в списочном порядке.                    
                -p key, --percent=key             - Отражает клавиши данного процентного расширения
                в списочном порядке.            
            </pre>
        
        <h2><a name="show-deps">6.23 show-deps</a></h2>
            
            <p> Действует только для fink-0.23-6 и последующих версий. </p>
            <p> Отражает воспринимаемый человеком список зависимостей времени компиляции (построения)
                и выполнения (инсталляции) пакетов, указанных в списке.
            </p>
        
    
<? include_once "../../footer.inc"; ?>



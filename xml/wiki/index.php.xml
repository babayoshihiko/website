<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.7/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.7/ http://www.mediawiki.org/xml/export-0.7.xsd" version="0.7" xml:lang="en">
  <siteinfo>
    <sitename>the Fink Wiki</sitename>
    <base>http://wiki.finkproject.org/index.php/The_Fink_Wiki</base>
    <generator>MediaWiki 1.20.2</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">The Fink Wiki</namespace>
      <namespace key="5" case="first-letter">The Fink Wiki talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Fink:ArchiveBrowser</title>
    <ns>0</ns>
    <id>1726</id>
    <revision>
      <id>11231</id>
      <parentid>11148</parentid>
      <timestamp>2007-06-11T08:59:14Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of Bu7C8o, changed back to last version by RangerRick</comment>
      <sha1>kxy6ixm01s9wetav0gda1lemsswyvk4</sha1>
      <text xml:space="preserve" bytes="1498">{{Fink_Header}}

Fink makes pre-compiled versions of its &quot;stable&quot; packages available for automatic installation (when the package license permits).  Many of these packages were released under the Gnu Public License (GPL), and the Fink project takes its obligations under the GPL quite seriously.

The Fink Archive Brower, at [http://bindist.finkmirrors.net/bindist/dists/ http://bindist.finkmirrors.net/bindist/dists/], allows the user to obtain any of these packages, or the corresponding source files, patches, and build instructions.  Each &quot;distribution&quot; within the archive (which is specific to a particular version of OS X) is divided into &quot;crypto&quot; and &quot;main&quot; sections, each of which is further subdivided.  The binary-darwin-architecture directories contain the actual binaries, again further subdivided by topic.  The finkinfo directories contain the corresponding files with build instructions, as well as patch files, and the source directories contain the source files.  (Actually, the way this is implemented, they contain symbolic links to the Distfiles copy of the source files).

In this way, knowing the package name, a user can obtain not only the source file, but all necessary patch files and build instructions that were used in creating the binary version.  The build instructions are carefully documented in the [http://fink.sourceforge.net/doc/packaging/ Fink Packaging Manual].

{{Fink_Header}}

[[Category: Fink|Archive Browser]]
[[Category: Fink Structure|Archive Browser]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:CVS</title>
    <ns>0</ns>
    <id>1734</id>
    <revision>
      <id>12028</id>
      <parentid>11973</parentid>
      <timestamp>2011-10-29T12:35:53Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <sha1>54v3kly4qtzwov24fz63byvnw5gwccg</sha1>
      <text xml:space="preserve" bytes="4099">{{Infobox Project Service Information|
url=https://sourceforge.net/scm/?type=cvs&amp;group_id=17203|
purpose= Store parts of the project's source code (in particular, the &quot;dists&quot; module contains all Fink package).|
maintainer=TODO
}}

Many different portions of the fink project use the fink CVS repository to store files which are maintained by the fink developers and package maintainers.  There are several basic levels of commit access to the repository: access can be granted to the website area (web, scripts/installer, fink), to the entire scripts module, and to the basic code areas (website area as well as base-files, mirrors, dists, packages).

Here are the top-level headers in the CVS repository, together with a description of what they are used for.
* '''3rdparty:''' imports of CVS trees from external projects which the fink project plans to modify locally
* '''CVSROOT:''' access control to the CVS repository, maintained by the fink Core group
* '''base-files:''' files for the &quot;base-files&quot; package, a part of fink
* '''dists:''' package descriptions for every distribution starting with 10.2
* '''dlcompat:''' old files for the &quot;dlcompat&quot; library (libdl), which was moved out of fink and into its own fink package (and later became obsolete with the 10.3 distribution)
* '''experimental:''' package maintainers and other coders are invited to use a per-person directory here to make experimental versions of fink materials available for testing
* '''fink:''' files for the &quot;fink&quot; package (the 'fink' package manager programs)
* '''fink/mirror:''' files for the &quot;fink-mirrors&quot; package, a part of fink
* '''fink-maintainertools:''' work in progress for a package of utilities for package maintainers
* '''fink-prebinding:''' files for the &quot;fink-prebinding&quot; program, which has become obsolete with the 10.4 distribution
* '''fix-fink:''' files for the &quot;fix-fink&quot; program, an obsolete program which was used to correct some problems with fink installations during 2002 and 2003
* '''mirrors:''' obsolete (former location of the lists of mirrors used by fink)
* '''packages:''' package descriptions for the 10.1 distribution
* '''scripts/10.4-update:''' a script for updating a 10.3 or 10.4-transitional fink installation to 10.4, along with 12 MB of .deb files used in the update
* '''scripts/bindist:''' scripts for creating the binary files, used by fink's UseBinaryFiles mode, as well as available from the Archive Browser; also the scripts used to create the Archive Browser
* '''scripts/buildfink:''' scripts for an automated build of fink packages
* '''scripts/disfiles:''' script for automated [[Fink:Distfiles|mirroring of source tarballs]]
* '''scripts/installer:''' scripts to build the installer package which lets users install fink without compiling anything
* '''scripts/pdb:''' scripts used to create and update the  [[Fink:PackageDatabase|package database]]
* '''scripts/selfupdate-server:''' scripts used by the [[Fink:SelfUpdate|selfupdate server]]
* '''scripts/srcdist:''' scripts used in conjunction with the SourceForge file release system to release the programs fink, fink-mirrors, fink-prebinding, base-files; also to release tarballs of packages to accompany each binary distribution
* '''scripts/xfree86:''' very obsolete utility for getting snapshot of xfree86 development cvs
* '''shared-libraries:''' work in progress on implementing an automated detection of shared library dependencies (pretty much obsolete)
* '''web:''' files for the website (some generated from web/xml, some manually edited here)
* '''web/xml:''' basic location of the files that one actually edits to change the website (see web/xml/README for an explanation)

There are also some virtual CVS modules:
* '''xml:''' the thing to check out for modifying the website (contains web, scripts, and fink)
* '''website:''' the thing to check out for the website contents only

Using CVS:
This example downloads a copy of [checks out] the xml tree:

cvs -d:ext:yourusername@fink.cvs.sourceforge.net:/cvsroot/fink co xml

{{Fink_Header}}

[[Category: Fink|CVS]]
[[Category: Fink Structure|CVS]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Distfiles</title>
    <ns>0</ns>
    <id>1725</id>
    <revision>
      <id>11230</id>
      <parentid>11147</parentid>
      <timestamp>2007-06-11T08:59:05Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of TigJbw, changed back to last version by Dmrrsn</comment>
      <sha1>hc8ur1194j0niqfbcwnce5v4ja85eak</sha1>
      <text xml:space="preserve" bytes="3666">{{Fink_Header}}

Fink's strategy for bringing open source projects to OS X has been to construct a system which automatically compiles and installs open source software, using source files which fink fetches from their original locations.

One of the problems which emerged early on, though, was the problem of files which disappear from their original location.  To work around this, the Distfiles portion of the project was started.  Distfiles was originally shared between Fink and MacPorts (formerly DarwinPorts) but is now solely a Fink operation; it is currently hosted at opendarwin.org, with mirror sites located elsewhere.

A few times a day, the distfiles server downloads updated copies of the package databases of fink and darwinports, examines them for new sourcefiles, and attempts to download those sourcefiles.  (The small handful of fink packages whose source files cannot be redistritubted freely are excluded from these downloads.)  Integrity checking is done with MD5 checksums.

The fink software, in turn, gives users the option of searching this &quot;distfiles&quot; location, either before or after searching the original location.  Most users elect to do this searching before, which makes the &quot;distfiles&quot; location the default download location for software for most fink users.

The distfiles repository layout is in the form of /&lt;hash-algorithm&gt;/&lt;hash&gt;/&lt;filename&gt;.  For example: /md5/98800eaa4803fa5531eb74ad04f6c429/Font-TTF-0.35.tar.gz.
Files should exist in all directories of all supported hashing functions through symlinks, although md5 is currently the only supported hashing function.  For compatibility, the latest version (encountered by the mirroring script most recently) of a filename will appear in /, so Font-TTF-0.35.tar.gz would exist in it's hashed location as well as /Font-TTF-0.35.tar.gz, assuming it is the latest version of that filename.  The hash and hash algorithm in the file path was implemented to deal with multiple files with the same filename but different hashes.  This also keeps track of multiple files with the same hash, but different filenames.  Note that files with the same hash are stored multiple times.  This is to avoid problems with hash and name collisions, but different content.
Distfile information is also stored in a mysql database on the file server.  This is both a performance optimization and a management convenience.  It is an optimization so all previous files and their hashes can be retrieved easily without need for recomputing their hash from the filesystem on every run of the script.  Fink's input to the distfiles mirroring script is through the fetchall -i --dry-run interface from fink, and depends on the output format not changing.

The distfiles mirroring script is currently in CVS under scripts/distfiles/newmirror.  The script is run periodically on the master distfiles machine.  The script iterates through various config files,
one for each supported Tree, and one for each branch (stable/unstable).  Information about downloaded distfiles is stored in a mysql database.  This prevents needing to re-checksum files on disk to compare if the .info file's checksum has changed from what was last downloaded.

To Do: There should be a periodic examination of the entire fink package database, to see if the download locations are still accurate.  In cases in which the file is no longer available at the original location, the package maintainer should be notified (in situations where the upstream source is no longer available at all, the distfiles site can be used as the primary site).

{{Fink_Header}}

[[Category: Fink|Distfiles]]
[[Category: Fink Structure|Distfiles]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:FinkMirrors</title>
    <ns>0</ns>
    <id>1736</id>
    <revision>
      <id>12062</id>
      <parentid>12051</parentid>
      <timestamp>2012-05-04T21:05:53Z</timestamp>
      <contributor>
        <username>Alexkhansen</username>
        <id>167</id>
      </contributor>
      <comment>/* Existing mirrors */</comment>
      <sha1>cfq1ndgg6k76dogmccgtue9smdhocyv</sha1>
      <text xml:space="preserve" bytes="6508">{{Fink_Header}}

==General==
Fink is hosted by Sourceforge but all mirroring is done from OpenDarwin . Here are the services OpenDarwin and Fink are currently looking for mirrors to host. Opendarwin and Fink work closely together, thus if you think about being a full mirror please also consider mirroring OpenDarwins services. Everything for Fink is hosted under the finkmirrors.net domain. For each service someone mirrors, we will create dns entries.

We are currently looking for those who are willing to share around 100MB of their hard-drive and a liberal amount of their bandwidth. Fink is now using rsync as its preferred info file distribution method and it is important to us, that those files are always available. So if you cannot afford to share more than around the size mentioned, please do consider being a rsync only mirror. 

==DNS Structure==
Generally speaking the Fink mirror structure is as follows and please keep in mind
these dns entries aren't typically for human use.
'''[yourairporttag].[state].[continent].finkmirrors.net''' and '''[yourairporttag].finkmirrors.net''' as a shortcut will be used for rsync mirrors of the Fink info files.

Those websites who wish to mirror the so called distfiles Opendarwin and Fink use will need two additional dns entries named:
'''distfiles.[yourairporttag].[state].[continent].finkmirrors.net''' as well as '''distfiles.[yourairporttag].finkmirrors.net'''

'''Please note that we do not recommend using CNAME records, although we are using them in a couple of cases'''. If you have a load balanced environment that is handled via DNS load balancing, we are more than happy to add all of your IPs as A records. We will also handle the necessary DNS updates, should your setup change.

''Fink administrators, see [[Server Administration#DNS|the Server Administration]] page for details on updating records for mirrors.''

==Master Mirrors==
To keep update times as low as possible and ensure that the whole mirror structure stays as current as possible there are a few special server called Master mirrors
To become a Master mirror you have to meet certain requirements:
* It needs to mirror the rsync Fink parts as well as distfiles
* Enough spare ressources to sync directly from Fink CVS every 15 minutes
* It needs to update every day for new distfiles (the source files needed to build fink packages)
* The machine needs to be connected at 100Mbit
* There may not be any traffic caps
* The server has to be able to sustain heavy load (more than 1000 concurrent user)
* The physical location of the server has to be multi-homed 

As a Master expect '''A LOT''' of traffic, since all smaller Mirrors on your continent will update from you.

==Distfile Mirrors==
'''Description:''' these are the original sources (usually tar.gz's) fetched by fink and darwin ports when building packages.&lt;br&gt;
'''Protocol:''' HTTP This should have ''2'' virtual hosts. 

You may mirror those files using rsync
'''rsync://master.us.finkmirrors.net/distfiles''' will get you all the necessary files.&lt;br&gt;
If you cannot use rsync, the files are also available via http at '''distfiles.master.finkmirrors.net'''

===Fink specific setup:===
For Fink the vhosts should read: '''distfiles.[yourairporttag].[yourcountrycode].[yourcontinent]'''. and '''distfiles.[yourairporttag].finkmirrors.net'''
The distfiles are all in the top level. A sample Apache Vhost entry could read:
           &lt;tt&gt;&lt;VirtualHost 204.152.184.200&gt;
           ServerName distfiles.ham.de.eu.finkmirrors.net
           ServerAdmin distfiles@finkmirrors.net
           DocumentRoot /somepath
           &lt;/VirtualHost&gt;
           &lt;VirtualHost 204.152.184.200&gt;
           ServerName distfiles.ham.finkmirrors.net
           ServerAdmin distfiles@finkmirrors.net
           DocumentRoot /Somepath
           &lt;/VirtualHost&gt;&lt;/tt&gt;

'''Size:''' ~90G (02/08/12)&lt;br&gt;
Be prepared for ~250MB/month growth in this archive.&lt;br&gt;
Distfile mirrors need to have at least the equivalent of a '''T3/E3''' in connectivity.

==rsync Mirrors==
'''Description:''' These are the fink .info and .patch files retrieved by fink when doing a 'fink selfupdate'.
&lt;br&gt;'''Protocol:''' rsync
&lt;br&gt;This needs to be retrieved via anonymous rsync. These files can be placed anywhere, but make sure your rsync site has tag 'finkinfo' available, and pointing to the directory containing these files.

Here is a sample rsync config entry:
&lt;tt&gt;
           [finkinfo]
            path = /Path/src/fink/finkinfo
            comment = Fink .info files pulled from cvs
&lt;/tt&gt;
You may of course display a MOTD of your choice.

'''Size:''' ~ 520MB (02/08/12)
&lt;br&gt;This archive does not grow very quickly.&lt;br&gt;
'''Mirroring Method:''' The finkinfo files can be retrieved from the master Fink site using

'''rsync://master.us.finkmirrors.net/finkinfo'''
The master site is updated hourly.
&lt;br&gt;'''Bandwidth Requirements:''' This really depends on your geographic  location and how popular your server will be.
&lt;br&gt;Estimate ~50-100kB/s sustained.

Rsync switches
To ensure that the data is synced correctly and old files are being deleted you need to use:
&lt;tt&gt;-az --delete --delete-after&lt;/tt&gt; in all of your rsync lines.

''Update Intervals''&lt;br&gt;
Rsync mirrors have to update in an interval less than 90 minutes. An intervall of 30 minutes is recommended.

'''Timestamps'''

Data distribution has to be as consistent as possible within the Fink mirror system. Thus every rsync mirror has to follow a certain sync procedure.

# First sync the finkinfo tag from a Master using --exclude=TIMESTAMP
# If the sync returned no errors sync the TIMESTAMP file from the Master

This file holds the output of date -u +%s and will be updated every time the Master has finished syncing with CVS.

Furtermore your mirror will have to run a script which echos the output of ''date -u +%s'' or any other code construct which creates a UTC timestamp to a file called '''LOCAL''' in your finkinfo tag's root. This file will be used by our statistics server to tell when your mirror last synced from the Master. It needs to be updated every time your syncing routine finishes.
Rsync mirrors need to have a connectivity of at least '''10Mbit'''

==Existing mirrors==

See [https://github.com/fink/fink-mirrors the fink mirror module on github] for the current list of mirrors.  Contacts are in the [https://github.com/fink/fink-mirrors/blob/master/README.contacts README.contacts] page.


{{Fink_Header}}

[[Category: Fink|Mirrors]]
[[Category: Fink Structure|Mirrors]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Internationalization</title>
    <ns>0</ns>
    <id>1731</id>
    <revision>
      <id>11131</id>
      <parentid>5112</parentid>
      <timestamp>2007-06-01T03:25:19Z</timestamp>
      <contributor>
        <username>Baba</username>
        <id>291</id>
      </contributor>
      <comment>Add Japanese (sub)section</comment>
      <sha1>itv2b1sf7m777mmi2aldqz2lo3hma30</sha1>
      <text xml:space="preserve" bytes="289">{{Fink_Header}}

There are many aspects to the internationalization of Fink, and the Fink project is fortunate to have attracted an enthusiastic group of translators.

*[[Japanese]]

{{Fink_Header}}

[[Category: Fink|Internationalization]]
[[Category: Fink Structure|Internationalization]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:InternetDomains</title>
    <ns>0</ns>
    <id>1729</id>
    <revision>
      <id>12031</id>
      <parentid>11834</parentid>
      <timestamp>2011-10-29T13:04:32Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <sha1>4npy8ybebgo89fpox3xwnrfn8cewvcx</sha1>
      <text xml:space="preserve" bytes="1145">The fink project (and the distfiles subproject) use a number of different URL's and internet domains.

The website for fink was formerly hosted at fink.sourceforge.net, which now points to the current site www.finkproject.org.

Domains:
* finkproject.org
** www.finkproject.org is the [[Fink:Website|website]]
** pdb.finkproject.org is the location of the [[Fink:PackageDatabase|package database]]
** wiki.finkproject.org is the location of the fink Wiki
* finkmirrors.net
** bindist.finkmirrors.net is the location of the [[Fink:ArchiveBrowser|archive browser]] (currently hosted at www.finkproject.org)
** master.us.finkmirrors.net is the master mirror for [[Fink:SelfUpdate|selfupdate via rsync]] (currently hosted at www.finkproject.org)
** distfiles.master.finkmirrors.net is the master mirror for the [[Fink:Distfiles|distfiles project]] (currently hosted at www.finkproject.org)
** the are many international mirror sites of both of the above


TODO: Add information on who can fix issues with DNS entries, should any crop up, or can setup new subdomains.

[[Category: Fink|Internet Domains]]
[[Category: Fink Structure|Internet Domains]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:OpenDarwin</title>
    <ns>0</ns>
    <id>1732</id>
    <revision>
      <id>11238</id>
      <parentid>11159</parentid>
      <timestamp>2007-06-11T09:04:19Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of LuyDj6, changed back to last version by Dmrrsn</comment>
      <sha1>cyh7y6s28rqr5bs6ho13glijd5zogz5</sha1>
      <text xml:space="preserve" bytes="313">{{Fink_Header}}

The Fink project is grateful to opendarwin.org for having hosted several components of Fink for a number of years.  However, all
components which were formerly hosted there have been moved to finkproject.org.

{{Fink_Header}}

[[Category: Fink|OpenDarwin]]
[[Category: Fink Structure|OpenDarwin]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:PackageDatabase</title>
    <ns>0</ns>
    <id>1728</id>
    <revision>
      <id>11038</id>
      <parentid>10545</parentid>
      <timestamp>2007-04-11T17:40:23Z</timestamp>
      <contributor>
        <username>Dmrrsn</username>
        <id>334</id>
      </contributor>
      <comment>PDB has moved</comment>
      <sha1>5kco31y7ynrohre5vzo89st2lwc4055</sha1>
      <text xml:space="preserve" bytes="900">{{Fink_Header}}

One of the most heavily-accesssed portions of the fink website is the searchable package database.  This portion of the website has its own URL pdb.finkproject.org for historical reasons (it was formerly hosted by opendarwin.org), but it is now running as part of the main website.  A mysql database contains the data, which is updated at two times: first, when a new binary distribution is released, the data from the distribution is inserted into the database, and second, several times a day an automatic update is made from the fink CVS repository and the pdb scripts convert this into mysql data which is then put into the database (replacing previous information in the database).

An effort to enhance the package database is documented at [[Fink:PackageDatabase:NewDesign]].


{{Fink_Header}}

[[Category: Fink|Package Database]]
[[Category: Fink Structure|Package Database]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:SelfUpdate</title>
    <ns>0</ns>
    <id>1727</id>
    <revision>
      <id>5192</id>
      <parentid>5172</parentid>
      <timestamp>2006-04-06T01:38:43Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>f8lsrzfcizrhkh9902emd1ffhnq1aba</sha1>
      <text xml:space="preserve" bytes="1228">{{Fink_Header}}

Fink users need up-to-date information about the packages in fink in order to keep their installations up-to-date.  Originally, there were two ways of getting this information: either the user relied on &quot;point updates&quot; which are produced at the time of each binary distribution, or the user relied on anonymous CVS access to update their packages from fink's CVS installation.

However, this produced a big load on anonymous CVS (which was also having stability problems to a certain extent), so an alternative method was constructed, which is now urged upon users as the default access method for this information.  In short, the current CVS information is downloaded to a master rsync server and propagated to a network of mirror servers.  Users then access the information via rsync, from these servers.

The selfupdate repository is kept up to date by a CVS checkout of portions of the fink repository using a registered fink user's account and ssh.  The script that runs all this and populates the selfupdate repository is in fink cvs under scripts/selfupdate-server/finkrsyncup.

{{Fink_Header}}

[[Category: Fink|SelfUpdate]]
[[Category: Fink Structure|SelfUpdate]]
[[Category: Fink Commands|SelfUpdate]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:SourceForge</title>
    <ns>0</ns>
    <id>1723</id>
    <revision>
      <id>10568</id>
      <parentid>5117</parentid>
      <timestamp>2007-03-10T22:36:10Z</timestamp>
      <contributor>
        <username>Dmrrsn</username>
        <id>334</id>
      </contributor>
      <comment>website not here</comment>
      <sha1>t9csvzi5fhpjk1u2roji5ivjvlqv6z2</sha1>
      <text xml:space="preserve" bytes="942">{{Fink_Header}}

Fink was brought to sourceforge.net a few months after its founding.  We've valued our relationship with this service over the years (and vice versa: we were one of the earliest &quot;Project of the Month&quot; at sourceforge), but as fink has grown, parts of our operation have migrated away from sourceforge.  Currently, sourceforge provides us with the following services:
* Accounts for Fink developers, and for the fink project itself
* Hosting of mailing lists
* CVS (including full CVS tarballs compiled daily; including read-only anonymous CVS access for our users; and including a nice web interface to CVS)
* The sourceforge release system, used to release the files of fink projects and to host backups of source files from other opensource projects
* Bug tracker (and related trackers: for submitted packages, for patches, and so on)

{{Fink_Header}}

[[Category: Fink|SourceForge]]
[[Category: Fink Structure|SourceForge]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Website</title>
    <ns>0</ns>
    <id>1730</id>
    <revision>
      <id>12029</id>
      <parentid>10501</parentid>
      <timestamp>2011-10-29T12:56:00Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <sha1>ff3y5yv8pybhdftns1j4w0m05deklfx</sha1>
      <text xml:space="preserve" bytes="696">{{Fink_Header}}

The contents of the fink website are stored in our CVS repository.  Most portions of the website are constructed by editing XML files, which are subsequently processsed into the files actually used on the website.

TODO: Give more details on the web/html/php vs. XML business.

TODO: Explain about finch.finkproject.org, about how one actually updates the website there (after modifying CVS).

The [[Fink:PackageDatabase|Package Database]] ([[Fink:PackageDatabase|pdb]]) is available at [http://pdb.finkproject.org/pdb/ http://pdb.finkproject.org/pdb/].

TODO: Explain how the PDB and website code tie together?


[[Category: Fink|Web Site]]
[[Category: Fink Structure|Web Site]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Fink Commands</title>
    <ns>14</ns>
    <id>1055</id>
    <revision>
      <id>5121</id>
      <parentid>4846</parentid>
      <timestamp>2006-04-05T22:08:11Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>bob2kctffyq607dft6ak01msftztfnj</sha1>
      <text xml:space="preserve" bytes="54">Fink command-line options.

[[Category:Fink|Commands]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Fink Documentation</title>
    <ns>14</ns>
    <id>1085</id>
    <revision>
      <id>11277</id>
      <parentid>11221</parentid>
      <timestamp>2007-06-11T09:21:04Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of Am1A9x, changed back to last version by RangerRick</comment>
      <sha1>bcx86s7b1er68fmt4qbg2bsx7lgkdwy</sha1>
      <text xml:space="preserve" bytes="57">Fink documentation needs

[[Category:Fink|Documentation]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Fink Infofile Syntax</title>
    <ns>14</ns>
    <id>1054</id>
    <revision>
      <id>5124</id>
      <parentid>4845</parentid>
      <timestamp>2006-04-05T22:09:22Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>anv3g2ckxpwxngkl83c6en8ousae0bx</sha1>
      <text xml:space="preserve" bytes="100">A reference for future development and existing infofile syntax.

[[Category:Fink|Info File Syntax]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Fink Internals</title>
    <ns>14</ns>
    <id>1062</id>
    <revision>
      <id>5125</id>
      <parentid>4847</parentid>
      <timestamp>2006-04-05T22:09:31Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>9d1i948y6tynn4ntfwjnt3m0hlmc1ch</sha1>
      <text xml:space="preserve" bytes="132">Information about the implementation of the &lt;code&gt;fink&lt;/code&gt; command and it's associated perl modules.

[[Category:Fink|Internals]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Fink Packaging</title>
    <ns>14</ns>
    <id>1105</id>
    <revision>
      <id>5126</id>
      <parentid>4848</parentid>
      <timestamp>2006-04-05T22:09:42Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>90mylfw2twr49kldxxmu9p0zhp99zs3</sha1>
      <text xml:space="preserve" bytes="133">Information supplementing the official [http://fink.sourceforge.net/doc/users-guide/ Fink User's Guide].

[[Category:Fink|Packaging]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Fink Policy</title>
    <ns>14</ns>
    <id>1106</id>
    <revision>
      <id>11275</id>
      <parentid>11223</parentid>
      <timestamp>2007-06-11T09:20:37Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of TfiBws, changed back to last version by RangerRick</comment>
      <sha1>2c13hbww80fevdahimi6vha9l04lmwx</sha1>
      <text xml:space="preserve" bytes="185">Information on how to follow Fink packaging policy. More information is found in the official [http://fink.sourceforge.net/doc/users-guide/ Fink User's Guide].

[[Category:Fink|Policy]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Fink Roadmap</title>
    <ns>14</ns>
    <id>1053</id>
    <revision>
      <id>5129</id>
      <parentid>4844</parentid>
      <timestamp>2006-04-05T22:11:44Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>e7z5oeju8pgjkbrhzbf66avmslzgan3</sha1>
      <text xml:space="preserve" bytes="56">The Fink development roadmap.

[[Category:Fink|Roadmap]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Fink Structure</title>
    <ns>14</ns>
    <id>1735</id>
    <revision>
      <id>5130</id>
      <parentid>5096</parentid>
      <timestamp>2006-04-05T22:11:54Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>p8cdnnfzoebssfoam21pmb3g6s7jzyi</sha1>
      <text xml:space="preserve" bytes="100">Information about the structure of the Fink project, and its resources.

[[Category:Fink|Structure]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Fink Trees</title>
    <ns>14</ns>
    <id>1056</id>
    <revision>
      <id>5131</id>
      <parentid>4843</parentid>
      <timestamp>2006-04-05T22:12:04Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>3v4ff3x2v256bs4loeccpiwrpacxszt</sha1>
      <text xml:space="preserve" bytes="122">Broad categorizations of Fink package descriptions based on OS (and cryptographic export status).

[[Category:Fink|Trees]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Packaging:Fink on multiple architectures</title>
    <ns>0</ns>
    <id>1643</id>
    <revision>
      <id>11850</id>
      <parentid>11250</parentid>
      <timestamp>2010-05-06T20:16:33Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <minor/>
      <comment>Removing  {{Fink_Header}}</comment>
      <sha1>2q9zepz2pz0sptuyulznut1rvu6bc61</sha1>
      <text xml:space="preserve" bytes="3769">Recent versions fink contain support for multiple-architecture distributions (unified .info files) by means of a new &quot;Architecture&quot; field. [[User:Dmrrsn|Dmrrsn]]'s proposal that we adopt this new field starting with the 10.4 tree, and that we get this into released fink versions &quot;very soon&quot;, has been implemented.

For ease of initial setup and migration of existing packages to new architectures, this field has a default value of &quot;powerpc, i386&quot;; for packages which are only appropriate for one architecture or the other, a value could be specified.  For example, any package using a compiler earlier than gcc-4.0 should have &quot;Architecture: powerpc&quot; added to it.  We now have [[Fink:Architecture_powerpc|a wiki page]] to help track tagging with this new field.

(The tags &quot;powerpc&quot; and &quot;i386&quot; are the correct ones coming from uname, which are used in the name of binary-darwin-foo directories.  One question is whether we should allow alternates like ppc which fink would translate.)

Note that this mechanism is very flexible: if we ever have a third architecture, we can just add a third tag.

The indexer only indexes those packages whose Architecture field (or its default value) contains the current architecture. That is, &quot;if an Architecture field is present, only index the file if local architecture value is listed&quot;.

If a package needs separate info files for different architectures, they can be given names like foo-powerpc.info and foo-i386.info.  If the version/revision numbers also need to be included, the name could be foo-powerpc-1.1-1.info and so on. The .info filename is not parsed for any metadata (any *.info will be read). To simplify validation, the location of the archname within the filename is now fixed:  the  validator accepts the invariant &lt;i&gt;packagename&lt;/i&gt;, optionally followed by &lt;i&gt;archname&lt;/i&gt;, optionally follwed by &lt;i&gt; distribution&lt;/i&gt;, and finally optionally followed by either &lt;i&gt;version&lt;/i&gt; or &lt;i&gt;version-revision&lt;/i&gt;, each delimited by hyphens.

We have a tag already for the current architecture: %m.  This can be used in forming names of patch files, for example. That also means we can use the existing variant mechanisms and shell logic tests to support Platform-dependent differences in a single .info file. Note that compiled packages are not portable among different architectures (the arch string is part of the .deb filename and control-file metadata), and [[User:Dmacks|DMacks]] doesn't think there is a need to worry about &quot;upgrade paths&quot; among platforms. That means a package that contains platform-dependent differences does not need to have a different revision on each platform or contain %m in the Package field.

Vasi pondered using this opportunity to add a Distribution field as well, since it would have the same indexer-exclusion behavior. If we're gonna have a consolidated tree, let's not be pansies about it. If we needed needed Distribution-based differences for a package, we would need a new %-exp token and also a way to have different Revisions for different values (or else some other way to make the Distribution visible in debian metadata). Also need a way to have different subtypes (conditionals on Type key values, for example, a -pyXX package only has XX=2.1 on distro &lt;= 10.3). But until we figure out a syntax, could just say &quot;if you need different revision in different Distributions, make separate .info files. Seems reasonable...

: So should we go for a unified tree right now?  Should it include 10.3 as well as 10.4? [[User:Dmrrsn|Dmrrsn]]

[[Category: Fink|Packaging Multiple Architectures]]
[[Category: Fink_Roadmap|Packaging Multiple Architectures]]
[[Category: Fink_Infofile_Syntax|Packaging Multiple Architectures]]
[[Category: Fink_Trees|Packaging Multiple Architectures]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:About</title>
    <ns>0</ns>
    <id>1038</id>
    <revision>
      <id>11839</id>
      <parentid>11333</parentid>
      <timestamp>2010-05-06T20:07:07Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <minor/>
      <comment>Removing  {{Fink_Header}}</comment>
      <sha1>6p5zepqw7jvmhxortetrgnec2zy6uav</sha1>
      <text xml:space="preserve" bytes="2876">== What is Fink? ==

Fink is a project that wants to bring the full world of Unix Open Source software to Darwin and Mac OS X. As a result, we have two main goals. First, to modify existing Open Source software so that it will compile and run on Mac OS X. (This process is called porting.) Second, to make the results available to casual users as a coherent, comfortable distribution that matches what Linux users are used to. (This process is called packaging.) The project offers precompiled binary packages as well as a fully automated build-from-source system.

To achieve these goals, Fink relies on the excellent package management tools produced by the Debian project - dpkg, dselect and apt-get. On top of that, Fink adds its own package manager, named (surprise!) fink. You can view fink as a build engine - it takes package descriptions and produces binary .deb packages from that. In the process, it downloads the original source code from the Internet, patches it as necessary, then goes through the whole process of configuring and building the package. Finally, it wraps the results up in a package archive that is ready to be installed by dpkg.

Since Fink sits on top of Mac OS X, it has a strict policy to avoid interference with the base system. As a result, Fink manages a separate directory tree and provides the infrastructure to make it easy to use.

== Why use Fink? ==

Five reasons to use Fink to install Unix software on your Mac:

# Power. Mac OS X includes only a basic set of command line tools. Fink brings you enhancements for these tools as well as a selection of graphical applications developed for Linux and other Unix variants.
# Convenience. With Fink the compile process is fully automated; you'll never have to worry about Makefiles or configure scripts and their parameters again. The dependency system automatically takes care that all required libraries are present. Our packages are usually set up for their maximum feature set.
# Safety. Fink's strict non-interference policy makes sure that the vulnerable parts of your Mac OS X system are not touched. You can update Mac OS X without fear that it will step on Fink's toes and vice versa. Also, the packaging system lets you safely remove software you no longer need.
# Coherence. Fink is not just a random collection of packages, it is a coherent distribution. Installed files are placed in predictable locations. Documentation listings are kept up to date. There's a unified interface to control server processes. And there's more, most of it working for you under the hood.
# Flexibility. You only download and install the programs you need. Fink gives you the freedom to install XFree86 or other X11 solutions in any way you like. If you don't want X11 at all, that's okay too. 

To learn more, go to the [http://fink.sourceforge.net/ Fink home page].

[[Category: Fink|About]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Documentation Jottings</title>
    <ns>0</ns>
    <id>1057</id>
    <revision>
      <id>11569</id>
      <parentid>11568</parentid>
      <timestamp>2009-03-14T22:10:14Z</timestamp>
      <contributor>
        <username>Alexkhansen</username>
        <id>167</id>
      </contributor>
      <comment>/* Obsolete FAQ entries (tentative) */</comment>
      <sha1>rytcckjikg8fl769wgyrl1tjzwu7vmn</sha1>
      <text xml:space="preserve" bytes="16404">{{Fink_Header}}

== Main Page ==
# &lt;s&gt;Add link to this wiki in Resources section.&lt;/s&gt; done--[[User:Alexkhansen|Alexkhansen]] 23:52, 2 Sep 2005 (GMT)
# &lt;s&gt; [http://permalink.gmane.org/gmane.os.apple.fink.devel/11437 Browse CVS link]. Trevor's right...probably best to use whatever link SF puts on the auto-generated [http://sourceforge.net/projects/fink/ project summary page]. Maybe they changed it, or we're using some old alias mechanism? &lt;/s&gt; done --[[User:Alexkhansen|Alexkhansen]] 02:51, 28 February 2006 (GMT)

== FAQ ==

#  Bad permissions on ''.profile''--
There has been a bug report on this for a long time (&lt;s&gt;#1020637&lt;/s&gt; fixed in fink-0.24.11). The problem is that the pathsetup script, when run automatically by the installer, sometimes suffers from a split personality syndrome: In the middle of its execution, it seems to forget that it runs as $USER and starts thinking it is root. Therefore it creates ''~/.profile'' with root as owner (but in the correct home directory of $USER) and worse, when it tests whether the new setting works, itdoes the test as root and concludes that it doesn't work.The only thing usually necessary to repair this is to run &lt;code&gt;sudo chown $USER ~/.profile&lt;/code&gt;
# &lt;s&gt;dmacks: akh: Thinking of obsolete FAQs, the XML::Parser one is obsolete as of intltool-0.34.1-2 unless user has changed his /usr/bin/perl version.&lt;/s&gt;--updated --[[User:Alexkhansen|Alexkhansen]] 01:13, 20 April 2006 (GMT)
# buildlock error--discuss what buildlocks are, and the typical errors
## stale lockfile
## borked status
## working properly
# Bad fonts in QT apps--chown ~/.qt
# Needs GCC 4.0.0 but you have GCC 4.0.1 selected--update fink
# &lt;s&gt;Link to wiki &quot;transient packages page&quot;  http://wiki.opendarwin.org/index.php?title=Fink:Package_issues&lt;/s&gt; done
# &lt;s&gt;Potentially solvable via ''apt-get update'':
&lt;pre&gt;W: Couldn't stat source package list file: unstable/crypto Packages
(/sw/var/lib/apt/lists/_sw_fink_dists_unstable_crypto_binary-darwin-powerpc_Packages) - stat (2 No such file or directory)
W: You may want to run apt-get update to correct these problems&lt;/pre&gt;&lt;/s&gt;
# &lt;s&gt;install yelp to avoid gnome-doc errors&lt;/s&gt;--done [[User:Alexkhansen|Alexkhansen]] 01:37, 6 Sep 2005 (GMT)
# Command-line option to detect misbuilt .la files:  &lt;code&gt;find /sw/lib -name \*.la | xargs grep -l&lt;/code&gt; bad path &lt;code&gt;| xargs dpkg -S&lt;/code&gt;

=== Obsolete FAQ entries (tentative) ===

*&lt;s&gt; [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#four-oh-three Q5.30]: ''I keep getting 403 errors when I use apt-get or dselect or the Fink Commander Binary menu. A: There have been problems with the Sourceforge download servers, and therefore we are moving the binary distribution repository for this very reason.''
** I suppose this move has already happened so does it make sense to keep this entry? [[User:Monipol|monipol]] 02:44, 8 March 2009 (CET)&lt;/s&gt;
** Gone now.--[[User:Alexkhansen|Alexkhansen]] 17:08, 8 March 2009 (CET)

* &lt;s&gt;[http://www.finkproject.org/faq/usage-fink.php?phpLang=en#sf-cvs-2006 Q5.33]: ''I haven't been able to do a cvs selfupdate. A:(...) this is because of a recent restructuring of the CVS servers at sourceforge.net. Fink files are now at fink.cvs.sourceforge.net.'''
** This is, however a good diagnostic for not having updated from 10.4/transitional.  --[[User:Alexkhansen|Alexkhansen]] 16:01, 8 March 2009 (CET)&lt;/s&gt;
** Consolidated with [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#cvs-busy 5.13]--[[User:Alexkhansen|Alexkhansen]] 17:32, 8 March 2009 (CET)

* &lt;s&gt;[http://www.finkproject.org/faq/comp-general.php?phpLang=en#weak_lib Q6.6]: ''After I installed the December 2002 Development Tools I get messages about &quot;weak libraries&quot;. A: This is new with the December 2002 Tools. (...)&lt;/s&gt;''
** Does this still happen? [[User:Monipol|monipol]] 02:44, 8 March 2009 (CET)
** No.--[[User:Alexkhansen|Alexkhansen]] 17:36, 8 March 2009 (CET)
** Gone--[[User:Alexkhansen|Alexkhansen]] 23:10, 14 March 2009 (CET)

* &lt;s&gt;[http://www.finkproject.org/faq/comp-general.php?phpLang=en#freetype-problems Q6.15]: ''I get errors involving freetype. A.: (...) you probably have a binary version that built fine with gcc3.3 on Jaguar but doesn't work on Panther.''&lt;/s&gt;
** Jaguar/Panther reference deleted--[[User:Alexkhansen|Alexkhansen]] 23:10, 14 March 2009 (CET)

* [http://www.finkproject.org/faq/comp-general.php?phpLang=en#gcc2 Q6.17]: ''Fink says I'm missing gcc2 or gcc3.1 but I can't seem to install it.''
** This one's required by VirtPackage.pm--[[User:Alexkhansen|Alexkhansen]] 21:52, 14 March 2009 (CET)

* &lt;s&gt;[http://www.finkproject.org/faq/comp-general.php?phpLang=en#gettext Q6.23]: ''Whenever I try to build from source, Fink keeps waffling between gettext-dev and libgettext3-dev. A.: (...) A permanent fix should hopefully be available in fink-0.24.9.''&lt;/s&gt;
** Has it been fixed? [[User:Monipol|monipol]] 02:44, 8 March 2009 (CET)
** That specific error has been fixed, but there's a general issue with complicated dependency trees where ''fink'' can't figure out how to install the whole mess at once.--[[User:Alexkhansen|Alexkhansen]] 17:36, 8 March 2009 (CET)
** Text modified as above--[[User:Alexkhansen|Alexkhansen]] 23:10, 14 March 2009 (CET)

* &lt;s&gt;[http://www.finkproject.org/faq/comp-packages.php?phpLang=en#cctools Q7.4] ''This somewhat cryptic message means you need to install the December 2002 Developer Tools''&lt;/s&gt;
** Deleted--[[User:Alexkhansen|Alexkhansen]] 23:10, 14 March 2009 (CET)

* &lt;s&gt;[http://www.finkproject.org/faq/comp-packages.php?phpLang=en#cplusplus-filt Q7.6] ''i can't install g77 because c++filt is missing. Where do I get it?''&lt;/s&gt;
** Not sure about this one [[User:Monipol|monipol]] 14:15, 8 March 2009 (CET)
** Still applies, but could probably be generalized to more than ''g77''.  Apple's installer, for whatever reason, sometimes leaves files out.--[[User:Alexkhansen|Alexkhansen]] 17:49, 8 March 2009 (CET)
** Text modernized--[[User:Alexkhansen|Alexkhansen]] 23:10, 14 March 2009 (CET)

* &lt;s&gt;[http://www.finkproject.org/faq/usage-packages.php?phpLang=en#xterm-error Q9.5] '' xterm fails with &quot;dyld: xterm Undefined symbols: xterm undefined reference to _tgetent expected to be defined in /usr/lib/libSystem.B.dylib&quot;. A: This is caused by using a 10.1 version of XFree86 on 10.2. You must upgrade to a 10.2 version.''&lt;/s&gt;
** Removed from the PT translation. [[User:Monipol|monipol]] 03:33, 11 March 2009 (CET)
** Gone from .EN. --[[User:Alexkhansen|Alexkhansen]] 23:10, 14 March 2009 (CET)

* &lt;s&gt;[http://www.finkproject.org/faq/usage-packages.php?phpLang=en#apple-x11-no-windowbar Q9.10] ''I upgraded to Apple's X11 in Panther and now my window title bars are missing.''&lt;/s&gt;
** bye-bye--[[User:Alexkhansen|Alexkhansen]] 23:10, 14 March 2009 (CET)

* [http://www.finkproject.org/faq/usage-packages.php?phpLang=en#wants-xfree86-on-upgrade Q9.12] '' I switched from the 10.2 Fink version to 10.2-gcc3.3 or 10.3, I have Apple's X11, and Fink asks me to install XFree86 or X.org.''
** Removed from the PT translation. [[User:Monipol|monipol]] 03:33, 11 March 2009 (CET)

* [http://www.finkproject.org/faq/usage-packages.php?phpLang=en#special-x11-debug Q9.13] ''I'm still having problems with X11 and Fink.''
** referenced from VirtPackage.pm

=== FAQ entries that could be updated (tentative) ===

* [http://www.finkproject.org/faq/mirrors.php?phpLang=en#where Q3.3]
** Mirrors information has moved to the wiki. [[User:Monipol|monipol]] 15:00, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/mirrors.php?phpLang=en#otherinfogone Q3.5] ''your active tree, e.g. 10.3''

* [http://www.finkproject.org/faq/mirrors.php?phpLang=en#status Q3.7]
** The URL is broken. I don't know if there's still a way to check mirror status. [[User:Monipol|monipol]] 15:00, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/mirrors.php?phpLang=en#where Q5.1] ''Since Fink 0.2.3, there is the list command.''

* [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#firewalled-cvs Q5.3]
** package cvs-proxy, what's its status? [[User:Monipol|monipol]] 15:00, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#bindist Q5.7] ''Make sure you have the Developer Tools installed before you try this. (If there is no installer for the Developer Tools in your /Applications folder, you can get them from the Apple Developer Connection after free registration.)''
** Xcode, and maybe mention the install DVD [[User:Monipol|monipol]] 15:57, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#dselect-access Q5.12] ''http://us.dl.sourceforge.net/fink/direct_download''
** change to http://bindist.finkmirrors.net/bindist [[User:Monipol|monipol]] 15:00, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#cvs-busy Q5.13] ''install the Developer Tools''
** Xcode [[User:Monipol|monipol]] 15:00, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#not-found Q5.15] ''http://us.dl.sourceforge.net/fink/direct_download/source/''
** Remove reference to this URL [[User:Monipol|monipol]] 15:00, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#fink-not-found Q5.16] ''Note: Some older versions fink called this script pathsetup.command instead of pathsetup.sh'

* [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#invisible-sw Q5.17] ''Develop(ment|er) Tools''
** Xcode [[User:Monipol|monipol]] 15:57, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#cant-upgrade Q5.21] ''I can't seem to update Fink's version.''
** Need to update versions (maybe commands too). [[User:Monipol|monipol]] 15:00, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#wrong-tree Q5.24] ''Developer Tools''
** Xcode [[User:Monipol|monipol]] 15:57, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#seg-fault Q5.25] ''/sw/var/lib/fink/prebound/update-package-prebinding.pl''
** I couldn't find this file on my Fink installation (OS 10.5, fink-0.28.7). [[User:Monipol|monipol]] 15:00, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#pathsetup-keeps-running Q5.26] ''/sw/bin/pathsetup.command''

* [http://www.finkproject.org/faq/usage-fink.php?phpLang=en#four-oh-three Q5.30] ''Developer Tools''
** Xcode [[User:Monipol|monipol]] 15:57, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/comp-general.php?phpLang=en#compiler Q6.1] ''Developer Tools''
** Xcode [[User:Monipol|monipol]] 15:57, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/comp-general.php?phpLang=en#cvs Q6.2] ''Developer Tools''
** Xcode [[User:Monipol|monipol]] 15:57, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/comp-general.php?phpLang=en#missing-make Q6.3] ''Developer Tools''
** Xcode [[User:Monipol|monipol]] 16:50, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/comp-general.php?phpLang=en#basic-headers Q6.12] ''Dev(eloper) Tools''
** Xcode Tools. DevSDK.pkg is located under /OptionalInstalls/Xcode Tools/Packages

* [http://www.finkproject.org/faq/comp-general.php?phpLang=en#dlfcn-from-oo Q6.16] ''that is incompatible with Panther (...)  with symbolic links to Panther's builtin files''

* [http://www.finkproject.org/faq/comp-general.php?phpLang=en#xml-parser Q6.20] ''if you're on Panther''

* [http://www.finkproject.org/faq/comp-general.php?phpLang=en#libtool-unrecognized-dynamic Q6.25] ''or use sudo rm -rf /Library/Receipts/DeveloperTools.pkg for 10.3''

* [http://www.finkproject.org/faq/comp-packages.php?phpLang=en#cant-install-xfree Q7.2] ''0.2.x users with up-to-date versions of Fink (&gt;= 0.16.2) and 10.3.x users should skip step 1 below (it won't work anyway). (...) (XFree86-4.4.x as of May 25th, 2004)''

* [http://www.finkproject.org/faq/usage-general.php?phpLang=en#passwd Q8.2]  ''Using the &quot;System Preferences: Users&quot; pane (on 10.2.x) or &quot;System Preferences: Accounts&quot; pane (on 10.3.x) will assign all of their files to a random administrator account, and there have been reports of havoc played with the administrator account's permissions. This is a bug with System Preferences'' Is it still a bug? [[User:Monipol|monipol]] 14:29, 8 March 2009 (CET)
** There's no more NetInfo.app/niutil in OS 10.5. They were replaced by local directory services. Listing (all) users: dscl . list /users. dscl can also be used to remove users. [[User:Monipol|monipol]] 16:50, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/usage-general.php?phpLang=en#x-options Q8.5] ''I'm bewildered by the X11 options: Apple X11, XFree86, etc. What should I install?''

* [http://www.finkproject.org/faq/usage-packages.php?phpLang=en#xmms-quiet Q9.1] ''There have also been reports of XMMS crashing or freezing on 10.1''

* [http://www.finkproject.org/faq/usage-packages.php?phpLang=en#no-server Q9.4] ''In Jaguar, sometimes all of the xfree86 packages get built''

* [http://www.finkproject.org/faq/usage-packages.php?phpLang=en#libXmuu Q9.6] ''You should reinstall it using fink reinstall xfree86-base-shlibs''
** Even if/when it's a virtual package? [[User:Monipol|monipol]] 13:13, 8 March 2009 (CET)
** This is just outdated.--[[User:Alexkhansen|Alexkhansen]] 16:07, 8 March 2009 (CET)

* [http://www.finkproject.org/faq/usage-packages.php?phpLang=en#gnome-two Q9.9] ''I upgraded from GNOME 1.x to GNOME 2.x''

* [http://www.finkproject.org/faq/usage-packages.php?phpLang=en#apple-x11-wants-xfree86 Q9.11] ''I installed Apple's X11 but Fink keeps asking to install XFree86 or X.org. (...) you need to do is reinstall the X11User package (...) Note for Jaguar (X11 beta 3) users (...) If you are running a version of fink prior to 0.17''

* [http://www.finkproject.org/faq/usage-packages.php?phpLang=en#special-x11-debug Q9.13] ''If you are still having problems and you are running fink-0.19.0 or later (...) If you are running an earlier version of fink, then there is a Perl script (courtesy of Martin Costabel (...)''

* [http://www.finkproject.org/faq/usage-packages.php?phpLang=en#tiger-gtk Q9.14] ''After updating to Tiger (OS 10.4), whenever I use a GTK app, I get errors involving _EVP_idea_cbc''
** Maybe remove &quot;After updating to Tiger (OS 10.4)? [[User:Monipol|monipol]] 12:24, 8 March 2009 (CET)
** Since the current minimum version of fink on Tiger has the fix, I think this one can probably go away.--[[User:Alexkhansen|Alexkhansen]] 16:07, 8 March 2009 (CET)

== User's Guide ==
# update source installation page
# [[Fink:Roadmap:New_documentation_needs|New features]] (check if a feature is already in a released fink version first)
# &lt;s&gt;update --keep-*-dir descs on web (both fink.8 and fink.conf.5)&lt;/s&gt; done --[[User:Alexkhansen|Alexkhansen]] 03:29, 2 March 2006 (GMT)

== Other/Misc ==
=== Multilingualization ===
Need to document how to set Japanese properly with Fink packages in X11, terminal and Aqua environments.

=== Translation (Spanish) ===
Hi, I have seen a wrong translation in the spanish version of the Fink home page. You say:

: &quot;hacemos un puerto&quot;

but the spanish translation for: (&quot;port&quot; it) should be

: (lo &quot;portamos&quot;)

In Spanish, a &quot;puerto&quot; means &quot;harbour&quot;, whereas &quot;portar&quot; means to move, to translate into another software system.

=== The Type Field ===
Please see [[Fink:Documentation_Jottings:TypeField]]

=== Packaging Manual ===
bcully: people often get tripped up creating prerelease packages, because the version of the prerelease supersedes the actual release. I'd like to see some notes on this in the packaging manual. They could recommend &lt;tt&gt;dpkg --compare-versions&lt;/tt&gt; to check whether this would happen. I think it'd be good to suggest a format for prerelease package names too. My preference is the form &lt;tt&gt;1.0.9~rc2-1&lt;/tt&gt;. 

=== Moving the documentation to the wiki ===

Please see  [[Fink:Documentation_Jottings:Moving_To_Media_Wiki]]

=== Some random non-structured notes by Monipol (to be organised later) ===

* fink i18n, the code
* glossary (e.g. binary distribution)
* CMS (MediaWiki? + script install docs + script import)
* bash &gt; csh/.cshrc
* backup procedure if CMS
* structure of i18n team
* VirtPackage.pm referencia URL FAQ
* uso de quote ou &amp;quot;
* referências a Jaguar/Panther
* Standard notation for OS versions
* When removing a FAQ entry, check xref and VirtPackage.pm

[[Category: Fink|Documentation Jottings]]
[[Category: Fink_Documentation|Documentation Jottings]]

{{Fink_Header}}</text>
    </revision>
  </page>
  <page>
    <title>Fink:FDN</title>
    <ns>0</ns>
    <id>1692</id>
    <revision>
      <id>11320</id>
      <parentid>11283</parentid>
      <timestamp>2007-06-11T18:37:29Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of RcoY6a, changed back to last version by Dmacks</comment>
      <sha1>ilgm8clakwjhkbvmse4oji9sechaj8l</sha1>
      <text xml:space="preserve" bytes="4241">{{Fink_Header}}
==The Fink Developer Network==

Everyone involved with Fink is interested in improving our service to the community.
For this reason the Fink Developer Network has been created and a certificate
of incorporation has been filed with the Division of Revenue of the state of New Jersey on
'''April 13th 2004'''.

===The Board===
This incorporation has been approved and the first board of trustees consist of the following people:

Christoper Zubrzycki		''(cirdan)''&lt;br&gt;	
Benjamin Reed		''(RangerRick)''&lt;br&gt;	
David R. Morrison		''(drm)''	&lt;br&gt;	
Peter O'Gorman		''(pogma)''&lt;br&gt;	
David Sebastian Hoehn             ''(dmalloc)''&lt;br&gt;

===Paperwork===
Those interested in the official paperwork may review the original letter of
incorporation. The final goal is to reach tax-exempt status granted by the IRS to nonprofit
organizations. While the initial members of the Board of Trustees have financed the
incorporation process, we require some help to ensure the progress of this project.

===Costs===
So far around $1300 from private funds have been invested.
To complete the process of attaining non-profit status an amount of circa $2000
dollar would have to be invested, additional to the money that has already been put into this project. 
The costs can be proportioned as follows:&lt;br&gt;
A $500 retainer has to remain for the quarterly costs of required work by our lawyer.&lt;br&gt;
A $1000 retainer is needed to complete the filing and acquiring non-profit status from the IRS.&lt;br&gt;
Around $100 are needed to pay for business cheques and around $25 a month are
needed to pay for the corporate checking account.&lt;br&gt;
While such costs as the $25 fee for the corporate checking account can be covered by a member of the
Board of Trustees the remaining amount is where we have to rely on your help.

===Donations===
To ensure that you understand what you would donate your hard earned money for
and to explain how we will treat your donation a few words of explanation.
Fink believes in sharing and as such we believe in open book keeping. All
donations made to the '''Fink Developer Network''' are public.
You may request that your name is not listed, yet the amount and the date of
your donation will be made public on the FDN website. 
The amount of money taken from those donated funds and the
reason why will also be made public on the web-site.

You will be donating money to the Fink Developer Network; this is a legally
incorporated company you are not donating money to an individual, but to 
all members of the Board of trustees. 

However, since the Fink Developer Network does not have non-profit status yet, we cannot
offer you any donation receipts to receive tax refunds.  If at all possible we shall issue
retroactive donation receipts once the IRS has confirmed our non-profit status.

===The big why===
Why is the Fink Developer Network important?&lt;br&gt;
There are various good reasons for a Fink Developer Network, the most pressing
ones probably are:&lt;br&gt;
*Putting Fink under a legal umbrella thus partly indemnifying the core developers from most legal threats, as well as protecting them from costly claims for compensation.
*A legally protected way to accept monetary donations as well as donations in kind, ensuring the resources needed to improve and further all services provided to the community by Fink.
*Providing means of actually paying contributors to work full time on packaging or development of Fink
*Providing means to support and afford a build farm
*Providing means to supply core developers with necessary hardware to further develop Fink
*Providing measn to host additional services such as the PDB and Wiki on our own infrastructure, putting it fully under Fink's control
This shall also include the financing and planning of conventions as well as merchandising to fund the
'''Fink Developer Network''' from the revenue of such goods.&lt;br&gt;
We are legally bound to adhere to all the rules and regulations set forth by
the state of New Jersey, additionally we will try to make the '''Fink Developer Network''' as transparent as
we possibly can.&lt;br&gt;
Right now we are dependant on your help. If you feel that you would like to do
so, please provide us with as much feedback as you can!

[[Category:Fink|FDN]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:FDNFeedB</title>
    <ns>0</ns>
    <id>1693</id>
    <revision>
      <id>11327</id>
      <parentid>11297</parentid>
      <timestamp>2007-06-11T18:40:06Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of YvrNne, changed back to last version by Dmacks</comment>
      <sha1>9r5g2tx2kwetkv390usc7f2mekapn3r</sha1>
      <text xml:space="preserve" bytes="547">{{Fink_Header}}

===Comments about the Bylaws===

===Comments about the Donation Process===

===Comments about record keeping===

===Comments about FDN's purpose===

===Comments about reliability and accountability===

===Miscellaneous Comments===
* Perhaps we should investigate [http://conservancy.softwarefreedom.org/?news the Software Freedom Conservancy] to see if they can help us with any of our stuff.  (article [http://arstechnica.com/news.ars/post/20060403-6508.html here]) -[[User:RangerRick|RangerRick]]

[[Category:Fink|FDN Feedback]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:FDNPayPal</title>
    <ns>0</ns>
    <id>1700</id>
    <revision>
      <id>11236</id>
      <parentid>11155</parentid>
      <timestamp>2007-06-11T09:01:53Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of Uk4Jik, changed back to last version by RangerRick</comment>
      <sha1>rze8u8t3721l09vxi92ircit04zt8ut</sha1>
      <text xml:space="preserve" bytes="1116">{{Fink_Header}}

===Compliance===
Below is a short conversation I had with PayPal. In principle everything is ok, as long as we follow the general rules described in the mail.

   Not for Profit Compliance QID532 (KMM40262141V56374L0KM) :kf1 
   Dear David H.,
   I apologize for the length of time that has passed between your email
   and the sending of this reply. Should you wish to accept donations
   through PayPal, you will have to make clear the nature of your
   organization, the use to which the money will be put, and whether or not
   the donations are tax deductible. It would also be best that you have a
   bank account owned by the organization and not an individual attached to
   the account. It looks as though your group would not qualify as a
   charity, however, as long as you heed the above, there should be no
   problem for you to accept donations on PayPal.
   We appreciate your patience and understanding regarding this matter, and
   wish you continued success on PayPal.
   Sincerely,
   Jim R.
   PayPal Compliance Department
   PayPal, an eBay Company

[[Category:Fink|FDN PayPal]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:FinkMakeMoney</title>
    <ns>0</ns>
    <id>1703</id>
    <revision>
      <id>11336</id>
      <parentid>11308</parentid>
      <timestamp>2007-06-11T18:42:52Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of OlvJ36, changed back to last version by Dmacks</comment>
      <sha1>5kjug68icitebb07p3oquiozcf3de9z</sha1>
      <text xml:space="preserve" bytes="2410">{{Fink_Header}}

==Advertisement==
* Use Text-Link ads which are not contextual and priced flat [[http://www.text-link-ads.com/ Text-Links]]
* Sell &quot;Donation&quot; via [[https://checkout.google.com/ Google checkout]]
* Use AVN Ads [[http://www.avnads.com/ | AVN]]
* Use Kontera contextual ads as they are less intrusive [[http://kontera.com/default.aspx?id=49#a86 Kontera FAQ]]
* Have Google Adsense enabled for the Package Database [[User:Dmalloc|Dmalloc]]
  Known issue: Adsense has a return Value of about 4 to 5 US dollar for every 1000 impressions.
  Page loading will be slowed down.
* Open a [[http://www.cafepress.com/cp/info/sell/intro_cost| Shop]] with Caffepress.com [[User:Dmalloc|Dmalloc]]
  Note: There are many designs left over from the logo contest where we own the rights.
  That could be a very good way of making a quick revenue.
* Affiliate Programms. [[http://platinumpartner.com/index.asp?show=faq| Platinumpartner]] seems like a good choice as well as [[http://www.shareasale.com/affiliate-learnmore.cfm| Sharesale]] [[User:Dmalloc|Dmalloc]]
** For general information consult this [[http://forums.digitalpoint.com/forumdisplay.php?f=20| Forum]]
  Note: This would violate our no ads policy. This would only work for none sourceforge locations.
* Open a [[http://www.spreadshirt.net/| Shop]] with Speadshirt.net [[User:Dmalloc|Dmalloc]]
  Note: This is especially well suited for the European market.
* Sell AdSpace via [[http://www.adbrite.com/mb/publisher_landing_page.php| Adbrite]] [[User:Dmalloc|Dmalloc]]
  Note: This violates our no ad policy and it would nto work on Sourceforge.

==Book==

* Publish a Fink User and Developer Manual. [http://www.network-theory.co.uk Network Theory] publish books about free software that are freely redistributable. [[User:Bmaret|Bmaret]]
  Note: Most (all?) of the material is already present on Fink website and Fink wiki.

==National Science Foundation Grant ==

* Fink has helped to bring computing infrastructure to the research community.  In my field (biophysics) it has made a major impact.  This looks like one possible NSF program: [http://www.nsf.gov/pubs/2006/nsf06551/nsf06551.htm  Computing Community Consortium (CCC): Defining the Large-Scale Infrastructure Needs of the Computing Research Community]

[[User:Wgscott|wgscott]]

Full Proposal Deadline(s) (due by 5 p.m. submitter's local time):

June 10, 2006

[[Category:Fink|Money]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Maintaining Maintainership</title>
    <ns>0</ns>
    <id>1710</id>
    <revision>
      <id>11335</id>
      <parentid>11310</parentid>
      <timestamp>2007-06-11T18:42:47Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of JfhHxb, changed back to last version by Dmacks</comment>
      <sha1>3p1rg9huc0st7ocegboi579gz1dbilp</sha1>
      <text xml:space="preserve" bytes="622">{{Fink_Header}}

== Keeping Active ==
Since historically maintainers have often vanished with no notice, the following formula should be applied:

# A report of no contact with a maintainer (especially a bouncing email addreess) is noted on the mailing lists or on IRC.
# A second attempt is to be made by a Fink developer, preferably on a different email address if known.
# Once four weeks have elapsed after the initial notification of an unresponsive maintainer, their packages are fair game to be taken over, turned over to fink-devel, etc.

[[Category:Fink|Maintainership]]
[[Category:Fink_Packaging|Maintainership]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Major New Feature Plans:NonAutomatic field</title>
    <ns>0</ns>
    <id>1655</id>
    <revision>
      <id>11260</id>
      <parentid>11192</parentid>
      <timestamp>2007-06-11T09:10:57Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of AepOhn, changed back to last version by Dmacks</comment>
      <sha1>074vwnykfd98m0vmx6y2sgifdtaw5um</sha1>
      <text xml:space="preserve" bytes="5393">{{Fink_Header}}

As a step towards building a better system for automated testing of Fink packages, I propose a new field, &quot;NonAutomatic&quot;, in .info files to designate those packages that cannot be built automatically.  The comma-separated values listed in this field would be limited to just a few prescribed ones (like the License field), to be enforced by the validator.  When the field is used, the reason for it should be described in DescPort or DescPackaging.  

The following are the initially-proposed values:

* &lt;code&gt;AquaRequired&lt;/code&gt;
: To be used when compiling requires access to a running Aqua window manager.  There are 12-15 such packages at the moment.
: &lt;s&gt;If instead we had a &lt;code&gt;system-aqua-display&lt;/code&gt; virtual pacakage, we could just &lt;code&gt;BuildDepends&lt;/code&gt; on that and then fail due to the usual missing-dep mechanism. This would be useful even in for non-automated builds. [[User:Dmacks]] is working on it (thanks [[User:msachs]] for the code!)&lt;/s&gt;No, because display accessibility might be different for root (via dpkg) than for CompileScript (due to --build-as-nobody). Would have to have added magic for that BuildDepends value, at which point it would be less confusing to have a different field for this different behavior.

* &lt;code&gt;X11Required&lt;/code&gt;
: This is more often encountered during package self-tests, but it's sometimes seen in ./configure and it could be hard to patch around it. &lt;s&gt;Alternately, we could have a &lt;code&gt;system-x11-display&lt;/code&gt; virtual package.&lt;/s&gt;

* &lt;code&gt;HumanIntervention&lt;/code&gt;
: To be used when the package requires human intervention either to build or to install.  For example, a person might need to interact with a postinstall script the first time the package is installed, or a non-free License might need to be accepted as the package is compiled.  (Human intervention in the building and installing of packages should be avoided whenever possible, and maintainers should discuss the need for it in fink-devel before creating/committing packages which need this flag.)

* &lt;code&gt;ExternalResourceRequired&lt;/code&gt;
:  To be used for various system-foo packages that cannot be built or cannot be installed unless a resource external to Fink is present.  (This includes mac-growl-pm*, which requires an external installation of GROWL, for example, even though the word &quot;system&quot; does not appear anywhere.)  To be clear about this: the non-external resources will be those things available from Apple.  This means XCode including all compiler packages, the gcc-legacy stuff on the powerpc platform, and X11 (including the SDK).

* &lt;code&gt;RootRequired&lt;/code&gt;
: To be used for packages that cannot be built in &lt;code&gt;--build-as-nobody&lt;/code&gt; mode. There are still a handful of packages that fail to build (or build incorrectly) in this mode, but this mode is important to protect the integrity of the autobuilder system itself. Maintainers should fix packages to work as nobody whenever possible.

* &lt;code&gt;NetConnectionRequired&lt;/code&gt;
:  To be used for packages that cannot be build without an active network connection.  (Suggested by  [[User:ChrisDolan|ChrisDolan]])

I don't particularly like the above names, and would be happy if someone could think of better ones! Maybe drop &quot;Required&quot; from the value strings to make linguists happy?
#: Good idea, but then maybe the field should be called &quot;OtherRequirements&quot; with possible values &quot;Aqua&quot;, &quot;HumanIntervention&quot;, &quot;ExternalResource&quot;, &quot;Root&quot;, or &quot;NetConnection&quot;. [[User:Dmrrsn|Dmrrsn]]

Questions:
# How should we handle packages that have dependencies on these packages? If foo is NonAutomatic:ExternalResourceRequired and bar:Depends:foo, should bar be: 1) NonAutomatic:ExternalResourceRequired, 2) NonAutomatic:NonAutomaticDependency, or 3) not tagged explicitly?
#: I say it should not be explicit, so that if foo changes its behavior, then bar doesn't need to be updated.  If we care, then Fink can propagate this data at runtime. [[User:ChrisDolan|ChrisDolan]]
#: I concur (and I think drm's on board too after discussing it in #fink). In addition, if builder doesn't attempt to build pkg because it is flagged, we only learn that it is flagged. If it doesn't build because a dependency could not be built &lt;i&gt;for whatever reason&lt;/i&gt; (maybe it's flagged, maybe it's just bugged) we learn where to look to start resolving the issue. [[User:Dmacks|DMacks]]
#: Let's think about an example here.  The package system-tetex is designed as a placeholder for people who have installed Gerben Wierda's tetex distribution.  It builds automatically OK, even when the external tetex is absent, but can't be installed.  However, the package xdvi-system-tetex, which is essentially a variant of the xdvi package to work with system-tetex, can't be built because it has a builddependency on system-tetex.  Which of these should be flagged?
#: Another, similar, example: a package called system-viha which is a placeholder for an external resource, which can be built but not installed if the resource is absent.  And then there is the package &quot;kismet&quot; which won't build unless system-viha is installed.  Same question: which of these should be flagged?  [[User:Dmrrsn|Dmrrsn]]

{{Fink_Header}}

[[Category: Fink|New Feature Plans NonAutomatic Field]]
[[Category: Fink_Roadmap|New Feature Plans NonAutomatic Field]]
[[Category: Fink_Infofile_Syntax|New Feature Plans NonAutomatic Field]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Major New Feature Plans:InheritedBuildDepends</title>
    <ns>0</ns>
    <id>1048</id>
    <revision>
      <id>11339</id>
      <parentid>11316</parentid>
      <timestamp>2007-06-11T18:44:51Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of Ri5Ef5, changed back to last version by Dmacks</comment>
      <sha1>dime0c1zkhcr06bxji3e9l9d3e29k1k</sha1>
      <text xml:space="preserve" bytes="7510">{{Fink_Header}}

==Inherited Build Depends==

===The idea===

Often a package needs not just another package as a BuildDepends, but also a bunch of associated packages. For example, every package that BuildDepends on gtk+2-dev also wants atk1. The solution is for gtk+2-dev to have InheritedBuildDepends:atk1, which will then automagically become a BuildDepends for every package that BDeps on gtk+2-dev.

* I think we're gonna uncover a huge dependency mess when we implement this (in whatever form). We have cases where foo:Depends:libbiff,libboff, with libbiff:Depends:libbar1 libboff:Depends:libbar2. Formally, that means to compile foo, we may need both libbar1 and libbar2 header packages concurrently, even though that's an impossible situation. Practically, we now install either libbar1 or libbar2 headers and pray that if foo accesses a libbar* symbol as a result of it being exposed by libbiff or libboff and passed back to that lib, the symbol is compatible between the libbar* (or we happen to BuildDepends on the &quot;right&quot; one). That is, we wind up linking foo with -lbar and hoping for the best. It usually works out so far with at most a linker warning, thanks to two-level namespaces and &quot;most&quot; symbols not chaning &quot;that much&quot; between ABIs of a lib. [[User:Dmacks|dmacks]]

===The rule===

The basic rule for expanding BuildDepends is: If X bdep Y, then X bdep y for all y in IBD(Y). This is applied recursively!

===Example===

&lt;pre&gt;Package: foo
BuildDepends: foo-bdep
InheritedBuildDepends: foo-ibd
&lt;/pre&gt;

&lt;pre&gt;Package: bar
BuildDepends: bar-bdep
InheritedBuildDepends: foo, bar-ibd
&lt;/pre&gt;

&lt;pre&gt;Package: iggy
BuildDepends: bar
&lt;/pre&gt;

When asked to resolve the build depends, Fink should yeild the following results:

* foo: foo-bdep, foo-ibd
* bar: bar-bdep, foo, foo-ibd, bar-ibd
* iggy: bar, foo, foo-ibd, bar-ibd

===Stumbling blocks===

* If IBD applies to the package that lists it (foo:IBD:foo-ibd propagates as foo:BD:foo-ibd) we have to make sure to exclude pkgs from the current build set (&quot;this .info&quot;) when doing IBD-&gt;BD for building that file. '''BUG''': current BD processor in the engine does this but buildlock does not.

* I think that duplicate listings of a package with different versions are OK for now, as Fink will always pick the highest version of a package. But this is something to keep in mind!

* At what level do we want to insert the IBDs? In pkglist*? In get_depends? In resolve_depends? 

* While we're at it, maybe we should rewrite resolve_depends to use the lol model?

* Are there situations where a pkg that one might use as a Depends would want IBD functionality? Recursing down Depends looking for IBD is a giant mess, so one would have to know this in advance in order to list it as a BuildDepends also. Or we could enforce that IBD is only for BDO:true packages, which would never be a Depends so no problem.
** I see IBD as a tool only for BDO packages. If it turns out later that it's useful for non-BDO stuff as well, we can deal with that when we get there. (drm's input would be useful here though.)
** (drm's input) If we also implement the proposed RunTimeDepends, we will have three kinds of depends fields: BD which is only enforced at build time, D which is enforced both at build time and at runtime, and RTD which is enforced only at runtime.  At build time, we are relying on dependencies which are specificed in .info files, whereas at runtime we are relying on dependencies which have been written out to .deb files.  Now we already recurse on the Depends field at buildtime (and dpkg/apt-get do so at &quot;runtime&quot;, i.e., install time for the pkg).  The RTD field will be irrelevant at build time.  So the only one we need to worry about recursion on is BD.  That is the point of IBD, and I don't see how it would ever be applied to entries in the Depends field.
** (more drm input) So I guess the short answer is: package authors should put into IBD any of the buildtime dependencies which should be inherited but which can't be &quot;Depends&quot;.  This essentially means BDO packages.
* Have to store IBD in the .deb and make sure to read IBD of the actual version installed, since the .info present may be for a different revision that has different IBD.
* Pkgs with IBD will have to Depends:fink (&gt;= &lt;i&gt;wherever it gets implemented&lt;/i&gt;) and that fink will have to Depends on dpkg that supports the new field.

===Potential extensions===

* After phase_install, parse .pc and .la in each %d and automatically add items to IBD lists:
** .pc: add pkgs containing .pc for libs listed in Requires field and also &quot;pkgconfig&quot; itself.
** .la: add pkgs containing .la files listed in dependency_libs field
** (vasi ponders) '''NOTE:''' This could be very annoying for large builds, if we can't know what the actual BDeps are until we've built a whole bunch of stuff.
** (drm again) I would much rather see this be done by the validator.  To make sure we have determinacy in this process, our IBD processing should be limited to stuff which is actually in the .info database at the time of buliding.
** (dmacks clarifies) This is actually the opposite approach to the current IBD thought...instead of a package declaring IBD (&quot;what does some other package need to link against me?&quot;) it would declare BD (&quot;what I need to get built&quot;) and then fink would decide what is needed to link against me. Essentially upgrade some BD to IBD.Can't do it both ways in a single pkg obviously...no magic, gotta list '''something'''...that means this is still deterministic at the start of a large build set.

===Alternate solution===

* Weaken the &quot;nothing may Depends on a BDO package&quot; policy to &quot;only BDO packages may Depends on a BDO package&quot;. Then we can use normal Depends so that a -dev automatically drags along anything else needed to compile against it.
* Arguments:
** pro: useful for people using Fink to install -dev for their own (!fink) uses. BDO only works for things compiled within Fink.
** pro: don't gotta mess with a whole new type of dependency check in the engine.
** con: creates a hole in the swappy code? Engine may not realize these other things got removed, then tries to install things that depend on them.
* Implementation plan (CVS tag &quot;bdo_depends&quot;, which is only the changed files; all others are the versions that existed at the same time):
** &lt;s&gt;adjust phase_activate so that when installing a BDO package that conflicts/replaces some other package, do a recursive removal of that other package first.&lt;/s&gt; '''done'''
** &lt;s&gt;adjust BDO violation check.&lt;/s&gt; '''done'''
** move messages noting recursive-removal into main engine planning stage instead of phase_activate so no secondary confirmation question needed during each install.
** If we recursive-remove some BDO stuff, then we also have to be able to recursive-install it if it's needed later, no? [[User:Vasi|Vasi]]
** Sure. Something that Depends on a thing that got removed (either explicitly or via recursion) would cause the thing that got removed (along with all its dependencies) to get installed. No, I don't have a clever way in mind to automatically reinstall stuff later that got removed automatically (recursively) in the manner of the swappy-code. I really hate our recursive &quot;and forget once we've handled it&quot; dep engine! [[User:Dmacks|dmacks]] 

{{Fink_Header}}

[[Category: Fink|New Feature Plans InheritedBuildDepends]]
[[Category: Fink_Roadmap|New Feature Plans InheritedBuildDepends]]
[[Category: Fink_Infofile_Syntax|New Feature Plans InheritedBuildDepends]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Packaging:Obsolete Packages</title>
    <ns>0</ns>
    <id>1593</id>
    <revision>
      <id>12053</id>
      <parentid>11985</parentid>
      <timestamp>2012-03-29T09:39:27Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <comment>/* Mark the package as obsolete */ Explain that obsolete splitoffs should use RuntimeDepends: f-o-p</comment>
      <sha1>675mys84ecow6pqc9yvub6p3wtz08e1</sha1>
      <text xml:space="preserve" bytes="6947">{{Fink_Header}}

This page explains a new feature available starting in fink-0.26.0

Over time, packages sometimes get renamed or entirely replaced by other packages. The &quot;obsoletes&quot; mechanism provides a way to deal with the migration to the new package-name for users and package maintainers.

==The situation==

Package upgrades sometimes involve changes to the package name, but fink does not have a direct way to specify such an upgrade path. For example, when an old foo-ssl/foo pair is replaced by a single foo (or other variant removal situation), a user may have foo-ssl installed. How does the user know that &quot;new version of foo replaces old foo-ssl&quot; without having foo already installed?

A similar problem may occur when shared-library packages contain a -bin or other userland component and the major libversion changes: how do we indicate the upgrade path from foo1-bin to foo2-bin? This could be used in conjunction with migration to [[Fink:Policy:system-openssl|-unified packages]].

Finally and more generally, a maintainer may decide that a certain package is no longer needed, and its files get redistributed among other packages. How can other packages that need those files and previously depended on the package that formerly contained them be alerted to change to the new dependency?

Note that all these cases involve direct &quot;drop-in&quot; replacements of the old packages. At this time, I do not think &quot;old library versions&quot; are candidates for this system precisely because one cannot assume that simply using a different library-version will always work: by definition, a new library-version means that symbols are likely removed and/or other completely incompatible interface changes have been made. Also, one cannot always change a package's dependency on a lib &quot;in a vacuum&quot;: specific lib-versions may be inherited from dependencies (down the dep tree), and changes may require cascading dependency changes (up the dep tree).

==The solution==

When a package &quot;foo&quot; is obsolete and to be replaced by a package &quot;bar&quot;, the maintainer needs to do two things in package &quot;foo&quot;:

===Provide a clean upgrade path===
Package &quot;foo&quot; must still exist as long as other packages use it and/or users might still have it installed. Therefore, one creates a new revision (or version) of it that Depends on whatever package(s) and version(s) now supply its former contents. A user can thus upgrade from his old &quot;foo&quot; to this new one without having to know to install the different package-name.

This package &quot;foo&quot; would be Type:bundle or else some other dummy package format. If not Type:bundle, remember to create a share/doc/%n/README or touch a file share/doc/installed-files/%n, as packages that do not contain any files are forbidden.

====Handling user-land executable packages====
There might be a reason to keep the actual contents instead of just providing a dummy upgrade package. For example, a certain user-land executable might be in a new package-name but the maintainer wants to keep the old one around for a while. In this situation, one would obviously keep the old package as a real one with contents and not a bundle with Depends on the new one. This does not provide an obvious upgrade path, but the maintainer does not want to make the upgrade mandatory. The best solution might be a DescUsage or DescDetail note about the new package to use instead.

===Mark the package as obsolete===
To mark the package &quot;foo&quot; as obsolete, list &quot;fink-obsolete-packages&quot; in its Depends field. However, if you are making a splitoff obsolete, then you should use 
  RuntimeDepends: fink-obsolete-packages
  BuildDepends: fink (&gt;= 0.32)
instead. Otherwise, building the main package (or any of the non-obsolete splitoffs) will cause fink-obsolete-packages to be installed, which is undesirable. But when using RuntimeDepends, f-o-p gets only installed when a user tries to actually install the obsolete splitoff. 

In addition to adding the dependency, you must change the Description field to reflect that the package is obsolete. There are two alternatives here: If your packages has a specific unique successor package 'bar', then use this:
     Description: OBSOLETE use package 'bar' instead
If there is no clear successor, use this (and provide the promised extra information in DescDetail)
     Description: OBSOLETE use 'fink info %n' to learn more

Once you have done this, Fink automatically treats package &quot;foo&quot; as obsolete in several ways:
* &lt;code&gt;fink cleanup --obsolete-packages&lt;/code&gt; will attempt to remove obsolete packages. Due to the upgrade-path dependencies (see above) the user already has the actual new package installed, so the obsolete package is not needed from the user's perspective.
* When a user needs to choose among several alternative packages to satisfy a dependency, obsolete packages are marked as such and are presented last in the list. This encourages the user to choose the modern package and avoid having the obsolete package installed.
* When fink is run in &lt;code&gt;--maintainer&lt;/code&gt; mode, an error is generated when a package has a dependency that is preferentially satisfied by an obsolete package. This encourages the maintainer to write dependencies on the modern package, avoids forcing users to install the obsolete package, and helps excise the obsolete package from the dependency tree.
There are some special concerns related to headers packages and other situations where a package that is &lt;code&gt;BuildDependsOnly: true&lt;/code&gt; becomes obsolete. If foo-dev is renamed to foo1-dev, foo-dev is obsolete and foo1-dev is a normal package with &lt;code&gt;BuildDependsOnly: true&lt;/code&gt;. The whole purpose here is for other packages that have a dependency on the old package-name (foo-dev) to behave &quot;correctly&quot; instead of breaking. Thus, foo-dev has &lt;code&gt;Depends:foo1-dev, fink-obsolete-packages&lt;/code&gt;. Ordinarily, a dependency on a BDO package is forbidden, however, it is allowed when the dependant package is marked as obsolete. Note that the obsolete package should still be marked with the same BDO tag as the new package, again so that packages that have dependencies on the old package get the correct BDO signals.

The obsoletes mechanism is for packaging changes, not for changes handled by other means such as Shlibs Policy &quot;new package-name for new install_name&quot; situations. You should ''not'' obsolete a library or headers package when a new major libversion is packaged. That is, if there was foo1-{dev,shlibs} and then foo2-{dev,shlibs} is added, foo1 is still a completely valid package (and indeed some dependants may never be able to convert to using foo2 because the the lib interface may have changed compared to foo1). Therefore, neither foo1-dev nor foo1-shlibs should be marked as obsolete.

{{Fink_Header}}

[[Category: Fink|New Feature Plans Obsoletes]]
[[Category: Fink_Roadmap|New Feature Plans Obsoletes]]
[[Category: Fink_Infofile_Syntax|New Feature Plans Obsoletes]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Mentoring</title>
    <ns>0</ns>
    <id>1098</id>
    <revision>
      <id>11419</id>
      <parentid>11096</parentid>
      <timestamp>2008-02-03T21:16:35Z</timestamp>
      <contributor>
        <username>Gecko2</username>
        <id>801</id>
      </contributor>
      <comment>/* The list */</comment>
      <sha1>l4au3tetataiavzw0uvvf6ldtzt3r3b</sha1>
      <text xml:space="preserve" bytes="1476">{{Fink_Header}}

== DRAFT ==

=== Intro ===

Our submission system often results in submitted packages languishing on the tracker, and submitters who just sit around waiting and never become full developers. To accelerate the new maintainer process, we'd like to experiment with a mentor system.

Package submitters can add themselves to the list to indicate that they'd like to find a mentor. Then existing developers can add their name next to someone who they'd like to mentor, and get in contact with the mentee via email or the submission tracker.

Here's a link to the [http://sourceforge.net/tracker/?atid=414256&amp;group_id=17203&amp;func=browse submission tracker] for convenience. And here's an example entry in the mentoring list:

# John Doe (jdoe499) [10.3,10.4] - Bob Developer (bob123) [10.4]

Each entry should include the SourceForge username for each person. It should also include the platforms that each person has available to them, so mentors can test their mentee's packages.

=== The list ===

# Philip Lamb (philip_lamb) [10.4] - Alexander Hansen (alexkhansen) [10.3, 10.4]
# Kevin Horton (rv8) [10.4] -Bill Scott (wgscott) [10.4]
# Neil Tiffin (ntiffin) [10.4] - Max Horn (fingolfin) [10.4]
# Trevor Harmon (vocaro) [10.4]
# Andrea Riciputi (ariciputi) [10.4]
# Matthias Ringwald (freckle) [10.4]
# Lars Eggert (larse) [10.4]
# Andreas Gockel (gecko2) [10.5/ppc, 10.5/i386]

{{Fink_Header}}

[[Category:Fink|Mentoring]]
[[Category:Fink Packaging|Mentoring]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Notification Plugins</title>
    <ns>0</ns>
    <id>1115</id>
    <revision>
      <id>11322</id>
      <parentid>11286</parentid>
      <timestamp>2007-06-11T18:38:57Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of MitM3j, changed back to last version by Dmacks</comment>
      <sha1>77hoirt6u4hui4h32m0ot6f8iw4nojs</sha1>
      <text xml:space="preserve" bytes="2895">{{Fink_Header}}

== About Notification Plugins ==

Fink has the ability to notify you of what it's doing in a number of ways.  For details on the plugins that are available in your Fink installation, run &lt;code&gt;fink plugins&lt;/code&gt;. Since [[Fink:Roadmap:0.26_new_features|version 0.26]] fink supports more than one plugin at a time.

== Configuring Notification Plugins ==

To enable a specific notification plugin, you must edit &lt;code&gt;/sw/etc/fink.conf&lt;/code&gt;, and add the line:

  NotifyPlugin: '''PluginName'''

=== Null ===

This plugin is used when no other plugin is available.  It does nothing!

=== Growl ===

This plugin will give you notifications through [http://www.growl.info Growl] (which can itself be configured to give you info in many different ways).  This is the default plugin if Growl is available, otherwise the '''Null''' plugin is used.  For Fink to find it, you must install Growl manually (and, when asked, make sure you install it globally, not just for your user), and you '''must''' have Mac::Growl installed for the perl version that is your system perl (ie, the perl in &lt;code&gt;/usr/bin/perl&lt;/code&gt;). Mac::Growl is available in fink (the &lt;code&gt;mac-growl-pmXXX&lt;/code&gt; package), or, if you must, you can get Mac::Growl from cpan.

You can get the perl version by running &lt;code&gt;/usr/bin/perl --version&lt;/code&gt;.

  $ /usr/bin/perl --version
  
  This is perl, v5.8.6 built for darwin-thread-multi-2level
  (with 2 registered patches, see perl -V for more detail)
  
  $ fink list mac-growl
  Information about 5200 packages read in 8 seconds.
       mac-growl-pm581                        0.7-10                        Perl module for GROWL notification system
       mac-growl-pm586                        0.7-10                        Perl module for GROWL notification system
  $ fink install mac-growl-pm586

[[Image:Fink_Growl.png|center]]

=== QuickSilver ===

[http://quicksilver.blacktree.com/ Quicksilver] is a system tool that does many things, including Growl-like notifications and Spotlight-like search and application launching.  To use '''Quicksilver''' notifications, just [http://quicksilver.blacktree.com/ install QuickSilver] and set &quot;&lt;code&gt;NotifyPlugin: QuickSilver&lt;/code&gt;&quot; in your &lt;code&gt;fink.conf&lt;/code&gt;.

=== Say ===

Uses &lt;code&gt;osascript&lt;/code&gt; to notify you with Apple's text-to-speech engine.  To use '''Say''' notifications, just set &quot;&lt;code&gt;NotifyPlugin: Say&lt;/code&gt;&quot; in your &lt;code&gt;fink.conf&lt;/code&gt;.

=== Syslog ===

Uses &lt;code&gt;/usr/bin/logger&lt;/code&gt; to log Fink actions to &lt;code&gt;/var/log/system.log&lt;/code&gt;.  To use '''Syslog''' notifications, just set &quot;&lt;code&gt;NotifyPlugin: Syslog&lt;/code&gt;&quot; in your &lt;code&gt;fink.conf&lt;/code&gt;.

== Writing Notification Plugins ==

You need to make a perl module that &lt;code&gt;@ISA(Fink::Notify)&lt;/code&gt;.  For more information, run &quot;&lt;code&gt;perldoc Fink::Notify&lt;/code&gt;&quot;.

{{Fink_Header}}

[[Category:Fink|Notification Plugins]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Orphaned</title>
    <ns>0</ns>
    <id>1097</id>
    <revision>
      <id>11325</id>
      <parentid>11291</parentid>
      <timestamp>2007-06-11T18:40:03Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of Js6Ehr, changed back to last version by Dmacks</comment>
      <sha1>7j2ix9th19tkfhmmev1lb0ezrc4hcpx</sha1>
      <text xml:space="preserve" bytes="3932">{{Fink_Header}}

== DRAFT ==

=== For existing developers ===

If you no longer want to maintain a package, you have two choices:

# Mark the package as orphaned, by adding it to this page. This is done if you ''can'' still maintain the package, but would like to have it taken off your hands eventually. A good reason to do this is if you don't have enough time to keep up with new versions and bugfixes for all your packages. 
# Drop the package immediately, by setting the Maintainer field in the package to &lt;tt&gt;None &lt;fink-devel@lists.sourceforge.net&gt;&lt;/tt&gt;. You should do this if, for example, you no longer have access to a Mac, or if you lose interest entirely in maintaining packages.

If you say that you're willing to help a new maintainer take over your package, it is that much more likely that someone will want to take it on.

=== For new developers ===

This is a list of packages which developers wish to stop maintaining. If you're looking for a new package to maintain these are often good choices, since you'll already have a working .info file to use as a starting point. There will also already be a developer familiar with the package, who may be willing to help you out.

There is also a list of [http://fink.sourceforge.net/pdb/nomaintainer.php packages which are already totally abandoned].

=== The list ===

{| border=&quot;1&quot; cellpadding=&quot;2&quot;
! Package(s) !! Maintainer !! Willing to help? !! Details
|-
| gabber, gabber-ssl || fingolfin || yes ||
|-
| jabber || fingolfin || yes ||
|-
| snns || fingolfin || yes ||
|-
| xmms-crossfade || fingolfin || yes ||
|-
| eggdrop || fingolfin || yes ||
|-
| libcroco3 || vasi || yes || Typical Library package
|-
| sane-backends || pogma || yes || Scanner Access Made Easy - now out of date
|-
| openjade || pogma || yes ||
|-
| opensp* || pogma || yes ||
|-
| mysql* || pogma || yes || Needs to be kept up to date
|-
| [http://pdb.finkproject.org/pdb/package.php/gtk-canvas gtk-canvas] || wgscott || yes || Dependency for [http://pdb.finkproject.org/pdb/package.php/coot coot] - needs [[Talk:Fink:Orphaned|more knowledgeable maintainer]]
|-
| [http://pdb.finkproject.org/pdb/package.php/guile16-goosh guile16-goosh] || wgscott || yes || Dependency for [http://pdb.finkproject.org/pdb/package.php/coot coot] - needs [[Talk:Fink:Orphaned|more knowledgeable maintainer]]
|-
| [http://pdb.finkproject.org/pdb/package.php/guile16-gtk guile16-gtk] || wgscott || yes || Dependency for [http://pdb.finkproject.org/pdb/package.php/coot coot] - needs [[Talk:Fink:Orphaned|more knowledgeable maintainer]]
|-
| [http://pdb.finkproject.org/pdb/package.php/guile16-gui guile16-gui] || wgscott || yes || Dependency for [http://pdb.finkproject.org/pdb/package.php/coot coot] - needs [[Talk:Fink:Orphaned|more knowledgeable maintainer]]
|-
| [http://pdb.finkproject.org/pdb/package.php/guile16-net-http guile16-net-http] || wgscott || yes || Dependency for [http://pdb.finkproject.org/pdb/package.php/coot coot] - needs [[Talk:Fink:Orphaned|more knowledgeable maintainer]]
|-
| [http://pdb.finkproject.org/pdb/package.php/guile16-www guile16-www] || wgscott || yes || Dependency for [http://pdb.finkproject.org/pdb/package.php/coot coot] - needs [[Talk:Fink:Orphaned|more knowledgeable maintainer]]
|-
| [http://pdb.finkproject.org/pdb/package.php/bluefish bluefish] || miga || yes ||
|-
| [http://pdb.finkproject.org/pdb/package.php/bluefish-gnomevfs2 bluefish-gnome-vfs2] || miga || yes ||
|-
| [http://pdb.finkproject.org/pdb/package.php/bluefish-gnome2 bluefish-gnome2] || miga || yes ||
|-
| [http://pdb.finkproject.org/pdb/package.php/bluefish-doc-html bluefish-doc-html] || miga || yes || Needs to be kept synchronized with bluefish version
|-
| [http://pdb.finkproject.org/pdb/package.php/bluefish-doc-pdf bluefish-doc-pdf] || miga || yes || Needs to be kept synchronized with bluefish version
|}

{{Fink_Header}}

[[Category:Fink|Orphaned]]
[[Category:Fink Packaging|Orphaned]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:0.24 backports</title>
    <ns>0</ns>
    <id>1040</id>
    <revision>
      <id>5157</id>
      <parentid>2423</parentid>
      <timestamp>2006-04-05T22:38:30Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>3u32p8oi8gxi0c0csoojexnohk2f1bh</sha1>
      <text xml:space="preserve" bytes="177">{{Fink_Header}}

* &lt;s&gt;BuildDep swapping&lt;/s&gt; '''done'''

* &lt;s&gt;ParentEssential fix&lt;/s&gt; '''done'''

{{Fink_Header}}

[[Category: Fink|Roadmap 0.24]]
[[Category: Fink_Roadmap|0.24]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:0.25 new features</title>
    <ns>0</ns>
    <id>1041</id>
    <revision>
      <id>10380</id>
      <parentid>10355</parentid>
      <timestamp>2006-12-12T21:03:46Z</timestamp>
      <contributor>
        <username>Chris01</username>
        <id>171</id>
      </contributor>
      <comment>changes based on dmacks comments</comment>
      <sha1>4kal6ikvco5z9pre3aghw02w12tvpaw</sha1>
      <text xml:space="preserve" bytes="2700">{{Fink_Header}}

===New features in fink 0.25===

* [[Fink:Roadmap:0.25 new features:Incremental indexing|Incremental Indexing]]

* SkipPrompts
** Any more categories users would like?

* Info3
** Can indent nicely in .info files
** No more support for RFC-822 multi-lines
** Can put comments in pkglist fields

* fast scanpackages with apt-ftparchive

* auto-detection of country

* Validator fixes:
** detect InfoN property (should be wrapper)

* New &lt;code&gt;--trees&lt;/code&gt; option restricts fink to using .info files in the chosen tree(s).

* new [[Fink:fink cleanup|fink cleanup]] syntax

* New &lt;code&gt;--maintainer&lt;/code&gt; mode

* New &lt;code&gt;--log-output&lt;/code&gt; and &lt;code&gt;--logfile&lt;/code&gt; flags to save transcripts of package building process

* Integrated scanpackages, including ability to not index restrictive packages.

* [[Fink:Major_New_Feature_Plans:Test_suite|Support for running package test suites]]

* reevaluate fink --tree=stable list
* Validator:
** Complain about [https://sourceforge.net/tracker/index.php?func=detail&amp;aid=702802&amp;group_id=17203&amp;atid=367203 &gt; and &lt; in dependency versioning]  (in .info).
** dmacks: complete overhaul of .deb (val-unpack branch)
** InfoN validator patch '''vasi fixed it the way he likes it'''
* RangerRick: 'fink build foo-1.0-1' where a .deb exists in the bindist for foo-1.0-1 and UseBinaryDist is true should build locally, not fetch from the bindist.
* Info3: allow comment lines in pkglist fields
&lt;pre&gt;Depends: &lt;&lt;
  #foo-shlibs,   foo is static-only right now
  bar-shlibs
&lt;&lt;&lt;/pre&gt;
* &lt;code&gt;chown -h&lt;/code&gt; functionality during --build-as-nobody (use Command:chowname_hr?)
* dmacks: overhaul buildlocks to go away more automatically and have a cleaner cleanup
** Automatically do cleanup when embarking on a package installation or removal
* dmacks: buildlock destruction
** Checking via lock_wait and PreRm
** Removal on build failure via Fink::Finally
* remove line-number in SysState error
* BuildConflicts breakage
* chown_hR is still leaving nobody-owned links.
* progress bar during indexing (&quot;.&quot; every 100 .info processed or every 10% of set of .info processed?)—newbies to HEAD have complained &lt;code&gt;index -f&lt;/code&gt; &quot;has hung&quot;...can take up to 5 minutes
* alternate checksum algorithms

===Bug fixes in fink 0.25===

* Fink no longer gets confused by debs in a local apt repository

* When asking to choose mirrors, fink orders choices alphabetically properly, and presents a reasonable set of mirrors when the user asks for all those on a continent.

* BuildConflicts should actually work

* many more we've forgotten all about...

{{Fink_Header}}

[[Category: Fink|Roadmap 0.25 New Features]]
[[Category: Fink_Roadmap|0.25 New Features]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:1.0 goals</title>
    <ns>0</ns>
    <id>1045</id>
    <revision>
      <id>11846</id>
      <parentid>10358</parentid>
      <timestamp>2010-05-06T20:09:35Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <minor/>
      <comment>Removing  {{Fink_Header}}</comment>
      <sha1>sbgw39edc8g6rblur68m6ugwythlnv5</sha1>
      <text xml:space="preserve" bytes="1269">What could/should be done before fink can be called &quot;1.0&quot;

* all [[Fink:Roadmap:Near Term Goals|Near Term Goals]]

* all [[Fink:Roadmap:Medium Term Goals|Medium Term Goals]]

* see also the [https://sourceforge.net/tracker/?atid=317203&amp;group_id=17203 patch tracker] and [https://sourceforge.net/tracker/?atid=117203&amp;group_id=17203 bug tracker]

* rethink our -ssl policy (see [http://sourceforge.net/tracker/index.php?func=detail&amp;aid=1102917&amp;group_id=17203&amp;atid=367203 Tracker 1102917] )

* implement a possibility to remove unneeded packages (ala debfoster, see [http://sourceforge.net/tracker/index.php?func=detail&amp;aid=593475&amp;group_id=17203&amp;atid=367203 Tracker 593475] )

* reccomends/suggests support in fink (see [http://sourceforge.net/tracker/index.php?func=detail&amp;aid=662397&amp;group_id=17203&amp;atid=367203 Tracker 662397] )

* unstable binary distribution? (see [http://sourceforge.net/tracker/index.php?func=detail&amp;aid=595244&amp;group_id=17203&amp;atid=367203 Tracker 595244] )

* fink option to only use binary packages available (use .deb in preference to whatever is in pdb, even if .deb version isn't in pdb at all)

* rethink our policy on maybe gpg signing info files and/or binary packages.

[[Category: Fink|Roadmap 1.0 Goals]]
[[Category: Fink_Roadmap|1.0 Goals]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Package issues</title>
    <ns>0</ns>
    <id>1109</id>
    <revision>
      <id>11330</id>
      <parentid>11301</parentid>
      <timestamp>2007-06-11T18:40:49Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of Vj6O4v, changed back to last version by Dmacks</comment>
      <sha1>g4gxo6644l27mhgpxn0yupg88x5p8u0</sha1>
      <text xml:space="preserve" bytes="3027">{{Fink_Header}}

== Issues with Specific Packages ==
=== ''Binary Distribution'' ===

{| border=&quot;1&quot; cellpadding=&quot;1&quot;
| Package || Distro(s) || Symptom || Cause || Solution
|-
| valign=top rowspan=2 | &lt;code&gt;ethereal-0.10.9-11&lt;/code&gt;
| valign=top | Fink-0.7.2 binary distro
| valign=top rowspan=2 | Fails to run ([http://paste.lisp.org/display/12015 warning] about missing gdk-pixbuf.loaders file)
| valign=top | Outdated binary package list
| valign=top | 1. run &lt;code&gt;apt-get update&lt;/code&gt; to update your package list&lt;br&gt;2. run &lt;code&gt;apt-get upgrade&lt;/code&gt; to install new &lt;code&gt;ethereal-00.10.12-11&lt;/code&gt; package
|- 
| valign=top | Fink-0.8.0 binary distro
| valign=top | Missing dependency on &lt;code&gt;gtk+2&lt;/code&gt;
| valign=top | install &lt;code&gt;gtk+2&lt;/code&gt;
|-
| valign=top rowspan=2 | &lt;code&gt;etherape-0.9.1-1&lt;/code&gt;
| valign=top | Fink-0.7.2 binary distro
| valign=top rowspan=2 | missing executable
| valign=top rowspan=2 | Didn't get filtered out because builds continue even when executable doesn't link.
| valign= top rowspan=2 | Install from source
|- 
| valign=top | Fink-0.8.0 binary distro
|}

=== ''Source Distribution'' ===
{| border=&quot;1&quot; cellpadding=&quot;1&quot;
| Package || OS + tree || Symptom || Cause || Solution
|-
| &lt;code&gt; kdelibs3-3.4.3-x &lt;/code&gt; 
| 10.3/unstable and 10.4/unstable 
| Fails during apidox generation 
| &lt;code&gt;doxygen-1.4&lt;/code&gt; is flaky? 
| downgrade via &lt;code&gt; fink install doxygen-1.3.4-4 &lt;/code&gt;
|-
| xorg and xfree86
| 10.4 intel
| fc-cache fails after compile, possibly causing dpkg-lockwait to fail
| bindist packages are built using Apple's X11 and there are some incompatibilities with xorg and xfree86
| No known non-voodoo fixes.
|}

=== '' '''Nested functions''' issue from XCode 2.2'' (gcc-4.0.1) ===

&lt;pre&gt;error: nested functions are not supported on MacOSX&lt;/pre&gt;

'''see also [[Fink:Packaging:breakage|package breakage]]'''

* &lt;code&gt;jpilot-ssl | jpilot&lt;/code&gt; '''Fixed!''' (but 0.99.8 [in my experimental] has a legitimate nested function--[[User:Alexkhansen|Alexkhansen]] 15:10, 18 Nov 2005 (GMT)) --now fixed --[[User:Alexkhansen|Alexkhansen]] 13:40, 22 Nov 2005 (GMT)
* &lt;code&gt;scipy-py&lt;/code&gt; '''Builds with gcc3.3'''
* &lt;code&gt;php5*-5.0.4-23&lt;/code&gt;:  Doesn't report as such an error at the top level '''Builds with gcc3.3'''
* &lt;code&gt;castle-combat&lt;/code&gt;
* &lt;code&gt;gkrellm2&lt;/code&gt;
* &lt;code&gt;gnokii2&lt;/code&gt;
* &lt;code&gt;mindless&lt;/code&gt;
* &lt;code&gt;open-cobol&lt;/code&gt;
* &lt;code&gt;xdigger&lt;/code&gt;
* &lt;code&gt;xrmap&lt;/code&gt;

=== ''Other XCode 2.2 Failure modes'' ===
* &lt;code&gt;vim-6.3-6 | vim-nox-6.3-5&lt;/code&gt;: Reported to hang on a dual proceesor machine during generation of &quot;help tags&quot;, while on single processor machines a malloc error is reported and the build continues. '''Fixed in &lt;code&gt;vim-6.3-7 | vim-6.3-6'''

=== ''Fixes'' ===
openldap23-2.3.27-10 needs a BuildDepend on db44 | db44-aes

=== ''Stabilizations'' ===
Can we move fontconfig2-dev (-shlibs) 2.3.2-13 to stable?

[[Category:Fink|Packaging Issues]]
[[Category:Fink Documentation|Packaging Issues]]
[[Category:Fink Packaging|Issues]]

{{Fink_Header}}</text>
    </revision>
  </page>
  <page>
    <title>Fink:Packaging:FreeDesktop</title>
    <ns>0</ns>
    <id>1108</id>
    <revision>
      <id>5167</id>
      <parentid>2491</parentid>
      <timestamp>2006-04-05T22:42:20Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>r9x2nzql9nqkzhhy56tuvqp3lxtjeu7</sha1>
      <text xml:space="preserve" bytes="2257">{{Fink_Header}}

==The Problem==

There is a new standard governing menus and maybe some other stuff. Various fink packages in [[Fink:Packaging:KDE|KDE]] and [[Fink:Packaging:Gnome|GNOME]] rely on it and implement subsets of it. As a result, two packages implementing the same functionality (menus for example) conflict because they install their own take on the same standard file in the same standard location. Some portions of the standard rely on env vars that are not set or are set in non-obvious packages. We need a unified package that sets the env vars to &quot;our&quot; standard place and unified packages that supply coalesced KDE/GNOME files. Miga [http://thread.gmane.org/gmane.os.apple.fink.gnome/1323 wrote about it] on fink-gnome-core.

==The Solution==

We need a unified package that sets the env vars to &quot;our&quot; standard place and unified packages that supply coalesced KDE/GNOME files.

===package &quot;xdg-base&quot; (done)===

* Set standard environment variables (via &lt;code&gt;profile.d&lt;/code&gt;)
* List as Depends in some basic GNOME and KDE packages:
** shared-mime-info (&gt;= 0.14-9)
** gtk+2? (*TODO*)
** glib2? (*TODO*)
** KDE...um...?

{| border=1
|+ Environment variable 
!| [http://standards.freedesktop.org/basedir-spec/basedir-spec-0.6.html Variable]
!| Linux standard
!| [http://fink.sf.net/pdb/package.php/xdg-base Fink equiv]
|-
| &lt;code&gt;XDG_DATA_HOME&lt;/code&gt;
| &lt;code&gt;~/.local/share&lt;/code&gt;
| &lt;code&gt;${HOME}/.local/share&lt;/code&gt;
|-
| &lt;code&gt;XDG_DATA_DIRS&lt;/code&gt;
| &lt;code&gt;/usr/local/share:/usr/share&lt;/code&gt;
| &lt;code&gt;%p/share&lt;/code&gt;
|-
| &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt;
| &lt;code&gt;~/.config&lt;/code&gt;
| &lt;code&gt;${HOME}/.config&lt;/code&gt;
|-
| &lt;code&gt;XDG_CONFIG_DIRS&lt;/code&gt;
| &lt;code&gt;/etc/xdg&lt;/code&gt;
|&lt;code&gt;%p/etc/xdg&lt;/code&gt;
|-
| &lt;code&gt;XDG_CACHE_HOME&lt;/code&gt;
| &lt;code&gt;~/.cache&lt;/code&gt;
| &lt;code&gt;${HOME}/.cache&lt;/code&gt;
|}

===package &quot;freedesktop-menus&quot;===

* provide basic menus
** unified gnome/kde?
** custom-written top-level filen, move existing gnome and kde top-level to be sub-menus of it?
* stand-alone pkg or part of &quot;freedesktop&quot;?
** have extensive depends/recommends or just the data files?

{{Fink_Header}}

[[Category: Fink|Packaging FreeDesktop]]
[[Category: Fink Packaging|FreeDesktop]]
[[Category: Gnome|Packaging FreeDesktop]]
[[Category: KDE|Packaging FreeDesktop]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Packaging:Gnome</title>
    <ns>0</ns>
    <id>1052</id>
    <revision>
      <id>11603</id>
      <parentid>10563</parentid>
      <timestamp>2009-08-13T20:17:35Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <comment>GNOME2.16? Ha!</comment>
      <sha1>ts97avbw354zmz2pfj3uni1yaf0vhtl</sha1>
      <text xml:space="preserve" bytes="18761">{{Fink_Header}}

'''This page relates to the progress of an update that happened a long time ago. The information here is not current with regards to package/version availability or current packaging standards and best-practices.'''

== Goals ==

* Version update (preferably highest stable-branch version, okay if higher than that present in the target Gnome 2.x, or even if part of a higher Gnome 2.x)
* Update deps according to pkg requirements (add versioning as required by each package, not based on what is currently in fink or what is present in the target Gnome 2.x)
* Switch to gettext3
** Depends: gettext&amp;rarr;libgettext3-shlibs
** BuildDepends: gettext-dev&amp;rarr;libgettext3-dev
** Add gettext-bin and/or gettext-tools as needed.
** Add libiconv* deps as needed.
* Put -ssl variants first in alternative dependencies (gnome-vfs2 and others). We have gnome-vfs2-unified as of 1:2.15.2-1 now, but not required to switch from the variants list (there are compatibility packages).
* Make sure static libs are built
* Add &lt;code&gt;ConfigureParams: --disable-dependency-tracking&lt;/code&gt;
* .info and .deb validation
* Fix scrollkeeper usage (see &lt;code&gt;fink info scrollkeeper&lt;/code&gt;)
* Fix gconf usage (see &lt;code&gt;fink info gconf2&lt;/code&gt;)
* Check with &lt;code&gt;--build-as-nobody&lt;/code&gt;
* Check locale/ (gettext message catalog) usage:
** Place locale/ files in the package whose binaries use them (or in a package that is a dependent of that package)—remember Replaces field if moving them!
** Make sure the domain is orthogonal enough for Shlibs orthogonality
* Deprecate %N if %N-dev and %N-shlibs contain everything
** Add Depends to %N to make sure other packages' Depends:%N still gets the same results
** Adjust dependencies on %N to point to %N-dev or %N-shlibs (with versioning as appropriate) depending on what %N used to contain and its former dependencies:
***Switch &lt;code&gt;glib2&lt;/code&gt; dependency to &lt;code&gt;glib2-shlibs (&gt;= 2.12.0-1)&lt;/code&gt; 
**Switch all &lt;code&gt;glib2*&lt;/code&gt; dependencies to &lt;code&gt;&gt;= 2.12.0-1&lt;/code&gt; in both 10.3 and 10.4 to avoid bogus &gt;=2.6.6-1111 from 10.4 transition.
**Switch all &lt;code&gt;orbit2*&lt;/code&gt; dependencies to &lt;code&gt;&gt;= 2.14.2-1&lt;/code&gt;, which may eliminate propagated popt dependencies.
**Switch all &lt;code&gt;libbonobo2*&lt;/code&gt; dependencies to &lt;code&gt;&gt;= 2.16.0-1&lt;/code&gt;, which may eliminate propagated popt dependencies.
**NB: only do these when releasing new Version so that we don't force arbitrary rebuilding and &quot;high&quot; Revision in 10.3
***Therefore, '''upgrade in dependency order starting at the bottom of the tree'''
*Make sure GCC field presence/absence is correct
*Verify whether 10.4 needs a &quot;high&quot; revision (+=1000 due to GCC:4.0 or dependencies on 10.4-specific high revisions of other packages).
*Check for .pc files moved to share/ (requires adding &lt;code&gt;Depends: pkgconfig (&gt;= 0.20-1)&lt;/code&gt;)

== Packaging Status ==

* '''Fink''': Version in Fink unstable, 10.4 (powerpc). Star when checked and upgraded if necessary—''please work in order up the dep tree!''
* '''2.x''': Minimum version for Gnome 2.x.
* '''Notes''': what's waiting for what or whom
* color-code: &lt;font color=green&gt;up-to-date&lt;/font&gt; &lt;font color=red&gt;needs updating or is broken&lt;/font&gt; &lt;font color=black&gt;unknown&lt;/font&gt;

=== Gnome Platform ===
{| style=&quot;border:  double black; border-collapse: collapse; text-align: right;&quot; cellpadding=&quot;5&quot;
|- align=center
!Package||[http://pdb.finkproject.org/pdb Fink]||[http://ftp.gnome.org/pub/GNOME/platform/2.14/2.14.0/sources/ 2.16]||Notes
|- style=&quot;color:red&quot;
| align=left | at-spi               ||  1.7.10 ||  1.7.11
|- style=&quot;color:green&quot;
| align=left | atk                  ||  1.12.4* || 1.12.2
|- style=&quot;color:green&quot;
| align=left | audiofile            ||   0.2.6* ||  0.2.6
|- style=&quot;color:green&quot;
| align=left | esound               ||  0.2.36* || 0.2.36
|- style=&quot;color:red&quot;
| align=left | gail                 ||  1.8.11 || 1.9.2
|- style=&quot;color:green&quot;
| align=left | gconf2               ||  2.14.0 || 2.14.0
|- style=&quot;color:green&quot;
| align=left | glib                 || 2.12.11* || 2.12.3
|- style=&quot;color:green&quot;
| align=left | gnome-mime-data      ||   2.4.3* ||  2.4.2
|- style=&quot;color:red&quot;
| align=left | gnome-vfs            ||  2.15.2 || 2.16.0
| align=left | &gt;= 2.15.3 is busted (ABI breakage: missing symbols)
|- style=&quot;color:red&quot;
| align=left | gnome-vfs-monikers  ||       x || 2.15.3
|- style=&quot;color:red&quot;
| align=left | gtk+                 ||   2.6.8 || 2.10.3
| align=left | gtk+&gt;2.8 requires enabling cairo and perhaps switching to pango-ft219: cascading BDep additons, may have to tune all pango users
|- style=&quot;color:red&quot;
| align=left | gtk-doc              ||     1.6 ||    1.7
|- style=&quot;color:green&quot;
| align=left | intltool             ||  0.35.5* || 0.35.0
|- style=&quot;color:green&quot;
| align=left | libart               ||  2.3.19* || 2.3.17
|- style=&quot;color:green&quot;
| align=left | libbonobo            ||  2.16.0 || 2.16.0
|- style=&quot;color:red&quot;
| align=left | libbonoboui          ||  2.14.0 || 2.16.0
|- style=&quot;color:green&quot;
| align=left | libglade             ||   2.6.0* ||  2.6.0
|- style=&quot;color:red&quot;
| align=left | libgnome             ||  2.14.1 || 2.16.0
|- style=&quot;color:green&quot;
| align=left | libgnomecanvas       ||  2.14.0 || 2.14.0
|- style=&quot;color:red&quot;
| align=left | libgnomeui           ||  2.14.1 || 2.16.0
|- style=&quot;color:green&quot;
| align=left | libidl               ||   0.8.8* ||  0.8.7
|- style=&quot;color:green&quot;
| align=left | libxml               ||  2.6.27* || 2.6.26
|- style=&quot;color:green&quot;
| align=left | libxslt              ||  1.1.20* || 1.1.17
|- style=&quot;color:green&quot;
| align=left | orbit                ||  2.14.7* || 2.14.3
|- style=&quot;color:red&quot;
| align=left | pango                ||  1.10.1 || 1.14.3
| align=left | might require shifting to ft219 only?
|- style=&quot;color:green&quot;
| align=left | pkgconfig            ||    0.21 ||      ?
|}

=== Gnome Desktop ===
{| style=&quot;border:  double black; border-collapse: collapse; text-align: right;&quot; cellpadding=&quot;5&quot;
|- align=center
!|Package||[http://pdb.finkproject.org/pdb Fink]||[http://ftp.gnome.org/pub/GNOME/desktop/2.16/2.16.0/sources/ 2.16]||Notes
|- style=&quot;color:red&quot;
| align=left | alacarte             ||       x || 0.10.0
|- style=&quot;color:red&quot;
| align=left | bug-buddy            ||  2.14.0 || 2.16.0
|- style=&quot;color:red&quot;
| align=left | control-center       ||  2.12.3 || 2.16.0
| align=left | &gt;=2.12.3 requires gtk+&gt;2.8
|- style=&quot;color:red&quot;
| align=left | dasher               ||  3.2.18 ||  4.2.0
| align=left | 4.0.2 compiling [http://bugzilla.gnome.org/show_bug.cgi?id=337463 fails]
|- style=&quot;color:red&quot;
| align=left | deskbar-applet       ||       x || 2.16.0
|- style=&quot;color:red&quot;
| align=left | eel                  ||  2.14.3 || 2.16.0
|- style=&quot;color:red&quot;
| align=left | eog                  ||  2.12.3 || 2.16.0
| align=left | &gt;= 2.13.2 would require gtk+2 &gt;= 2.7.1
|- style=&quot;color:red&quot;
| align=left | epiphany             ||   1.6.5 || 2.16.0
| align=left | &gt;= 1.8 would require gtk+2 &gt;= 2.8
|- style=&quot;color:red&quot;
| align=left | evince               ||   0.5.2 ||  0.6.0
| align=left | 0.5.3 would require gtk+2 &gt;= 2.8
|- style=&quot;color:red&quot;
| align=left | evolution            ||  1.5.92 ||  2.8.0
|- style=&quot;color:red&quot;
| align=left | evolution-data-server||  0.0.97 ||  1.8.0
|- style=&quot;color:red&quot;
| align=left | evolution-exchange   ||       x ||  2.8.0
|- style=&quot;color:red&quot;
| align=left | evolution-webcal     ||       x ||  2.8.0
|- style=&quot;color:red&quot;
| align=left | fast-user-switch-applet||       x || 2.16.0
|- style=&quot;color:red&quot;
| align=left | file-roller          ||   2.9.1 || 2.16.0
| align=left | &gt;2.9.1 needs gtk+&gt;=2.8
|- style=&quot;color:red&quot;
| align=left | gal                  ||   2.4.3 ||      ?
|- style=&quot;color:red&quot;
| align=left | gcalctool            ||  5.8.19 || 5.8.24
|- style=&quot;color:red&quot;
| align=left | gconf-editor         ||  2.14.0 || 2.16.0
|- style=&quot;color:red&quot;
| align=left | gdm                  || 2.8.0.8 || 2.16.0
|- style=&quot;color:red&quot;
| align=left | gedit                ||  2.12.1 || 2.16.0
| align=left | 2.14 needs gtk+2&gt;=2.8
|- style=&quot;color:green&quot;
| align=left | ggv                  ||  2.12.0 ||dropped
|- style=&quot;color:red&quot;
| align=left | glade                ||  2.10.1 ||      ?
| align=left | glade2 ends at glade-2.10.x; glade-2.12.x begins what will be glade3:  still in beta and would require gtk+2 &gt;= 2.8
|- style=&quot;color:red&quot;
| align=left | gnome-applets        ||   2.6.2 || 2.16.0
| align=left | waiting on gnome-panel
|- style=&quot;color:green&quot;
| align=left | gnome-backgrounds    ||  2.16.2* || 2.15.92
|- style=&quot;color:green&quot;
| align=left | gnome-common         ||  2.12.0* ||      ?
|- style=&quot;color:red&quot;
| align=left | gnome-desktop        ||  2.14.0 || 2.16.0
| align=left | 2.14.1 [http://bugzilla.gnome.org/show_bug.cgi?id=338848 requires] gtk+ &gt;= 2.7.0
|- style=&quot;color:green&quot;
| align=left | gnome-doc-utils      ||   0.8.0* ||  0.8.0
|- style=&quot;color:red&quot;
| align=left | gnome-games          ||  2.12.3 || 2.15.92
| align=left | &gt;= 2.13.1 would require gtk+2 &gt;= 2.8
|- style=&quot;color:green&quot;
| align=left | gnome-icon-theme     ||2.16.0.1* || 2.16.0
|- style=&quot;color:red&quot;
| align=left | gnome-keyring        ||   0.4.9 ||  0.6.0
|- style=&quot;color:red&quot;
| align=left | gnome-keyring-manager||       x || 2.16.0
|- style=&quot;color:green&quot;
| align=left | gnome-mag            ||  0.14.0 || 0.13.1
|- style=&quot;color:red&quot;
| align=left | gnome-media          ||   2.6.2 || 2.16.1
| align=left | in [http://cvs.sf.net/viewcvs.py/fink/experimental/dmacks/finkinfo/gnome/  exp/dmacks]
|- style=&quot;color:green&quot;
| align=left | gnome-menus          ||  2.16.1* || 2.16.0
|- style=&quot;color:red&quot;
| align=left | gnome-netstatus      ||   2.6.1 || 2.12.0
| align=left | waiting on gnome-panel
|- style=&quot;color:red&quot;
| align=left | gnome-nettool        ||       x ||2.15.92
| align=left | doesn't compile well, doesn't know BSDish tools
|- style=&quot;color:red&quot;
| align=left | gnome-panel          ||   2.6.2 || 2.16.0
| align=left | gnome-panel&gt;=2.12 needed for modern gnome-menus, &gt;=2.12 requires gtk+&gt;=2.8; gnome-panel&gt;=2.15 needed to be functional
|- style=&quot;color:red&quot;
| align=left | gnome-power-manager  ||       x || 2.16.0
|- style=&quot;color:red&quot;
| align=left | gnome-screensaver    ||       x || 2.16.0
|- style=&quot;color:red&quot;
| align=left | gnome-session        ||  2.14.3 || 2.16.0
|- style=&quot;color:red&quot;
| align=left | gnome-speech         ||   0.4.4 ||  0.4.5
|- style=&quot;color:red&quot;
| align=left | gnome-system-monitor ||   2.6.0 || 2.15.92
| align=left | 2.12.2 full of double-free and invalid UTF-8 errors; 2.14 requires gtk+&gt;=2.8
|- style=&quot;color:red&quot;
| align=left | gnome-system-tools   ||       x || 2.14.0
|- style=&quot;color:red&quot;
| align=left | gnome-terminal       ||  2.12.0 || 2.16.0
| align=left | needs gtk+&gt;=2.8
|- style=&quot;color:red&quot;
| align=left | gnome-themes         ||  2.14.2 || 2.16.0
| align=left | miga's
|- style=&quot;color:green&quot;
| align=left | gnome-user-docs      ||  2.16.1* || 2.16.0
|- style=&quot;color:red&quot;
| align=left | gnome-utils          ||   2.6.2 || 2.16.0
| align=left | needs gnome-panel&gt;=2.9.4
|- style=&quot;color:red&quot;
| align=left | gnome-volume-manager ||       x || 2.15.0
|- style=&quot;color:red&quot;
| align=left | gnomemeeting         ||  0.98.0 ||      ?
|- style=&quot;color:red&quot;
| align=left | gnopernicus          ||  0.10.9 ||  1.0.3
|- style=&quot;color:red&quot;
| align=left | gok                  ||  0.10.2 ||  1.2.0
| align=left | in [http://cvs.sf.net/viewcvs.py/fink/experimental/dmacks/finkinfo/gnome/ exp/dmacks] runtime warning about XInputExtension and dumps core ([http://bugzilla.gnome.org/show_bug.cgi?id=314511 WONTFIX])
|- style=&quot;color:green&quot;
| align=left | gpdf                 ||  2.10.0 ||dropped
|- style=&quot;color:green&quot;
| align=left | gst-plugins-base     ||  0.10.9 || 0.10.7
|- style=&quot;color:green&quot;
| align=left | gst-plugins-good     ||  0.10.3.1 || 0.10.3
|- style=&quot;color:green&quot;
| align=left | gstreamer            ||  0.10.9 || 0.10.8
|- style=&quot;color:green&quot;
| align=left | gthumb               ||   2.6.9 ||dropped
|- style=&quot;color:red&quot;
| align=left | gtk-engines          ||  2.6.10 ||  2.8.0
|- style=&quot;color:red&quot;
| align=left | gtkhtml              ||  3.10.2 || 3.12.0
|- style=&quot;color:red&quot;
| align=left | gtksourceview        ||   1.4.2 ||  1.8.0
| align=left | 1.5.4 requires gtk+&gt;=2.8
|- style=&quot;color:red&quot;
| align=left | gucharmap            ||   1.6.0 ||  1.8.0
|- style=&quot;color:green&quot;
| align=left | libgail-gnome        ||   1.1.3 ||  1.1.3
|- style=&quot;color:black&quot;
| align=left | libgnomecups         ||   0.1.6 ||      x
| align=left | Apple's 10.3 cups-dev lies about its version...it's too low to build this pkg; might work on 10.4
|- style=&quot;color:green&quot;
| align=left | libgnomeprint        ||  2.12.1 || 2.12.1
|- style=&quot;color:green&quot;
| align=left | libgnomeprintui      ||  2.12.1 || 2.12.1
|- style=&quot;color:green&quot;
| align=left | libgtkhtml           ||   2.6.3 ||dropped
|- style=&quot;color:green&quot;
| align=left | libgtop              ||  2.14.7* || 2.14.2
|- style=&quot;color:red&quot;
| align=left | librsvg              ||   2.9.5 || 2.16.0
| align=left | 2.10 requires pango1&gt;=1.2
|- style=&quot;color:green&quot;
| align=left | libsoup              ||  2.2.96* || 2.2.96
|- style=&quot;color:red&quot;
| align=left | libwnck              ||  2.14.3 || 2.16.0
|- style=&quot;color:red&quot;
| align=left | libxklavier          ||     2.2 ||      ?
|- style=&quot;color:red&quot;
| align=left | metacity             ||  2.14.5 || 2.16.0
|- style=&quot;color:red&quot;
| align=left | nautilus             ||  2.14.3 || 2.16.0
|- style=&quot;color:red&quot;
| align=left | nautilus-cd-burner   ||  2.14.2 || 2.16.0
|- style=&quot;color:green&quot;
| align=left | nautilus-media       ||   0.8.1 ||      ?
|- style=&quot;color:green&quot;
| align=left | scrollkeeper         ||  0.3.14* || 0.3.14
|- style=&quot;color:green&quot;
| align=left | seahorse             ||   0.8.2 ||      x
|- style=&quot;color:red&quot;
| align=left | sound-juicer         ||       x || 2.16.0
|- style=&quot;color:green&quot;
| align=left | startup-notification ||     0.8* ||    0.8
|- style=&quot;color:red&quot;
| align=left | system-tools-backends||       x ||  1.4.2
|- style=&quot;color:red&quot;
| align=left | tomboy               ||       x ||  0.4.0
|- style=&quot;color:red&quot;
| align=left | totem                || dropped&lt;br&gt;from 10.4 || 2.16.0
| align=left | very old version in 10.3 that doesn't build on 10.4
|- style=&quot;color:red&quot;
| align=left | vino                 ||       x || 2.13.5
|- style=&quot;color:red&quot;
| align=left | vte                  ||  0.12.2 || 0.14.0
|- style=&quot;color:red&quot;
| align=left | ximian-connector     ||  1.5.92 ||      ?
|- style=&quot;color:red&quot;
| align=left | yelp                 ||  2.14.3 || 2.16.0
|- style=&quot;color:red&quot;
| align=left | zenity               ||  2.14.3 || 2.16.0
|}

=== C++ Bindings ===
{| style=&quot;border:  double black; border-collapse: collapse; text-align: right;&quot; cellpadding=&quot;5&quot;
|- align=center
!|Package||[http://pdb.finkproject.org/pdb Fink]||[http://ftp.gnome.org/pub/GNOME/bindings/2.16/2.16.0/sources/c++ 2.16]||Notes
|- style=&quot;color:red&quot;
| align=left | gconfmm              ||  2.10.0 || 2.16.0
| align=left | RR's
|- style=&quot;color:red&quot;
| align=left | glibmm               ||  2.10.5 || 2.12.0
|- style=&quot;color:red&quot;
| align=left | gnome-vfsmm          ||  2.14.0 || 2.16.0
|- style=&quot;color:red&quot;
| align=left | gtkmm                ||  2.6.14 || 2.10.0
| align=left | 2.8.x probably requires gtk+&gt;=2.8
|- style=&quot;color:green&quot;
| align=left | libglademm           ||   2.6.3 ||  2.6.3
|- style=&quot;color:red&quot;
| align=left | libgnomecanvasmm     ||  2.14.0 || 2.16.0
|- style=&quot;color:red&quot;
| align=left | libgnomemm           ||  2.14.0 || 2.16.2
|- style=&quot;color:red&quot;
| align=left | libgnomeuimm         ||  2.14.0 || 2.16.0
|- style=&quot;color:green&quot;
| align=left | libsigc++            ||  2.0.17* || 2.0.17
|- style=&quot;color:red&quot;
| align=left | libxml++             ||  2.10.0 || 2.14.0
| align=left | RR's
|}

=== Java Bindings ===
{| style=&quot;border:  double black; border-collapse: collapse; text-align: right;&quot; cellpadding=&quot;5&quot;
|- align=center
!| Package||[http://pdb.finkproject.org/pdb Fink]||[http://ftp.gnome.org/pub/GNOME/bindings/2.16/2.16.0/sources/java 2.16]||Notes
|- style=&quot;color:red&quot;
| align=left | glib-java            ||       x ||  0.3.2
|- style=&quot;color:red&quot;
| align=left | libgconf-java        ||       x || 2.12.4
|- style=&quot;color:red&quot;
| align=left | libglade-java        ||       x || 2.12.5
|- style=&quot;color:red&quot;
| align=left | libgnome-java        ||       x || 2.12.4
|- style=&quot;color:red&quot;
| align=left | libgtk-java          ||       x ||  2.9.2
|}

=== Perl Bindings ===
{| style=&quot;border:  double black; border-collapse: collapse; text-align: right;&quot; cellpadding=&quot;5&quot;
|- align=center
!|Package||[http://pdb.finkproject.org/pdb Fink]||[http://ftp.gnome.org/pub/GNOME/bindings/2.16/2.16.0/sources/perl 2.16]||Notes
|- style=&quot;color:green&quot;
| align=left | extutils-depends     ||   0.205* ||      ?
| align=left | why is this perl-versioned?
|- style=&quot;color:green&quot;
| align=left | extutils-pkgconfig   ||    1.07* ||      ?
| align=left | why is this perl-versioned?
|- style=&quot;color:green&quot;
| align=left | glib-perl            ||   1.144* ||  1.120
|- style=&quot;color:green&quot;
| align=left | gnome2-perl          ||   1.040 ||  1.040
|- style=&quot;color:green&quot;
| align=left | gnome2-canvas-perl   ||   1.002 ||  1.002
|- style=&quot;color:red&quot;
| align=left | gnome2-gconf-perl    ||       x ||  1.021
| align=left | in exp/dmacks; can't test b/c gconf2 missing a &lt;code&gt;.schemas&lt;/code&gt; file
|- style=&quot;color:green&quot;
| align=left | gnome2-vfs-perl      ||   1.060 ||  1.060
|- style=&quot;color:green&quot;
| align=left | gtk2-perl            ||   1.122 ||  1.120
|- style=&quot;color:green&quot;
| align=left | gtk2-gladexml-perl   ||   1.005 ||  1.005
|}

=== Python Bindings ===
{| style=&quot;border:  double black; border-collapse: collapse; text-align: right;&quot; cellpadding=&quot;5&quot;
|- align=center
!| Package||[http://pdb.finkproject.org/pdb Fink]||[http://ftp.acc.umu.se/pub/GNOME/bindings/2.16/2.16.0/sources/python 2.16]||Notes
|- style=&quot;color:green&quot;
| align=left | gnome-menus          ||  2.16.1* || 2.16.0
|- style=&quot;color:red&quot;
| align=left | gnome-python2        ||  2.12.4 || 2.16.0
|- style=&quot;color:red&quot;
| align=left | gnome-python2-desktop||       x ||      ?
| align=left | needs gnome-panel&gt;=2.10
|- style=&quot;color:red&quot;
| align=left | gnome-python2-extras ||       x ||      ?
| align=left | 2.14.0 in exp/dmacks; waiting for newer gda
|- style=&quot;color:green&quot;
| align=left | libxml2              ||  2.6.27* || 2.6.23
|- style=&quot;color:green&quot;
| align=left | libxslt              ||  1.1.20* || 1.1.15
|- style=&quot;color:green&quot;
| align=left | pygobject2           ||  2.12.3* || 2.12.0
|- style=&quot;color:red&quot;
| align=left | pygtk2               ||   2.6.3 || 2.10.0
| align=left | &gt;= 2.8 would require gtk+2 &gt; 2.8
|- style=&quot;color:green&quot;
| align=left | pyorbit2             ||  2.14.2* || 2.14.1
|}

{{Fink_Header}}

[[Category: Fink|Packaging Gnome]]
[[Category: Fink Packaging|Gnome]]
[[Category: Gnome|Packaging]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Packaging:breakage/2006-03-09/ppc</title>
    <ns>0</ns>
    <id>1713</id>
    <revision>
      <id>6054</id>
      <parentid>6050</parentid>
      <timestamp>2006-05-31T02:02:17Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <comment>obsolete note</comment>
      <sha1>8fmp572p9jv8msk1ykvhgh67z5m92yv</sha1>
      <text xml:space="preserve" bytes="15992">{{Fink_Header}}

'''This page is obsolete. Use the [[Fink:Packaging:breakage|current breakage report]] insead.'''

This page contains the breakage report from [[User:msachs|msachs]]'s [http://cvs.sourceforge.net/viewcvs.py/fink/scripts/buildfink/ buildworld] of the [http://cvs.sourceforge.net/viewcvs.py/fink/dists/10.4 10.4 distro] for powerpc for [http://fink.opendarwin.org/build/2006-03-09/ppc March 2006], manually updated as people (think they:) fix things.  The automatic error classifications are based on detecting certain [http://fink.opendarwin.org/build/2006-03-09/ppc/filters.xml text patterns] in the [http://fink.opendarwin.org/build/2006-03-09/ppc/logs build transcripts].


==failures/fink/conflict==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/dvipdfmx.log dvipdfmx]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/libapache2-mod-python-py23.log libapache2-mod-python-py23]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/libapache2-mod-python-py24.log libapache2-mod-python-py24]

==failures/fink/depconfig==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/libgems-rb16.log libgems-rb16]

==failures/fink/nolib/other==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gst-plugins.log gst-plugins] maintainer (RangerRick) emailed 4-april
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/kdebase3-unified.log kdebase3-unified] maintainer (RangerRick) emailed 4-april
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/kdegames3.log kdegames3] maintainer (RangerRick) emailed 4-april

==failures/frontend/array==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/libxine.log libxine]

==failures/frontend/parse==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/bio-emboss-pm581.log bio-emboss-pm581]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/bio-emboss-pm586.log bio-emboss-pm586]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/mp3splt.log mp3split]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/par-pm581.log par-pm581] fails if libperl is static (== non-Apple-supplied perl); [http://rt.cpan.org/Ticket/Display.html?id=19038 bug filed]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/par-pm584.log par-pm584] fails if libperl is static (== non-Apple-supplied perl); [http://rt.cpan.org/Ticket/Display.html?id=19038 bug filed]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/postgresql74-unified.log postgresql74-unified]

==failures/intel/assembly==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/clisp-maxima.log clisp-maxima]

==failures/java==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/commons-fileupload.log commons-fileupload]

==failures/linker/linkedit==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gai.log gai] * fixed I think...pending confirmation from msachs
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gdal-python-py23.log gdal-python-py23]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gdal-python-py24.log gdal-python-py24]

==failures/project/bad-compiler-option==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/atlas.log atlas]

==failures/project/desktop-file-utils==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/devhelp.log devhelp] builds on Mac Intel but doesn't run because Mozilla doesn't work on Intel. See bug [https://sourceforge.net/tracker/index.php?func=detail&amp;aid=1459616&amp;group_id=17203&amp;atid=117203 1459616]

==failures/project/dylib==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn-simple-pm581.log svn-simple-pm581]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn-simple-pm584.log svn-simple-pm584]

==failures/project/lib-missing==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/geda-gattrib.log geda-gattrib]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/geda-gnetlist.log geda-gnetlist]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/geda-gschem.log geda-gschem]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/geda-gsymcheck.log geda-gsymcheck]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gimp2-noprint.log gimp2-noprint]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gimp2-svg-noprint.log gimp2-svg-noprint]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gimp2-svg.log gimp2-svg]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gimp2.log gimp2]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/libapache2-mod-svn.log libapache2-mod-svn]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/libapache2-ssl-mod-svn.log libapache2-ssl-mod-svn]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/opengl-rb18.log opengl-rb18]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/pike7.4.log pike7.4]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/prime.log prime]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/pygist-py23.log pyhist-py23]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/pygist-py24.log pygist-py24]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/qgis-nograss.log qgis-nograss]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/qgis-nopgsql-nograss.log qgis-nopgsql-nograss]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/qgis-nopgsql.log qgis-nopgsql]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/qgis.log qgis]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/ruby18-tcltk-x11.log ruby18-tcltk-x11]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/sary-rb18.log sary-rb18]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn-javahl.log svn-javahl]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn-ssl-javahl.log svn-ssl-javahl]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn-ssl-swig-py23.log svn-ssl-swig-py23]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn-ssl-swig-py24.log svn-ssl-swig-py24]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn-ssl.log svn-ssl]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn-swig-pm581.log svn-swig-pm581]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn-swig-pm584.log svn-swig-pm584]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn-swig-pm586.log svn-swig-pm586]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn-swig-py23.log svn-swig-py23]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn-swig-py24.log svn-swig-py24]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn.log svn]

==failures/project/nofiles==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/amule.log amule]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/bash.log bash]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/bonobo.log bonobo]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/contacts.log contacts]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/emacs-w3.log emacs-w3]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/etherape.log etherape]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/fwbuilder.log fwbuilder]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gconf.log gconf]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/genes.log genes]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/ghex.log ghex]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gnome-libs.log gnome-libs]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gok.log gok]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/grisbi.log grisbi]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gtktalog.log gtktalog]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/kdelibs3-unified.log kdelibs3-unified]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/mead.log mead]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/monodoc.log monodoc]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/mysql.log mysql]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/sane-backends.log sane-backends]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/sed.log sed] thesin may have a new %v
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/singular.log singular]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/sndplay.log sndplay] False positive, builds successfully

==failures/project/norule==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/aqbanking.log aqbanking]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/modulef.log modulef]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/mplayer-altivec.log mplayer-altivec]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/mplayer.log mplayer]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/vice.log vice] Might be fixed...needs testing in buildworld

==failures/project/pc-missing==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/wv2.log wv2] RR on #fink 4/27

==failures/project/stricter/scope==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/freefem++.log freefem++]

==failures/project/stricter/static==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/afni.log afni]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/afterstep.log afterstep]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/python23-nox.log python23-nox]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/xmms-scizzor.log xmms-scizzor]

==failures/project/tex==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/xdvi-system-tetex.log xdvi-system-tetex]

==failures/syschange/cc_dynamic==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/r-base.log r-base]

==failures/unanalyzed/other==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/bzr-py24.log bzr-py24]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/ccp4-gfortran.log ccp4-gfortran]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/ccp4.log ccp4]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/cernlib2003.log cernlib2003]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/config-std-pm581.log config-std-pm581] Upstream bug filed
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/esvn.log esvn]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gift-fasttrack.log gift-fasttrack]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gnome-vfs-ssl.log gnome-vfs-ssl]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gnome-vfs.log gnome-vfs]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gnupg-interface-pm581.log gnupg-interface-pm581]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gnupg-interface-pm584.log gnupg-interface-pm584]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gnupg-interface-pm586.log gnupg-interface-pm586]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gpaint.log gpaint] deps fixed, but errors still remain. maintainer emailed 4/12
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gst-plugins-good-0.10.log gst-plugins-good-0.10]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gst-plugins-ugly-0.10.log gst-plugins-ugly-0.10]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/gtk2-podviewer-pm581.log gtk2-podviewer-pm581]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/hercules.log hercules] Might be hopeless. See DescPort. [[User:Dmalloc|Dmalloc]] has a fixed version, but is redoing packaging, so it will take a while to be added
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/ipe6.log ipe6]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/librep.log librep]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/m2crypto-python23.log m2crypto-python23]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/out/failures/unanalyzed/other mac-glue-pm58*] - Won't build as nobody, probably not fixable.
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/mapserver.log mapserver]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/mechanize-py23.log mechanize-py23]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/mechanize-py24.log mechanize-py24]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/mendexk.log mendexk]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/nant.log nant]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/nemesis.log nemesis]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/net-snmp.log net-snmp] (These are usually defined in ''dynix.h:'' [[User:Dmalloc|Dmalloc]])
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/nget.log nget]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/object-signature-pm581.log object-signature-pm581] Needs storable-pmXXX &gt;= 2.11 but fink has no such until perl584-core
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/p2.log p2]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/peercast.log peercast]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/phase.log phase]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/qcad.log qcad]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/qdvdauthor.log qdvdauthor]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/qemu.log qemu]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/qthello.log qthello]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/soup-ssl.log soup-ssl]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/soup.log soup]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/svn-simple-pm586.log svn-simple-pm586]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/xalan-j-docs.log xalan-j-docs] jarnodepends targets do not exist anymore, compiles with docs and jardocs as targets and a patch in javadocs build.xml to increase the memory to 256 Mo.
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/xdvik.log xdvik]

==failures/unknown/gtk==
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/lablgtk2.log lablgtk2]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/xmms-coreaudio.log xmms-coreaudio]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/xmms-normalize.log xmms-normalize]
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/xsane.log xsane]

==nested functions==
&lt;code&gt;grep -l &quot;nested functions&quot; $(find . -name config.log)&lt;/code&gt;
*[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/oidentd.log oidentd] Might be hopeless, uses KERNEL_PRIVATE structures with no apparent workaround

==backup files in .deb==
grep for &lt;code&gt;/(~|\.bak)$/i&lt;/code&gt; in &lt;code&gt;dpkg -c&lt;/code&gt;
*cxboard_0.14-1_darwin-powerpc.deb
*mew_4.2-5_darwin-powerpc.deb
*mmtk_2.4.4-1001_darwin-powerpc.deb
*modulefdoc_99-1_darwin-powerpc.deb
*moria_5.5.2-4_darwin-powerpc.deb
*pdcurses_2.6-1013_darwin-powerpc.deb
*qt3mac_3.3.5-14_darwin-powerpc.deb
*r-base_2.1.1-1001_darwin-powerpc.deb
*scite_1.64-1003_darwin-powerpc.deb
*silc-toolkit_0.9.12-2_darwin-powerpc.deb
*stunnel4_4.10-2_darwin-powerpc.deb
*tinker_4.2.1-2_darwin-powerpc.deb

==-force_flat_namespace==
&lt;code&gt;grep -lr &quot;force_flat_namespace&quot; 2006-03-09/*/logs&lt;/code&gt; 

g++ -force_flat_namespace breaks under xcode2.3; gcc -force_flat_namespace still works. pogma says, &quot;When we started prebinding things, we got some people with a badly prebound libintl. That caused dpkg to stop working, so there was no way for the user to get out of the mess -force_flat 'fixed' the issue&quot;
*chemtool '''triaged to Andrew Rohl'''
*ddd '''triaged to Max'''
*dpkg '''still needed?''' (I've been using dpkg without it. --msachs; RR reported trouble with bootstrapping)
*dx
*perl581
*perl584
*tightvnc '''no C++'''

==triaged==
*to pogma (maintainer) (email, 12/13)
**[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/libdbi-drivers-mysql.log libdbi-drivers-mysql]
**[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/libdbi-drivers-sqlite.log libdbi-drivers-sqlite]
*to RR (#fink, 12/16) (only builds for static libperl.a, which is apple's not fink's)
**[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/postgresql-perl-581.log postgresql-perl-581]
**[http://fink.opendarwin.org/build/2006-03-09/ppc/logs/postgresql-perl-584.log postgresql-perl-584] 

{{Fink_Header}}

[[Category: Fink|Packaging:breakage/2006-03-09/ppc]]
[[Category: Fink Packaging|breakage/2006-03-09/ppc]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Packaging:gettext</title>
    <ns>0</ns>
    <id>1706</id>
    <revision>
      <id>11599</id>
      <parentid>11247</parentid>
      <timestamp>2009-07-24T14:55:59Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <comment>Replaced content with '{{Fink_Header}}

Obsolete!

{{Fink_Header}}

[[Category: Fink|Packaging:gettext]]
[[Category: Fink Packaging|gettext]]'</comment>
      <sha1>8qt4258x704vkc6fnz1di2d7256f7k9</sha1>
      <text xml:space="preserve" bytes="118">{{Fink_Header}}

Obsolete!

{{Fink_Header}}

[[Category: Fink|Packaging:gettext]]
[[Category: Fink Packaging|gettext]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Packaging:pkg-config indirect deps</title>
    <ns>0</ns>
    <id>1676</id>
    <revision>
      <id>10304</id>
      <parentid>6254</parentid>
      <timestamp>2006-09-29T23:39:50Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>[[Fink:Packaging:pkg-config]] moved to [[Fink:Packaging:pkg-config indirect deps]]: make room for other pkgconfig pages</comment>
      <sha1>rdwn6cec2lg3acp4eia4mmcks0um6u5</sha1>
      <text xml:space="preserve" bytes="3557">{{Fink_Header}}

'''THIS PAGE IS OBSOLETE (or at least on hold). The new pkg-config 0.20 ''does'' appear to be compatible with the previous functionality, so we do not need to make any changes or do large-scale testing at this time.'''

== pkg-config feature change ==

In order to upgrade pkgconfig beyond v0.17.2, we need to stop building it with &lt;code&gt;--enable-indirect-deps&lt;/code&gt;. That flag causes the pkg-config program to recurse down the &lt;code&gt;Requires&lt;/code&gt; field of .pc files in response to &lt;code&gt;--libs&lt;/code&gt; and other commands. Without it, only flags from the specific module(s) requested are returned.

In old versions, that behavior was the default; in recent versions, it was optional. We enabled it in order to maintain the existing behavior at the time. In new versions, the flag is broken and upstream does not appear eager to fix it. The new versions implement new fields in the .pc file, so we will have to upgrade pkgconfig soon in order to support packages that use this new syntax.

As a result of dropping &lt;code&gt;--enable-indirect-deps&lt;/code&gt;, we need to test all packages that use pkg-config to make sure they still build. This needs to be done &quot;bottom-up&quot; by dependency and linkage. For an example, quux links to libbar via pkg-config and libbar links to libfoo via pkg-config. We need to test-build libbar first, and then test-build quux using the libbar built with the new pkg-config.

The result of this configuration change will be fewer -I and -l flags; this will never require adding (Build)Depends. However, this may reveal that some packages having deficient compiler flags. For example, if quux directly accesses symbols from libfoo but the author did not include libfoo when determining the flags to use when compiling quux, quux will need to be patched to include libfoo. This is as simple as finding the pkg-config commands that handle libbar and adding libfoo to them (usually in the &lt;code&gt;./configure&lt;/code&gt; script, occasionally in the actual &lt;code&gt;Makefile&lt;/code&gt; or &lt;code&gt;Makefile.in&lt;/code&gt;. These changes do not require increasing the revision: they do not change the binary  , and are even safe to use with the old-behavior pkg-config (they merely reinforce the old behavior).

Technically, we will need to increase revisions and use versioned dependencies for the new pkg-config because the results of pkg-config are -l flags that affect the binary of the packages that use them. We also may need to use verisoned dependencies on all packages that link against these packages (and recursively). The linker flags propagate up the dependency chain via .la and other mechanisms that hard-code the flags for all dependencies, not just via .pc files, which are not hard-coded recursively. However, we do not need to force dist-upgrade or use other mechanisms to force the user to upgrade his whole system at once as we will with the C++ ABI change. If he upgrades libbar, he can still use the quux that was built with the old libbar.

In the long run, this may mean we can remove some dependencies from these packages. For example, if quux &lt;i&gt;doesn't&lt;/i&gt; directly access things in libfoo, we would no longer need to list libfoo at all for quux. Because 'pkg-config --libs libbar' would stop passing -lfoo to quux, libfoo is no longer a BuildDepends or Depends of quux. As a bonus, if libbar is ever rewritten to use libfoofoo instead of libfoo, we don't need to adjust the dependencies of all packages that use libbar.

{{Fink_Header}}

[[Category: Fink|Packaging:pkg-config]]
[[Category: Fink Packaging|pkg-config]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Policy:Crypto</title>
    <ns>0</ns>
    <id>1065</id>
    <revision>
      <id>11321</id>
      <parentid>11288</parentid>
      <timestamp>2007-06-11T18:38:55Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of VagZdj, changed back to last version by Dmacks</comment>
      <sha1>3od7ey0ro7w2uwntrvkcgp3cym3wbob</sha1>
      <text xml:space="preserve" bytes="2140">{{Fink_Header}}

== Crypto Policy ==

Based on our current understanding of current US law, any package that &lt;i&gt;implements&lt;/i&gt; cryptographic methods must be in the &quot;crypto&quot; section. As an extension of this policy, any package that Depends (or BuildDepends) on such a package [[Fink:Policy:Trees|must also be in crypto]], even if it does not implement cryptographic methods itself.

* Debian's solution for the crypto/US-export restriction is simply to [http://www.debian.org/mirror/list-non-US distribute from a non-US site].  (Which we can do if we move everything off to [http://finch.finkproject.org/ finch] which is in the Netherlands.)

Packages that do not require crypto packages when they are compiled but instead automatically load them at runtime if they are present and as such could still run (albeit with reduced capabilities or features), need not be in crypto because scrapping crypto is not fatal to them. Similarly, packages that link to the system's crypto libraries need not be in crypto/ because fink presumes a standard system installation is present.

* Eventually move this to the [http://fink.sourceforge.net/doc/packaging/policy.php Packaging Manual] once content gets ironed out.
* Do we need a system-ssl virtual package?
* '''[a]''' What about GPL software that links to OpenSSL that has a clause explicitly allowing linking OpenSSL?
** That could mean License:GPL, but does OpenSSL also have to give explicit permission here, since they're the ones who say &quot;use us but don't redistribute&quot;, which is what causes us to say License:Restrictive?.

'''[b]''' Note that Debian, in about the same situation, has resolved this: http://www.debian.org/legal/

'''[a]''' and maybe '''[b]''' are conflating licensing/redistribution, which [http://fink.sourceforge.net/doc/packaging/policy.php#openssl has a policy] already (which is why I removed its discussion from this page, since I had nothing to add at the time), with section:crypto which just seems to be part of Fink's oral tradition.

{{Fink_Header}}

[[Category: Fink|Policy:Crypto]]
[[Category: Fink_Documentation|Policy:Crypto]]
[[Category: Fink_Policy|Crypto]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Policy:GCC</title>
    <ns>0</ns>
    <id>1037</id>
    <revision>
      <id>5182</id>
      <parentid>4939</parentid>
      <timestamp>2006-04-06T01:31:54Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>istfg9z0hkgbeizwkg3x72iebsh502h</sha1>
      <text xml:space="preserve" bytes="1463">{{Fink_Header}}

== The GCC field ==

A package needs a GCC field if anything in the package is compiled with c++ or g++.

This is a practical guide. For policy information see [http://fink.sourceforge.net/doc/packaging/compilers.php the packaging manual] and [http://www.mail-archive.com/fink-devel@lists.sourceforge.net/msg11877.html email to fink-devel] .

=== How to tell if a binary has been compiled with g++ ===

A good way to tell if a binary in your package was compiled with g++ is:

&lt;pre&gt;
nm -g $binary &gt; symbols
c++filt3 &lt; symbols &gt; symbols.filt
diff symbols symbols.filt
&lt;/pre&gt;

In most cases, if there is a difference it was compiled with g++ (some exceptions exist involving weirdly named C functions).

=== The script ===

The script [http://vasi.webhop.org/trac/browser/fink/trunk/scripts/gcc-field gcc-field] can check one or more packages to see if they need a GCC field.

To check one package, run it like this:

&lt;pre&gt;
gcc-field $package
&lt;/pre&gt;

If it prints anything, the package doesn't have the right field (or is an exceptional case). If it doesn't print anything, you're ok!

You can also check all your packages:

&lt;pre&gt;
gcc-field --maintainer=Vasilevsky
&lt;/pre&gt;

Or check a set of files:

&lt;pre&gt;
find ./root-foo | gcc-field -
&lt;/pre&gt;

Please run &lt;code&gt;gcc-field --help&lt;/code&gt; for details.

{{Fink_Header}}

[[Category: Fink|Policy:GCC]]
[[Category: GCC|Fink Policy]]
[[Category: Fink_Documentation|Policy:GCC]]
[[Category: Fink_Policy|GCC]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Policy:Packaging Java</title>
    <ns>0</ns>
    <id>1589</id>
    <revision>
      <id>10536</id>
      <parentid>10535</parentid>
      <timestamp>2007-02-20T14:44:00Z</timestamp>
      <contributor>
        <username>Chris01</username>
        <id>171</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of Zenek, changed back to last version by RangerRick</comment>
      <sha1>t8czgj11wmmd4vo3o9z3ul206gt8sat</sha1>
      <text xml:space="preserve" bytes="3267">{{Fink_Header}}

There is no official &quot;policy&quot; per se for packaging Java software in Fink, but there are a number of best practices that make it easier.

== The '''''Type''''' Field ==

By default, if you use &lt;code&gt;Type: java&lt;/code&gt; without specifying a version, Fink will use the '''lowest''' JDK found in /System/Library/Frameworks/JavaVM.framework/Versions.  So if you have a 1.3.1, 1.4.2, and 1.5.0 JDK on your system, it will use the 1.3.1.

If you use &lt;code&gt;Type: java('''version''')&lt;/code&gt; (i.e., &lt;code&gt;Type: java(1.4)&lt;/code&gt;), it will use the '''highest''' JDK found that matches that version.  So if you have both a 1.4.1 and 1.4.2 JDK on your system, it will use the 1.4.2 JDK.

Regardless of whether you use the versioned or unversioned field, as long as you're setting &lt;code&gt;Type: java&lt;/code&gt;, the build environment inside your package will have the following extra environment variables set:

  JAVA_HOME /System/Library/Frameworks/JavaVM.framework/Versions/''&lt;code&gt;detected_version&lt;/code&gt;''/Home
  PATH      /System/Library/Frameworks/JavaVM.framework/Versions/''&lt;code&gt;detected_version&lt;/code&gt;''/Home/bin:$PATH

== Using the '''''Type''''' Field Effectively ==

There are 2 major ways it is recommended to package Java software, depending on whether you want to require a specific JDK, or you want to target a specific JDK or higher.

=== Requiring a Specific JDK ===

If you want to ensure your software is compiled with, say, the 1.4 JDK, use:

  Type: java(1.4)

This will detect a JDK of that specific major and minor version number, and set &lt;code&gt;JAVA_HOME&lt;/code&gt; and &lt;code&gt;PATH&lt;/code&gt; respectively.  If the software you are packaging uses &lt;code&gt;javac -target&lt;/code&gt; (or ant's &amp;lt;javac target=&quot;&quot;/&amp;gt; notation), it will still use the JDK that you specified, but generate bytecode compatible with the target given.

=== Using The Available JDK (recommended) ===

The problem with using &lt;code&gt;Type: java(1.4)&lt;/code&gt; is that it requires a specific JDK, even if later ones are available.  The primary reason to do so is to be able to create bytecode usable by older JDKs.

Instead, it is recommended to do the following:

  Package: myjavapackage
  Type: java
  Depends: system-java (&gt;= 1.4-1)
  BuildDepends: system-java-dev (&gt;= 1.4-1)
  Patch: %n.patch

Create a patch that makes sure that javac is being called with a target of 1.4.  In the case of an ant build.xml, change any entries like:

  &lt;javac srcdir=&quot;foo&quot;&gt;
    &lt;patternset refid=&quot;foo.files&quot; /&gt;
  &lt;/javac&gt;

...into...

  &lt;javac target=&quot;1.4&quot; srcdir=&quot;foo&quot;&gt;
    &lt;patternset refid=&quot;foo.files&quot; /&gt;
  &lt;/javac&gt;

In the case of some other tool calling &lt;code&gt;javac&lt;/code&gt;, you can pass &quot;&lt;code&gt;-target&lt;/code&gt;&quot; on the &lt;code&gt;javac&lt;/code&gt; command-line.

This lets you not care what JDK is installed, as long as it's 1.4 or newer.

== Problems with specific JDKs ==

; as of release 1.5, 'enum' is a keyword, and may not be used as an identifier : The 1.5 JDK adds some new keywords to the language, like &lt;code&gt;enum&lt;/code&gt;.  In some cases, you might need to add &lt;code&gt;source=&quot;1.4&quot;&lt;/code&gt; to your build.xml (or &lt;code&gt;-source 1.4&lt;/code&gt; on the javac command-line) to make things work correctly.

{{Fink_Header}}

[[Category: Fink|Policy:Packaging Java]]
[[Category: Fink_Documentation|Policy:Packaging Java]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Policy:Validation</title>
    <ns>0</ns>
    <id>1152</id>
    <revision>
      <id>5184</id>
      <parentid>2535</parentid>
      <timestamp>2006-04-06T01:34:39Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>18hcik7hjta2h40hfk6o9m33ov1ph24</sha1>
      <text xml:space="preserve" bytes="3243">{{Fink_Header}}

== The Fink Validator ==

The [http://fink.sourceforge.net/doc/users-guide/usage.php?phpLang=en#validate fink validate] command is a tool that checks .info (package description) and .deb (compiled binary) package files for compliance with aspects of [http://fink.sourceforge.net/doc/packaging Fink Packaging Policy] and also detects a variety of common packaging mistakes. Before placing a package on the [http://sourceforge.net/tracker/?atid=414256&amp;group_id=17203 package submissions tracker], you must make sure the .info you submit and the .deb resulting from it have no validation warnings or errors.

If you are just getting starting as a package maintainer, some of the tests may seem arbitrary or excessively nit-picky. The validator is not designed to annoy you (the maintainer) to create un-necessary work, or as a power trip for fink admins, but rather to catch packages that are likely to cause problems for users. They are implemented as a direct result of commonly-observed mistakes in submissions and breakage or general annoyance discussed on the various mailing lists and other venues.

If you are having difficulty solving a validation message, look at other packages similar to yours that validate cleanly. There are usually a variety of solutions to any given problem, depending on the type of package, the user-friendliness of the upstream compiling scripts, etc. Feel free to ask on the mailing lists or IRC channel if you need help.

== Newly-Implemented Tests ==

New tests are created as necessary. Fink admins, developers who handle the package submissions queue, and other users may be running a prerelease version of the fink program that has tests not present in the release version. If someone tells you about a problem in one of your packages as a result of a validation test you don't have, please attempt to fix it. You can't be faulted for not knowing earlier, but...now you know about it. Our goal is to keep the supported fink distributions up to the latest validation standards.

In addition to checks for new features in new fink versions, the following generally-applicable new tests may not be present in all released versions of fink yet:

* The syntax of &quot;Depends&quot; (and similarly-formatted fields) is now checked more strictly.
* There shouldn't be a field named &quot;InfoN&quot;.
* &quot;dummy&quot; is not a valid key in the &quot;Type&quot; field.
* We check for a common misuse of the -framework flag in a pkg-config (.pc) data file. This is usually a bug in the upstream version.
* If there are texinfo documentation files, they must be declared in an &quot;InfoDocs&quot; field so that they are linked into the table of contents.
* Different language-version variants of perl and python libraries (-pyXX and -pmXXX packages) must be completely orthogonal; no two variants can have any files in common. Users must be able to install multiple variants concurrently without having conflicts.
* Installed files must not contain references to the pathnames where they were compiled. There are new tests for this problem relevant to compiled python modules (among other filetypes).

{{Fink_Header}}

[[Category: Fink|Policy:Validation]]
[[Category: Fink_Documentation|Policy:Validation]]
[[Category: Fink Policy|Validation]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Policy:system-openssl</title>
    <ns>0</ns>
    <id>1087</id>
    <revision>
      <id>11326</id>
      <parentid>11294</parentid>
      <timestamp>2007-06-11T18:40:05Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of ZddIug, changed back to last version by Dmacks</comment>
      <sha1>9br3yz3jwlukcw0zk3jgilypgz1qi3y</sha1>
      <text xml:space="preserve" bytes="2424">{{Fink_Header}}

== Linking Against the System OpenSSL ==

There is a package in Fink called &lt;code&gt;system-openssl-dev&lt;/code&gt; that exists to make it easier to link software against Apple's provided OpenSSL ([[Fink:Policy:Crypto|why?]]).  It creates symlinks in &lt;code&gt;'''prefix'''/lib/system-openssl&lt;/code&gt; that you can use to override the flags of existing software.

In some cases, you will have to patch your package to point to the system-openssl directory, but most likely, all you will have to do to use system-openssl-dev is to set one or more of the following:

  CPPFLAGS:        -I%p/lib/system-openssl/include
  CFLAGS:          -I%p/lib/system-openssl/include
  CXXFLAGS:        -I%p/lib/system-openssl/include
  
  LDFLAGS:         -L%p/lib/system-openssl/lib
  LIBS:            -L%p/lib/system-openssl/lib
  
  PKG_CONFIG_PATH: %p/lib/system-openssl/lib/pkgconfig

== Creating Upgrade Packages ==

Since the goal is to create packages using OpenSSL that ''don't'' have to be in the &lt;code&gt;crypto/&lt;/code&gt; tree, you will probably want to make upgrade packages for the old versions of your SSL packages.  If you have a set of packages such as &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;foo-ssl&lt;/code&gt; both of which have splitoffs, you will have conflict/upgrade issues if you just make a new foo-ssl dummy package that depends on &lt;code&gt;foo&lt;/code&gt;.  Instead, the recommended practice is to create a &lt;code&gt;foo-unified&lt;/code&gt; package.

=== Example: Before Unification ===

foo.info:

  Package: foo
  Depends: %N-shlibs
  Conflicts: foo-ssl
  SplitOff: &lt;&lt;
    Package: %N-shlibs
    Conflicts: foo-ssl-shlibs
  &lt;&lt;

foo-ssl.info:

  Package: foo-ssl
  Depends: %N-shlibs
  Conflicts: foo
  SplitOff: &lt;&lt;
    Package: %N-shlibs
    Conflicts: foo-shlibs
  &lt;&lt;

=== Example: After Unification ===

foo-unified.info:

  Package: foo-unified
  Depends: %N-shlibs
  Replaces: foo (&lt;&lt; %v-%r), foo-ssl (&lt;&lt; %v-%r)
  SplitOff: &lt;&lt;
    Package: %N-shlibs
    Replaces: foo-shlibs (&lt;&lt; %v-%r), foo-ssl (&lt;&lt; %v-%r)
  &lt;&lt;
  SplitOff2: &lt;&lt;
    Package: foo
    Depends: %N (= %v-%r)
  &lt;&lt;
  SplitOff3: &lt;&lt;
    Package: foo-shlibs
    Depends: %N-shlibs (= %v-%r)
  &lt;&lt;
  SplitOff4: &lt;&lt;
    Package: foo-ssl
    Depends: %N (= %v-%r)
  &lt;&lt;
  SplitOff5: &lt;&lt;
    Package: foo-ssl-shlibs
    Depends: %N-shlibs (= %v-%r)
  &lt;&lt;


{{Fink_Header}}

[[Category: Fink|Policy:system-openssl]]
[[Category: TODO|Policy:system-openssl]]
[[Category: Fink Policy|system-openssl]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Shlibs tutorial</title>
    <ns>0</ns>
    <id>1102</id>
    <revision>
      <id>12064</id>
      <parentid>11426</parentid>
      <timestamp>2012-06-01T19:12:49Z</timestamp>
      <contributor>
        <username>Nieder</username>
        <id>386</id>
      </contributor>
      <minor/>
      <comment>fix &lt;/code&gt; closing</comment>
      <sha1>pk2jc4w96ygu1nip1oef7v82wneql9l</sha1>
      <text xml:space="preserve" bytes="10522">{{Fink_Header}}

'''Work in progress: All 'information' contained herein is probably wrong.'''

[http://fink.sourceforge.net/doc/packaging/policy.php?phpLang=en#sharedlibs Chapter 3.4] of the packaging manual sets out Fink policy for packages containing shared libraries, and is essential reading if you want to make such a package.  This document is an attempt to provide extra help for new shared-library packagers.

==SplitOffs==
Any package containing shared libraries will contain SplitOffs -- multiple separate, non-overlapping packages compiled from the same source code.  The points of SplitOffs are:
* To allow solve concurrency/overlap issues: Assume Package A conflicts with Package B...perhaps both contain identically-named files. But there are subsets of A and B that don't conflict.  By putting these non-conflicting files in splitoffs of A and B, a user can have both of these splitoffs installed concurrently, along with either A's or B's subset that overlaps the other's.
* Users may want to install only part of a package. There may be some files that are widely used while others are only rarely needed and have extensive dependencies.

The first of these situations is particularly relevant for packages containing shared libraries.  The actual shared libraries and other support and data files are put in one SplitOff, which is used at runtime by other fink packages.  All filenames (or directories) in this &quot;-shlibs&quot; package contain a &quot;library version&quot; number, which is assigned by the library author and may or may not have any relationship to the package's version number.  This convention allows multiple versions of the same library to be installed concurrently without conflict.  For a given compiled package, -shlibs packages for different library versions to which it links are &lt;i&gt;not&lt;/i&gt; interchangeable. Compiled programs contain the complete filenames of files to which they link, which are therefore specific to a given library-version's -shlibs package.

The compile-time development files -- headers, generic library symlinks, etc -- often do conflict among major versions of a given library, however. so they are put in separate SplitOff packages that can be swapped in or out as necessary for whichever version is desired when compiling something.  This division is mandated by Fink's shared library policy.

===How they work===
Once the parent package has been built and installed into the temporary build-root directory (%d):
* a new build-root directory is made for each SplitOff.
* specified files are copied fromt the original build-root and/or compile directory to each new build-root
* a separate .deb file is made from each build-root (as well as the build-root for the main/parent package)

Thus, you perform a single compile and install process.  But, then splitting-off occurs, and you end up with several .debs -- one for the parent package and one for each SplitOff.

==Separation of build parameters from .deb-related parameters==
The structure of a SplitOff-containing .info file reflects the fact that there is one build process and several package-creation processes.

===Build parameters===
These parameters affect how the source is built, i.e. everything up to the end of the InstallScript. There should be only one instance of each of them, preferably at the start of the .info file.  Since there is ony one build step, these parameters affect the contents of every .deb made by the .info file.

e.g. BuildDepends, Maintainer?, Source, HomePage, License, Source-MD5, SetCPPFLAGS, SetLDFLAGS, ConfigureScript, InstallScripts... (finish list)

===Deb parameters===
These parameters affect how the built software is put into .deb packages, after the InstallScript has finished.  Each may occur multiple times in the .info file -- a maximum of once per SplitOff, plus once for the parent package.  For the parent package, these parameters go at the top of the .info file.  For SplitOffs, they go inside the SplitOffN: field.

e.g. Package, Depends, Files, Shlibs, ConfigFiles, DocFiles...

'''NB.''' Some .deb parameters are automatically inherited from the parent.  This can be confusing, because it means they only appear once per .info file, making them falsely look like build parameters.    You can treat them like build parameters, and specify them only once at the top of the .info file.  Or you can override them 

e.g. Version?, Revision?, Description, DescDetail...

===Parent package deb parameters===
A source of major confusion is that the parent package doesn't have it's own SplitOff section, but nevertheless has a package created.  Thus, its deb-related parameters appear at the top of the .info file, near the build parameters.  But don't be fooled!  These are still deb-related parameters -- and so they apply only to the parent package, and are not inherited by SplitOffs.  A good strategy is to keep these in a separate section of the .info file, after the build parameters.

==Name your package==
Many packages contain both shared libraries and binaries.  The 'main' package (i.e. the one called %N) should contain whichever of these is more important -- i.e. whichever one the user is most likely to expect.  It can't contain both.  The Packaging Manual [http://fink.sourceforge.net/doc/packaging/policy.php?phpLang=en#sharedlibs] gives clear guidance on whether to call your package libfoo (with splitoffs foo-shlibs, foo-bin) or bar-dev (with splitoffs bar-dev, bar-shlibs).

==Build==
Make a splitoff-less .info file for your package, without worrying about what will go in each SplitOff.  Make sure it compiles, installs and validates correctly.  Build with -kK  so you have access to the source and build directories afterwards.

==Split up the SplitOffs==
Once you have a single built package, installed into a single build-root, you can sift through the files and work out which belong in which SplitOff.  The idea here is to separate stuff into splitoffs by '''&quot;use case&quot;'''. If a bunch of files satisfy one use case (running linked things, building linked things, running an included executable) they
go together.

Here are the debs you should end up with for a shared libraries package:

===Shared libraries===
* How many debs: One per 'set of related libraries'. Usually this means one :-)
* Naming convention: libfoo1-shlibs. The number is that of the library version, not (necessarily) the package version.
* What files go in it: Everything required for an executable that links to this one to &lt;i&gt;run&lt;/i&gt;.
** The file containing the actual shared library and all links to it, named &lt;i&gt;at least as specifically&lt;/i&gt; as the &lt;code&gt;install_name&lt;/code&gt; for it.
*** The file containing the actual code, for example, libfoo.1.1.0.dylib
*** Less-versioned symlinks, for example, libfoo.1.1.dylib and libfoo.1.dylib
** Any &lt;i&gt;runtime&lt;/i&gt; resources needed by the library. For example config files, default images, or gettext .mo files.
* Required fields:
** Package
** Shlibs (see below)

===Development stuff===
* How many debs: One per shlibs package.
* Naming convention: libfoo1 (the parent) or bar2-dev
* What files go in it: Everything needed to link something to the library
* Contents:
** The symlink that '-lfoo' finds: libfoo.dylib
** The static libraries
** All headers
** If there are pkgconfig files, include them
** If there's a 'foo-config' executable to find compile parameters, include it
** If there's '''developer''' documentation or examples put them here.
* Required fields: 
** BuildDependsOnly: true
** Depends: libfoo1-shlibs (= %v-%r). There should be NO other depends.
** If there's a libfoo1-dev and a libfoo2-dev, they should Conflict/Replace each other

===Other stuff===
* How many debs: As many as necessary, maybe none. At least one for type 'bar'.
* Naming convention: bar (the parent), bar-plugins, libfoo1-bin, etc
* What goes in it: Any logical 'group of things the user might want together'.
* Contents:
** One or more executables, OR
** One or more plugins, OR
** One or more loadable themes, ...
** PLUS anything needed to use the required contents, such as config files, default images or .mo files
** '''user''' documentation, or useful examples
* Required fields:
** Depends: libfoo1-shlibs (= %v-%r). May be other depends.

==Dependencies==
Once you've decided which files belong in which SplitOff, you can work out the dependencies for each splitoff: 
* Run 'otool -L' on every binary and library in your package.  Every listed library in /sw or /usr/X11R6 is a dependency that should be declared in the appropriate splitoff.
* There may also be non-link dependencies -- e.g. an image-editor may want to use the command-line tool 'imagemagick' to convert things at runtime.  One way to find these is to look at the output of ./configure.  Any other methods?

Dependency rules:
* Dependencies within the same .info file should ALWAYS have (= %v-%r), because things that are built together generally have high interdependence.

* Within a library package, the developement deb should always depend on the associated shlibs deb. Usually it should have no other depends.

* 'indirect dependencies'. Basically, this is when foo depends on bar, and bar depends on iggy. Does foo need to depend on iggy? Well, it kinda depends. What if bar stops depending on iggy? Then things break...so you have to make sure that won't happen without appropriate adjustments to foo.  A good rule is to always include indirect deps, *unless* you control all the intermediate packages, in which case you'll probably notice if something changes!

* What about the shlibs deb, and other debs within a library package? Treat them just as if they were all totally separate, *except* for the %v-%r issue. You should still use otool to find the link deps for each of them, which may include other splitoffs, or may include totally different things, or both.

==The Shlibs field==
Your %N-shlibs SplitOff needs to contain a field 'Shlibs'.  The contents of this field are clearly described in the [http://fink.sourceforge.net/doc/packaging/policy.php?phpLang=en#sharedlibs Packaging Manual].  Note that the third field (the name of the package that provides the library) should be %N-shlibs not %N.  Usually %n will be appropriate.

==Packaging Manual==
Now go back and read the [http://fink.sourceforge.net/doc/packaging/policy.php?phpLang=en#sharedlibs Packaging Manual] to make sure your package follows the policy described there.


{{Fink_Header}}

[[Category: Fink|Shlibs Tutorial]]
[[Category: Fink_Policy|Shlibs Tutorial]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Porting Notes</title>
    <ns>0</ns>
    <id>1680</id>
    <revision>
      <id>10475</id>
      <parentid>10433</parentid>
      <timestamp>2007-01-26T23:18:28Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <comment>/* Common Libtool Linking Problems */</comment>
      <sha1>8o8xxcsgjmvtib5wjxo5xn8mzkrlfla</sha1>
      <text xml:space="preserve" bytes="3394">{{Fink_Header}}

This page explains some of the common 'gotchas' encountered when porting packages to OS X. It is not inclusive, and is only meant to be a list of the more commonly encountered changes that need to be done to packages.

===Compiler Flags===

The following flags are not valid on Darwin:

* '-undefined suppress'

===Nested Functions in GCC 4.0.1 (XCode 2.2)===

See [[Fink:Package_issues#Nested_functions_issue_from_XCode_2.2_.28gcc-4.0.1.29]]
and also [http://developer.apple.com/technotes/tn2006/tn2161.html Apple's Technical Note on Nested Functions].

===The &quot;head&quot; command===

The program &quot;&lt;code&gt;head&lt;/code&gt;&quot; from [http://pdb.finkproject.org/pdb/package.php/textutils &lt;code&gt;Textutils&lt;/code&gt;] builds differently in 10.3 and 10.4, even though they are the same upstream version.  The 10.4 build seems to be stricter in failing with the format &quot;&lt;code&gt;head -1&lt;/code&gt;&quot;.  If your code uses head, make sure you use the &quot;&lt;code&gt;head -n 1&lt;/code&gt;&quot; format, which is more explicit.

===The _environ symbol===

The missing &lt;code&gt;_environ&lt;/code&gt; symbol is a common problem when porting to OS
X. Here's the standard patch used in several fink packages:

&lt;pre&gt;+#ifdef __APPLE__
+#include &lt;crt_externs.h&gt;
+#define environ (*_NSGetEnviron())
+#else
 extern char **environ;
+#endif&lt;/pre&gt;

A more portable solution is to have &lt;code&gt;configure&lt;/code&gt; check for the presence of that header and symbol directly--&quot;test for the actual feature instead of attempting to divine the features from the platform&quot;. Add

&lt;pre&gt;AC_CHECK_HEADERS(crt_externs.h)
AC_CHECK_FUNCS(_NSGetEnviron)&lt;/pre&gt;

to &lt;code&gt;configure.ac&lt;/code&gt; or &lt;code&gt;configure.in&lt;/code&gt; and use this patch for the source file:

&lt;pre&gt;+#ifdef HAVE_CRT_EXTERNS_H
+#include &lt;crt_externs.h&gt;
+#endif
+#ifdef HAVE__NSGETENVIRON
+#define environ (*_NSGetEnviron())
+#else
 extern char **environ;
+#endif&lt;/pre&gt;

to implement the results of the AC_CHECK_* tests.

An alternative portable solution is to [http://bugzilla.gnome.org/show_bug.cgi?id=124277 rewrite the code] to use &lt;code&gt;g_listenv()&lt;/code&gt; (requires glib &gt;= 2.8.0).

===Common Libtool Linking Problems===

There are several commonly-encountered library linking problems that have relatively simple solutions.

# On older libtool, relinking fails. This patch solves it:&lt;pre&gt;perl -pi -e 's/need_relink=yes/need_relink=no/g' ltmain.sh&lt;/pre&gt;
# An installed copy of the library is passed to the linker instead of the one being (re)built. That is, even if libfoo, which supplies /sw/lib/libfoo.dylib, is installed, building the libfoo package again should link other files against the libfoo shared library in the local build directory. A command like &lt;code&gt;gcc -o libfoo-demo -L/sw/lib -L. -lfoo&lt;/code&gt; is wrong, and should instead be &lt;code&gt;gcc -o libfoo-demo -L/sw/lib ./libfoo.dylib&lt;/code&gt; (i.e., explicit filename instead of gcc search paths). There are several possible causes:
## A bug in older libtool. This patch solves it:&lt;pre&gt;perl -pi -e 's/hardcode_direct=yes/hardcode_direct=no/g' configure&lt;/pre&gt;
## Bugs in packages' makefiles. They pass &lt;code&gt;LDFLAGS=-L$(build_dir) -lfoo&lt;/code&gt; instead of &lt;code&gt;LDFLAGS=$(build_dir)/libfoo.dylib&lt;/code&gt; (or &lt;code&gt;LIBADD=$(build_dir)/libfoo.la&lt;/code&gt;)
## Package maintainers' using some variant of the broken LDFLAGS syntax to fix some other problem.

[[Category: Fink|Porting Notes]]
[[Category: Fink_Documentation|Porting Notes]]

{{Fink_Header}}</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:0.25 new features:Incremental indexing</title>
    <ns>0</ns>
    <id>1059</id>
    <revision>
      <id>5188</id>
      <parentid>5107</parentid>
      <timestamp>2006-04-06T01:36:44Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>9xx0pco9333m44ra3nx2fr6pz5bxlzg</sha1>
      <text xml:space="preserve" bytes="887">{{Fink_Header}}

===What is it?===

Lets Fink read only new .info files instead of all of them. Also lets Fink load just the part of the package DB that it needs.

===Testing it===

* parameters
** index (write only) or other load (read/write)
** root or non-root
** different versions of fink
** with/without autoindex
** full or partial or proxy run

* race conditions
** run multiple finks at once

* exceptional cases
** rsync: files updated to earlier mtime than last index
** FinkCommander: needs whole DB, caching
** forget and re-load

* missing stuff and dealing with it
** index.db
** proxies.db
** finkinfo dir, or files within

* package has
** proxy stuff (name, version)
** loadable stuff (dumpinfo)

{{Fink_Header}}

[[Category: Fink|Roadmap 0.25 Incremental Indexing]]
[[Category: Fink Roadmap|0.25 Incremental Indexing]]
[[Category: Fink Internals|Incremental Indexing]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Updating Another's Package</title>
    <ns>0</ns>
    <id>1708</id>
    <revision>
      <id>5189</id>
      <parentid>4838</parentid>
      <timestamp>2006-04-06T01:37:16Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>d4rvv1ug23jx5alhqt446fpfhrtkkmo</sha1>
      <text xml:space="preserve" bytes="1154">{{Fink_Header}}

== Updating Packages that Don't Belong to You ==

People with commits access may update a package for another maintainer without waiting to receive permission if any of the following are true:

#  The update is being made for architecture-specific reasons when the listed maintainer doesn't have access to that particular platform and it doesn't break the package on the platform the maintainer ''does'' use.
#  The update is of a manifestly trivial nature:  e.g. new source URL, a typo in the dependency list, spelling errors in the description fields, etc.
#  A week has elapsed without any communication from the maintainer to the mailing lists or the original complainant.

If you do update another maintainer's package this way '''please notify the maintainer'''. Not only is it polite, but some maintainers keep their packages under outside version control, so they'll probably clobber your changes on their next update if they don't know they need to merge them into their own.

[[Category:Fink|Updating Another's Package]]
[[Category:Fink_Packaging|Updating Another's Package]]
[[Category:Fink Policy|Updating Another's Package]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:buildlocks</title>
    <ns>0</ns>
    <id>1144</id>
    <revision>
      <id>11965</id>
      <parentid>11959</parentid>
      <timestamp>2010-10-08T00:35:48Z</timestamp>
      <contributor>
        <username>Alexkhansen</username>
        <id>167</id>
      </contributor>
      <comment>/* Common causes of buildlock failures */</comment>
      <sha1>hz4xcpg1079txsauy5sl85vpj8aseml</sha1>
      <text xml:space="preserve" bytes="5297">{{Fink_Header}}

== The buildlock subsystem ==

Buildlocks are designed to prevent concurrent fink processes from interfering with each other's dependencies. For example, if one fink process is compiling a package &quot;foo&quot; that has a build-time dependency on the package &quot;bar-dev&quot;, that fink process will set a build-lock that prevents another fink (or dpkg or apt or...) from removing the bar-dev package until the first fink process finishes building the package foo. In addition, buildlocks prevent concurrent builds of any given package (name-version-revision) to prevent the build processes from over-writing each other's files.

== Lock packages ==

The main component of a buildlock is an actual additional package that fink installs. Each buildlock package name is composed of the string &quot;fink-buildlock-&quot;, followed by name, version, and revision of the packge whose build it represents, and the version string of the buildlock package is the date and time that the build was started. During the time that this package is installed, you will not be allowed to install, remove, or upgrade any packages if such an action build violate the dependencies of the build process.

When a fink package-building process ends, its dependencies are no longer needed and the lock-package that protects them can be removed. This package removal happens automatically when a package builds successfully, and &lt;i&gt;usually&lt;/i&gt; when a package build fails as well. Unfortunately, there are times when a package build fails so badly that the lock-package may not get removed properly. This situation can also occur if something interferes with the lock removal process itself, for example the computer being turned off, or a user pressing control-C or other interrupt.

== Install levels ==

There are two main steps in installing a package:

1) The package tarball is unpacked, patched, configured, and compiled into a debian archive.  This part is done by the fink executable using a variety of helper programs.

2) The debian archive is then is used by the dpkg program to actually put useful parts of software where it can be ran.

The significance of this is because fink can complete its part and the failure occur during the dpkg part.  In this case, the error message will mention dpkg specifically.  When it does, there is nothing that the fink executable can do to fix the error, proceed directly to the last bulleted item.

== Common causes of buildlock failures ==

* Trying to install or remove a package, if such an action would violate a build-lock's dependencies.
: Wait until the build has completed.

* Trying to build a package when that package is already in the process of being built.
: Wait until the build has completed.

* Trying one of the above actions when there are dead locks left from a previous, failed attempt to compile a package. 
: Remove the lock manually. &lt;code&gt;fink list -t fink-buildlock&lt;/code&gt; will list them, then you can use &lt;code&gt;fink remove &lt;i&gt;package-name&lt;/i&gt;&lt;/code&gt; to remove them as with any other package. Eventually, &lt;code&gt;fink cleanup&lt;/code&gt; will provide a cleaner interface for this housekeeping task. Eventually, fink will automatically clear dead buildlocks at various points in its processing.  Note--the &quot;eventuallys&quot; have been implemented as of fink-0.26--[[User:Alexkhansen|Alexkhansen]] 14:54, 8 March 2007 (CET)

* Installing the buildlock package when fink is confused.
: The dependency engine used by fink is not perfect. Sometimes if you request a build that entails many other builds or have a single fink command build many packages at once (for example, &lt;code&gt;fink update-all&lt;/code&gt;), it will try to build a package with the wrong dependencies installed. The crash will tell you which package fink was trying to build at that moment: try to have fink build just that package, which will usually succeed, then you can retry the original command that led to the crash. Note that for complex build requests, you may have to go through several iterations of build-a-package/retry-the-whole-set...each time you will get further through the process. Packages whose builds had succeeded before the crash will &lt;i&gt;not&lt;/i&gt; need to be rebuilt.

* Installing the buildlock package when &lt;code&gt;dpkg&lt;/code&gt; is confused.
: Symptom:  An error message like the following:
&lt;pre&gt;dpkg: parse error, in file `/sw/var/lib/dpkg/status' near line 537
package `fink-buildlock-antlr-2.7.4-2':  missing version&lt;/pre&gt;
:This situation is an example of [http://www.finkproject.org/faq/comp-general.php?phpLang=en#dpkg-parse-error Fink FAQ #6.13]. For buildlocks, there is a simpler solution that often works.
: This error occurs if a build ends ungracefully, e.g. if the machine loses power in the middle of it.  In such an event the buildlock package isn't toggled to &quot;not-installed&quot; in &lt;code&gt;dpkg&lt;/code&gt;'s status file, whereas &lt;code&gt;fink&lt;/code&gt; doesn't think it exists.  &lt;code&gt;dpkg&lt;/code&gt; expects that any package that shows up as &quot;installed&quot; needs to have a version plus other information.
: To fix this you'll need to edit &lt;code&gt;/sw/var/lib/dpkg/status&lt;/code&gt; as root, go to the line number that is complaining, and change &lt;em&gt;install ok installed&lt;/em&gt; to &lt;em&gt;purge ok not-installed&lt;/em&gt;.
{{Fink_Header}}

[[Category: Fink|buildlocks]]
[[Category: Fink Internals|buildlocks]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:fink cleanup</title>
    <ns>0</ns>
    <id>1050</id>
    <revision>
      <id>6277</id>
      <parentid>5191</parentid>
      <timestamp>2006-07-10T20:06:47Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <comment>/* cleanup [mode(s) and options] */</comment>
      <sha1>ast3v0llun63r7vwg5c2mv0kmzlyswf</sha1>
      <text xml:space="preserve" bytes="1115">{{Fink_Header}}

== cleanup [mode(s) and options] ==

Removes obsolete and temporary files. This can reclaim large amounts of disk space. One or more modes must be specified:

; --debs : Delete .deb files (compiled binary package archives) corresponding to versions of packages that are neither described by a package description (.info) file in the currently-active trees nor presently installed.
; --sources, --srcs : Delete sources (tarballs, etc.) that are not used by any package description (.info) file in the currently-active trees.
; --buildlocks, --bl : Delete stale buildlock packages.
; --dpkg-status : Remove entries for packages that are not installed from the dpkg &quot;status&quot; database.

In addition, the following options may be used:

; -k, --keep-src : Move old source files to /sw/src/old/ instead of deleting them.
; -d, --dry-run : Print the names of the files that would be deleted, but do not actually delete them.
; -h, --help : Show the modes and options which are available.

{{Fink_Header}}

[[Category: Fink|cleanup]]
[[Category: Fink Commands|cleanup]]
[[Category: Fink Internals|cleanup]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Packaging:breakage/2006-01-17/ppc</title>
    <ns>0</ns>
    <id>1652</id>
    <revision>
      <id>5194</id>
      <parentid>4890</parentid>
      <timestamp>2006-04-06T01:55:12Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <sha1>g4ijx1lgiqupyr4fv945g8owy71icbc</sha1>
      <text xml:space="preserve" bytes="14436">{{Fink_Header}}

'''This page is obsolete. Use the [[Fink:Packaging:breakage|current breakage report]] insead.'''

This is the breakage report from [[User:msachs|msachs]]'s [http://fink.opendarwin.org/build/2006-01-17/ppc January 2006 powerpc] [http://cvs.sourceforge.net/viewcvs.py/fink/scripts/buildfink/ buildworld], manually updated as people (think they:) fix things. Note that for purposes of this build, all references to gcc3.3 are temporarily converted to gcc4. That's because gcc3.3 is end-of-life and lower versions are living on borrowed time, so anything that does not build on gcc4 cannot be supported much longer. In addition, Intel OS X will only have gcc4. The automatic error classifications are based on detecting certain [http://fink.opendarwin.org/build/2006-01-17/ppc/out/filters.xml text patterns] in the build transcripts.


==failures/frontend/array==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gst-ffmpeg.log gst-ffmpeg] *Feanor/RangerRick working on it?)
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/mbsystem.log mbsystem]

==failures/frontend/parse==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/autogen.log autogen]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gkrellkam2.log gkrellkam2]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/irssi-ssl.log irssi-ssl] apparently fixed
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/irssi.log irssi] apparently fixed
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/odcctools.log odcctools]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/par-pm581.log par-pm581]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/par-pm584.log par-pm584]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/postgresql-tcl.log postgresql-tcl]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/postgresql74-unified.log postgresql74-unified]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/silc-client.log silc-client]

==failures/frontend/storage==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gkrellm.log gkrellm]

==failures/java==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/commons-fileupload.log commons-fileupload]

==failures/linker/linkedit==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/dclib0-ssl.log dclib0-ssl]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/dclib0.log dclib0]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/nap.log nap]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/vtk.log vtk]

==failures/oneproj/dhcp==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/dhcp.log dhcp]

==failures/oneproj/par2==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/par2.log par2]

==failures/project/nofiles==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/bash.log bash]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/contacts.log contacts]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/eterm.log eterm]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gnome-libs.log gnome-libs]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/grisbi.log grisbi]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gtktalog.log gtktalog]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/mingw-gcc.log mingw-gcc]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/monodoc.log monodoc]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/mysql.log mysql]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/sed.log sed] (thesin may have a new %v)
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/singular.log singular]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/sndplay.log sndplay] False positive, builds successfully.

==failures/project/norule==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/aqbanking.log aqbanking]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/ipv6calc.log ipv6calc]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/modulef.log modulef]

==failures/project/stricter/conversion==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/advancecomp.log advancecomp]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/basiliskii.log basiliskii]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/plotutils.log plotutils]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/pyqt-py23.log pyqt-py23]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/pyqt-py24.log pyqt-py24]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/wxgtk.log wxgtk]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/xkobo.log xkobo] (bbraun mentioned solution on #fink in January)

==failures/project/stricter/nontype==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/celestia-gtk.log celestia-gtk] majojr new upstream %v, but requires wordexp so only viable on Tiger

==failures/project/stricter/scope==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/aptitude.log aptitude]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/freefem++.log freefem++]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gnucap.log gnucap]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gtkmm.log gtkmm]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/xerces-c23.log xerces-c23]

==failures/project/stricter/static==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/aegis.log aegis]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/afni.log afni]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/afterstep.log afterstep]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/bitchx.log bitchx]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/cernlib2003.log cernlib2003]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gok.log gok]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/ircd-hybrid.log ircd-hybrid]
  fix is:
  -static struct ConfItem *yy_aconf = NULL;
  +struct ConfItem *yy_aconf = NULL;
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/ncbitools.log ncbitools]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/python22-nox.log python22-nox]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/python22.log python22]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/python23-nox.log python23-nox]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/soup-ssl.log soup-ssl]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/soup.log soup]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/transfig.log transfig]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/uade.log uade]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/xmms.log xmms] (thesin has new %v, dmacks has patches for it but can't run it (confirmed on #fink)
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/yafc.log yafc]

==failures/syschange/cc_dynamic==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/r-base.log r-base]

==failures/unanalyzed==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/acme.log acme]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/amule.log amule]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/bzflag.log bzflag]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/cccc.log cccc]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/config-std-pm581.log config-std-pm581] Upstream [http://rt.cpan.org/Public/Bug/Display.html?id=17425 bug] filed
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/ghc.log ghc] Should be fixed (replaced the docbook-dsssl stuff with docbook-xsl) [[User:Brendan|Brendan]]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gift-fasttrack.log gift-fasttrack]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gnome-apt.log gnome-apt]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gtkpool.log gtkpool]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/hercules.log hercules] Might be hopeless. See DescPort.| I have a fixed version, but I am redoing packaging, so it will take a while to be added [[User:Dmalloc|Dmalloc]]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/ices2.log ices2]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/ladspa-cmt.log ladspa-cmt]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/libofx-shlibs.log libofx-shlibs]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/libwww-pm584.log libwww-pm584]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/m2crypto-python22.log m2crypto-python22]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/m2crypto-python23.log m2crypto-python23]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/mailsync-ssl.log mailsync-ssl]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/mead.log mead]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/mechanize-py22.log mechanize-py22]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/mechanize-py23.log mechanize-py23]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/mechanize-py24.log mechanize-py24]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/namot.log namot]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/nant.log nant]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/nat.log nat]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/nemesis.log nemesis]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/net-snmp.log net-snmp] These are usually defined in ''dynix.h:'' [[User:Dmalloc|Dmalloc]]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/netgen.log netgen]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/oidentd.log oidentd] May be hopeless, uses KERNEL_PRIVATE structures with no apparent workaround.
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/openvrml.log openvrml]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/pari-gp-xemacs.log pari-gp-xemacs]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/peercast.log peercast]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/phase.log phase]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/prcs.log prcs]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/qcad.log qcad]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/qemu.log qemu]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/qthello.log qthello]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/root5-cernlib.log root5-cernlib]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/vnc4.log vnc4]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/wv2.log wv2]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/xalan-j-docs.log xalan-j-docs]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/xerces-c.log xerces-c]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/xv.log xv]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/yacas.log yacas]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/zannot.log zannot]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/zoinks.log zoinks]

==failures/unknown/gtk==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gimp2-noprint.log gimp2-noprint]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gimp2-svg-noprint.log gimp2-svg-noprint]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gimp2-svg.log gimp2-svg]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gimp2.log gimp2]

==unbuilt/download==
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/fop-offo.log fop-offo] possible new info file on fink-devel mailing list, change in ant build and index.html, mere replacement by upstream team.

==gcc3.1 users==
*games/xmess.info (very old %v; new may build with gcc3.3/4; upgrade in tandem with games/xmame?)
*languages/intercal-threaded.info (uses varargs)
*languages/moscow-ml.info
*libs/vflib3.info
*net/mutella.info
*sci/euler.info
*text/dvibook.info (uses varargs)
*utils/malsync.info (does removing &lt;code&gt;-traditional-cpp&lt;/code&gt; from CFLAGS in Makefile help (maybe need &lt;code&gt;-no-cpp-precomp&lt;/code&gt; instead?))
*x11/fox1.info
*x11-wm/blackbox-rootless.info
*x11-wm/fvwm-ewmh.info
*x11-wm/icewm-basic.info
*x11-wm/icewm.info

==nested functions==
&lt;pre&gt;grep -l &quot;nested functions&quot; $(find . -name config.log)&lt;/pre&gt;
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gok.log gok]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/net-snmp.log net-snmp]
*[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/oidentd.log oidentd]

==triaged==
*to murr (maintainer) (#fink, 12/15)
**[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gnubg.log gnubg]
**[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/open-cobol.log open-cobol]
*to jfm/shawn (new %v?; upgrade from gcc3.1 C++ ABI?)
**crypto/gnomemeeting.info (needs to match ABI of pwlib &amp; openh323)
**libs/openh323.info (builds w/g++3.3 but needs to match ABI of pwlib)
**libs/pwlib.info (only builds w/g++3)
*to pogma (maintainer) (email, 12/13)
**[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/libdbi-drivers-mysql.log libdbi-drivers-mysql]
**[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/libdbi-drivers-sqlite.log libdbi-drivers-sqlite]
*&lt;tt&gt;-floop-transpose&lt;/tt&gt; was removed. Consider &lt;tt&gt;-fast -mcpu=750&lt;/tt&gt; instead
**[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/singular-factory.log singular-factory] (maintainer emailed 12/16)
**[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/ntl.log ntl] (maintainer emailed 12/16)
*to RR (#fink, 12/16) (only builds for static libperl.a, which is apple's not fink's)
**[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/postgresql-perl-581.log postgresql-perl-581]
**[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/postgresql-perl-584.log postgresql-perl-584] 
*to dmacks
**[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/libxml2.log libxml2] (not a functional bug; [http://bugzilla.gnome.org/show_bug.cgi?id=325203 bugzilla])
**[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/libxslt.log libxslt] (not a functional bug; [http://bugzilla.gnome.org/show_bug.cgi?id=324522 bugzilla])
*new pkg in -submissions
**[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/fluxbox.log fluxbox]
*other
**[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/gprolog.log gprolog] (maint emailed 2/21; [http://lists.gnu.org/archive/html/bug-prolog/2005-10/msg00001.html possible patch?])
**[http://fink.opendarwin.org/build/2006-01-17/ppc/logs/scite.log scite] (maint emailed 3/7; fileutils 'install' syntax; also likely bogus glib(1) dep)

{{Fink_Header}}

[[Category: Fink|Packaging:breakage/2006-01-17/ppc]]
[[Category: Fink Packaging|breakage/2006-01-17/ppc]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Package naming</title>
    <ns>0</ns>
    <id>1930</id>
    <revision>
      <id>11977</id>
      <parentid>11242</parentid>
      <timestamp>2011-02-21T15:32:22Z</timestamp>
      <contributor>
        <username>Alexkhansen</username>
        <id>167</id>
      </contributor>
      <sha1>h76dtibrz48qmtql13ap25y10eopcpi</sha1>
      <text xml:space="preserve" bytes="2324">{{Fink_Header}}

Fink package names are composed of hyphen-separated segments, some of which have standard meanings or usages by policy or by convention. In the following descriptions, &lt;code&gt;%N&lt;/code&gt; means any name root, possibly composed of more than one segment.

Fink's Shared Library Policy provides for two possible package layouts (remember that %N must include the major library-version for header and runtime-library packages):

1. Shared library, headers, perhaps some programs (library is the primary focus)
* %N -- compile-time files (headers, static libs, etc)
* %N-shlibs -- shared libraries and other runtime files they may need
* %N-bin -- user-land programs and other support files (if any exist)
2. Shared library, headers, some programs (programs are the primary focus)
* %N -- user-land programs and other support files
* %N-shlibs -- shared libraries and other runtime files they may need
* %N-dev -- compile-time files (headers, static libs, etc)

Packages of libraries for various programming languages encode the language, and the language-version if the packages are specific to a certain version:

* %N-py, %N-pyXX -- python, optionally specific to pythonX.X
* %N-pm, %N-pmXXX -- perl, optionally specific to perlX.X.X
* %N-rb, %N-rbXX -- ruby, optionally specific to rubyX.X

Packages that have different graphical mode options (these name components are usually only used when there is also a package that has the simple %N name):

* %N-nox -- Graphics disabled (&quot;no X11&quot;)
* %N-x11 -- X11 graphics enabled
* %N-aqua -- Aqua (OS X native) graphics enabled

QT4 packages often use the following scheme to facilitate the use of Variants:
* %N-mac -- Aqua (OS X native) graphics enabled
* %N-x11 -- X11 graphics enabled

Packages that have different cryptography options (several different naming schemes are used):

1. Crypto optional:
* %N -- no crypto
* %N-ssl -- crypto enabled
2. Different crypto sources:
* %N -- crypto supplied by Apple's libs
* %N-ssl -- crypto supplied by fink's libs
* %N-unified -- crypto supplied by Apple's libs; replaces a former %N/%N-ssl pair (only needed to solve upgrade issues; otherwise %N is fine)

{{Fink_Header}}

[[Category: Fink|Packaging]]
[[Category: Fink Packaging]]
[[Category: Fink_Documentation|Package Naming]]
[[Category: Fink_Policy|Package Naming]]</text>
    </revision>
  </page>
  <page>
    <title>Setting MAKEFLAGS in Fink</title>
    <ns>0</ns>
    <id>1931</id>
    <revision>
      <id>12003</id>
      <parentid>12000</parentid>
      <timestamp>2011-10-10T21:59:46Z</timestamp>
      <contributor>
        <username>Nieder</username>
        <id>386</id>
      </contributor>
      <comment>label old section about not just -jN</comment>
      <sha1>de70evrluulni36bbu66r28nkhmrknw</sha1>
      <text xml:space="preserve" bytes="5637">{{Fink_Header}}

== Building with multiple processors ==

Recent Apple computers come with multiple CPU cores which can greatly decrease the time it takes to build a package from source.  Activating this ability in Fink can make managing large builds (think those that can last several hours) manageable.

=== For end users ===

Starting with fink-0.31.2, the fink tool now builds using multiple processors by default.  Running &lt;code&gt;fink configure&lt;/code&gt; will ask for the number of processors that fink can use during a build.  No further actions are needed by end users.

==== Troubleshooting ====

If you run into a package that fails to build and suspect the failure is due to a multiprocessor build failure, run &lt;code&gt;fink configure&lt;/code&gt; and set the number of available processors to 1 and try the build again.  If it then succeeds, let the package maintainer know so that they can fix their package.  You can restore the setting again by running &lt;code&gt;fink configure&lt;/code&gt; once more.

=== For package maintainers ===

The number of processors (N) available to Fink will get set in the field &lt;code&gt;MaxBuildJobs&lt;/code&gt; in &lt;code&gt;/sw/etc/fink.conf&lt;/code&gt;.  The value N is then appended to the variable MAKEFLAGS (as -jN) during CompileScript and TestScript.  It is '''not''' appended during InstallScript.

The &lt;code&gt;fink.conf&lt;/code&gt; setting can be overriden using the boolean field &lt;code&gt;UseMaxBuildJobs&lt;/code&gt; in a .info file.  When absent, empty, or set to 'true', fink will use as many processors as &lt;code&gt;fink.conf&lt;/code&gt; declares.  When set to 'false', &lt;code&gt;-j1&lt;/code&gt; will be added.  For more information on the use of the &lt;code&gt;UseMaxBuildJobs&lt;/code&gt; field, check the [http://www.finkproject.org/doc/packaging/reference.php Packaging Reference].

==== Troubleshooting ====

Build failures can occur in some packages where the source is not able to deal with multithreaded compiling.  This is often, but not always, manifested by an error about some file not being found.  If your package fails this way, setting &lt;code&gt;MaxBuildJobs: false&lt;/code&gt; is the quickest way to diagnose the problem. It should no longer be necessary to set MAKEFLAGS to enable or disable building with multiple processors (other normal uses of MAKEFLAGS are, of course, acceptable).

== Passing Other Values to MAKEFLAGS ==

=== Dire Warnings ===

This section is not officially supported by Fink.  If you run into any problems, make sure you '''first''' disable it before reporting any errors to maintainers or the mailing lists.  Failure to do so will cause you to be shaved, covered in honey, and set upon by fire ants!  Well, OK, perhaps that's a bit harsh.  But really.  Messing with system wide settings can make funny things happen.  If it breaks in half, the only guarantee is that you get to keep both halves.

The examples below were originally created for parallel builds (see previous section), but can in theory can be amended for passing other values to MAKEFLAGS.  The same caveats, disclaimers, etc. apply.

=== Getting Started ===

That said, it is technically possible to make use of distcc (or just multiple CPUs) when building packages from source in Fink, as long as the package(s) you're building support the MAKEFLAGS variable (anything that uses make, and possibly other things as well).

To do so, edit &lt;code&gt;/sw/lib/perl5/Fink/PkgVersion.pm&lt;/code&gt; and look for the comment that says '''''&quot;# uncomment this to be able to use distcc -- not officially supported!&quot;'''''  Uncomment the &lt;code&gt;$defaults{'MAKEFLAGS'}&lt;/code&gt; line, and fink should no longer erase MAKEFLAGS from the build environment.  Note that every time the &lt;code&gt;fink&lt;/code&gt; package gets updated, you will have to do this again.  You'll deal with it, I know you can.  That's what you get for living on the bleeding edge.  ;)

Now, you'll have to make sure that MAKEFLAGS is actually *in* the environment.  To do so, install the &lt;code&gt;distcc-default&lt;/code&gt; package (you'll need the latest unstable version), and then edit the MAKEFLAGS= line in &lt;code&gt;/sw/etc/distcc.conf&lt;/code&gt; as appropriate.  Alternatively, if you don't care about distcc, you can make a &lt;code&gt;/sw/etc/profile.d/localenvironment.sh&lt;/code&gt; file or similar, and set &lt;code&gt;MAKEFLAGS&lt;/code&gt; in there.

=== When Issues Arise ===

The first thing to try is to just set &lt;code&gt;MAKEFLAGS&lt;/code&gt; to &quot;-j1&quot; in your /sw/etc/distcc.conf or equivalent, and see if it builds.  If it does, mail the maintainer for the package (&lt;code&gt;fink info ''packagename''&lt;/code&gt;) to add the following lines to his info file:

  NoSetMAKEFLAGS: true
  SetMAKEFLAGS: -j1

Many packages that I've personally had problems with build with that.  You don't get a parallel build this way, but you also don't get a dead one.  :)

If you still have errors, try also setting CCACHE_CPP2=1.  Some stuff bombs because it doesn't like the tricky way ccache runs things through the c preprocessor before getting passed on to the local gcc.  In these cases you generally see an error about adding -fconstant-cfstrings to the command-line, or something similar.  If that doesn't work, try setting DISTCC_HOSTS to an empty string.  

  CompileScript: &lt;&lt;
    ./configure %c
    CCACHE_CPP2=1 make
  &lt;&lt;

...or...

  CompileScript: &lt;&lt;
    ./configure %c
    DISTCC_HOSTS=&lt;nowiki&gt;''&lt;/nowiki&gt; MAKEFLAGS='-j1' make
  &lt;&lt;

That has fixed things in all cases where just MAKEFLAGS has not, other than the less obvious errors of builds completing, but missing files and such.

If you still have issues, you're on your own.  See the top of this section.  ;)

{{Fink_Header}}

[[Category:Fink]]
[[Category:Fink Documentation]]
[[Category:Fink Internals]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Packaging:breakage/2005-11-07/ppc</title>
    <ns>0</ns>
    <id>1711</id>
    <revision>
      <id>5813</id>
      <parentid>5195</parentid>
      <timestamp>2006-05-10T03:48:32Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <comment>category fix</comment>
      <sha1>lbrzbl3tdjokhyxeixla8v7b6677efg</sha1>
      <text xml:space="preserve" bytes="12764">{{Fink_Header}}

'''This page is obsolete. Use the [[Fink:Packaging:breakage|current breakage report]] insead.'''

This is the breakage report from [[User:msachs|msachs]]'s [http://fink.opendarwin.org/build/2005-11-07/ppc November 2005 powerpc] [http://cvs.sourceforge.net/viewcvs.py/fink/scripts/buildfink/ buildworld] manually updated as people (think they:) fix things. Note that for purposes of this build, all references to gcc3.3 are temporarily converted to gcc4. That's because gcc3.3 is end-of-life and lower versions are living on borrowed time, so anything that does not build on gcc4 cannot be supported much longer. In addition, Intel OS X will only have gcc4. The automatic error classifications are based on detecting [http://cvs.sourceforge.net/viewcvs.py/*checkout*/fink/scripts/buildfink/filters.xml?content-type=text%2Fplain&amp;rev=1.3 certain text patterns] in the build transcript.


==failures/fink/nolib/other==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/libnc-dap3.log libnc-dap3]

==failures/fink/oldreadline==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/cicb.log cicb]

==failures/frontend/array==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/mbsystem.log mbsystem]

==failures/frontend/parse==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/autogen.log autogen]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/gnokii2.log gnokii2]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/odcctools.log odcctools]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/par-pm581.log par-pm581]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/par-pm584.log par-pm584]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/silc-client.log silc-client]

==failures/frontend/storage==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/gauche.log gauche]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/gkrellm.log gkrellm]

==failures/linker/linkedit==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/vtk.log vtk]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/vtk-py23.log vtk-py23]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/vtk-py24.log vtk-py24]

==failures/oneproj/dhcp==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/dhcp.log dhcp]

==failures/oneproj/par2==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/par2.log par2]

==failures/oneproj/xmlunit==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/xmlunit.log xmlunit]

==failures/project/nofiles==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/bash.log bash]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/ladspa-cmt.log ladspa-cmt]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/mingw-gcc.log mingw-gcc]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/sed.log sed] (thesin may have a new %v)
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/singular.log singular]

==failures/project/norule==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/aqbanking.log aqbanking]

==failures/project/overwrite==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/otf-fontfiles.log otf-fontfiles] (ptex-base and texinfo conflict by installing (identical) bin/texi2pdf scripts and both are deps of otf-fontfiles. Should ptex-base:Depends:texinfo (texinfo is relatively small) or should they use update-alternatives?)

==failures/project/stricter/conversion==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/basiliskii.log basiliskii]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/plotutils.log plotutils]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/wxgtk.log wxgtk]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/xkobo.log xkobo]

==failures/project/stricter/scope==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/aptitude.log aptitude]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/gnucap.log gnucap]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/gtkmm.log gtkmm]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/nget.log nget]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/xerces-c23.log xerces-c23]

==failures/project/stricter/static==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/aegis.log aegis]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/afterstep.log afterstep]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/bitchx.log bitchx]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/cfv.log cfv]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/cook.log cook]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/erlang-otp.log erlang-otp]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/gprolog.log gprolog]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/ircd-hybrid.log ircd-hybrid]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/moria.log moria]
*[http://paste.lisp.org/display/15166#4 ncbitools]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/python22.log python22]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/python22-nox.log python22-nox]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/python23-nox.log python23-nox]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/soup.log soup]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/soup-ssl.log soup-ssl]
*[http://66-90-146-246.dyn.grandenetworks.net/~robertwyatt/fink/stegdetect.txt stegdetect]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/transfig.log transfig]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/uade.log uade]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/xmms.log xmms] (thesin has new %v, dmacks has patches for it but can't run it)
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/yafc.log yafc]

==failures/unanalyzed==
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/advancescan.log advancescan]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/amaya.log amaya]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/amule.log amule]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/axis.log axis]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/castle-combat.log castle-combat]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/cccc.log cccc]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/commons-collections.log commons-collections]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/config-std-pm581.log config-std-pm581]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/emacs21-gtk.log emacs21-gtk]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/ettercap.log ettercap]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/ettercap-gtk.log ettercap-gtk]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/ettercap-ssl.log ettercap-ssl]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/ettercap-ssl-gtk.log ettercap-ssl-gtk]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/fluxbox.log fluxbox]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/gtkpool.log gtkpool]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/hercules.log hercules]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/ices2.log ices2]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/inkscape.log inkscape]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/jpilot.log jpilot]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/jpilot-ssl.log jpilot-ssl]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/libggi2.log libggi2]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/libofx-shlibs.log libofx-shlibs]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/libpostproc1.log libpostproc1] (dmacks may have fixed)
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/libxml++.log libxml++]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/m2crypto-python22.log m2crypto-python22]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/m2crypto-python23.log m2crypto-python23]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/mailsync-ssl.log mailsync-ssl]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/mead.log mead]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/mrtg.log mrtg]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/namot.log namot]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/nant.log nant]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/nat.log nat]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/nemesis.log nemesis]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/net-snmp.log net-snmp]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/net-snmp-ssl.log net-snmp-ssl]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/netgen.log netgen]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/oidentd.log oidentd]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/openvrml.log openvrml]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/pari-gp-xemacs.log pari-gp-xemacs]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/peercast.log peercast]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/pyvorbis-py23.log pyvorbis-py23]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/pyvorbis-py24.log pyvorbis-py24]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/qemu.log qemu]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/qt3-postgresql.log qt3-postgresql]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/qt3mac.log qt3mac]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/qthello.log qthello]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/vnc4.log vnc4]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/wv2.log wv2]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/xalan-j-docs.log xalan-j-docs]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/xerces-c.log xerces-c]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/yacas.log yacas]
*[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/zoinks.log zoinks]

==gcc3.1 users==
*devel/fxscintilla.info
*games/gnuchess.info
*games/xmess.info (very old %v; new may build with gcc3.3/4; upgrade in tandem with games/xmame?)
*languages/intercal-threaded.info (uses varargs)
*languages/moscow-ml.info
*libs/vflib3.info
*net/mutella.info
**net/openmcu-1.1.7-2.info
*sci/euler.info
*text/dvibook-1-1.info (uses varargs)
*utils/malsync-2.1.1-1.info (does removing &lt;code&gt;-traditional-cpp&lt;/code&gt; from CFLAGS in Makefile help (maybe need &lt;code&gt;-no-cpp-precomp&lt;/code&gt; instead?))
*x11/fox1.info
*x11-wm/fvwm-ewmh-0.7-17.info
*x11-wm/icewm-basic.info
*x11-wm/icewm.info

==triaged==
*to murr (maintainer) (#fink, 12/15)
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/gnubg.log gnubg]
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/open-cobol.log open-cobol]
*to jfm/shawn (new %v?; upgrade from gcc3.1 C++ ABI?)
**crypto/gnomemeeting.info (needs to match ABI of pwlib &amp; openh323)
**libs/openh323.info (builds w/g++3.3 but needs to match ABI of pwlib)
**libs/pwlib.info (only builds w/g++3)
*to pogma (maintainer) (email, 12/13)
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/libdbi-drivers-mysql.log libdbi-drivers-mysql]
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/libdbi-drivers-pgsql.log libdbi-drivers-pgsql]
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/libdbi-drivers-sqlite.log libdbi-drivers-sqlite]
*&lt;tt&gt;-floop-transpose&lt;/tt&gt; was removed. Consider &lt;tt&gt;-fast -mcpu=750&lt;/tt&gt; instead
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/singular-factory.log singular-factory] (maintainer emailed 12/16)
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/ntl.log ntl] (maintainer emailed 12/16)
*to RR (maintainer) (#fink, 12/16)
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/postgresql-perl-581.log postgresql-perl-581]
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/postgresql-perl-584.log postgresql-perl-584] 
*to dmacks
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/libxml2.log libxml2] (not a functional bug; [http://bugzilla.gnome.org/show_bug.cgi?id=325203 bugzilla])
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/libxslt.log libxslt] (not a functional bug; [http://bugzilla.gnome.org/show_bug.cgi?id=324522 bugzilla])
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/xrmap.log xrmap] (probable hacky fix in netspace)
*other
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/dcmtk.log dcmtk] (new version with explicit gcc4 support in submissions queue)
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/ivtools.log ivtools] (clef's; emailed 12/19)
**[http://fink.opendarwin.org/build/2005-11-07/ppc/logs/qcad.log qcad] (drm working on it; need GCC:3.3, BDep:x11-dev, fixed homepage)

{{Fink_Header}}

[[Category: Fink|Packaging:breakage/2005-11-07/ppc]]
[[Category: Fink Packaging|breakage/2005-11-07/ppc]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Releases</title>
    <ns>0</ns>
    <id>1977</id>
    <revision>
      <id>12082</id>
      <parentid>12079</parentid>
      <timestamp>2012-09-26T02:10:42Z</timestamp>
      <contributor>
        <username>Alexkhansen</username>
        <id>167</id>
      </contributor>
      <comment>/* 0.34 */</comment>
      <sha1>8uzvwoe758t0tv075ysbvbfloosgkrx</sha1>
      <text xml:space="preserve" bytes="7045">(newest first)

== 0.34 ==

=== 0.34.4 (ceiling mount) ===

* Released on 2012-09-25

=== 0.34.3 (wall anchor) ===

* Released on 2012-08-29

=== 0.34.2 (magnetic) ===

* Released on 2012-08-04

=== 0.34.1 (hanger) ===

* Released on 2012-07-26

=== 0.34.0 (bracket) ===

* Released on 2012-07-16

== 0.33 ==

=== 0.33.3 (Higgsino) ===

* Released on 2012-07-05

=== 0.33.2 (sup squark) ===

* Released on 2012-06-20

=== 0.33.1 (Wino) ===

* Released on 2012-06-12

=== 0.33.0 (selectron) ===

* Released on 2012-06-11

== 0.32 ==

=== 0.32.6 (unicycle) ===

* Released on 2012-04-14

=== 0.32.5.5 (spinning) ===

* Released on 2012-04-09

=== 0.32.4.1 (pedicab) ===

* Released on 2012-03-27

=== 0.32.3 (velocipede) ===

* Released on 2012-02-16

=== 0.32.2 (ordinary) ===
 
* Released on 2012-02-03

=== 0.32.1 (penny-farthing) ===

* Released on 2012-01-26

=== 0.32.0 (recumbent) ===

* Released on 2012-01-25

== 0.31 ==

=== 0.31.6 (supine) ===

* Released on 2012-01-03

=== 0.31.5 (deceit) ===

* Released on 2011-11-21

=== 0.31.4 (perfidy) ===

* Released on 2011-10-28

=== 0.31.3 (mendacity) ===

* Released on 2011-10-12

=== 0.31.2 (perjury) ===

* Released on 2011-09-26

=== 0.31.1 (&quot;little white&quot;) ===

* Released on 2011-09-11

=== 0.31.0 (fib) ===

* Released on 2011-07-20

First release ''fink'' version for 10.7.

== 0.30 ==

=== 0.30.2 (Palin) ===

* Released on 2011-07-11

Last ''fink'' version for 10.4, and end of support for the OS.

=== 0.30.1 (Hannity) ===

* Released on 2011-06-28

=== 0.30.0 (Beck) ===

* Released on 2011-04-30

== 0.29 == 

=== 0.29.21 (Charter Oak) ===

* Released on 2011-03-24

=== 0.29.20 (FirsTier) ===

* Released on 2011-03-09

=== 0.29.19  (EarthStar) ===

* Released on 2011-01-15

=== 0.29.18  (Darby) [10.5/x86_64 only] ===

* Released on 2010-11-12

=== 0.29.17 (Tifton) ===

* Released on 2010-11-11  

=== 0.29.16 (K) ===

* Released on 2010-11-09  

=== 0.29.15 (Hillcrest) ===

* Released on 2010-10-24

=== 0.29.14 (Bramble) ===

* Released on 2010-10-19

=== 0.29.13 (Peninsula) ===

* Released on 2010-07-01

=== 0.29.12 (TierOne) ===

* Released on 2010-06-09

=== 0.29.11 (Greece and Portugal) ===

* Released on 2010-06-02

=== 0.29.10 (Vantus) ===

* Released on 2009-09-27

=== 0.29.9 (Dwelling House) ===

* Released on 2009-08-28

=== 0.29.8 (Integrity) ===

* Released on 2009-08-13

=== 0.29.7 (HBOS) ===

* Released on 2009-06-10

=== 0.29.6 (New Frontier) ===

* Released on 2009-05-20

=== 0.29.5 (Silverton) ===

* Released on 2009-05-13

=== 0.29.4 ===

* Released on 2009-05-12, again quickly replaced

=== 0.29.3 ===

* Released on 2009-05-12, but quickly replaced

=== 0.29.2 (IKB) ===

* Released on 2009-04-14

=== 0.29.1 (Kaupthing) ===

* Released on 2009-04-09

=== 0.29.0 (IndyMac) ===

* Released on 2009-04-05

== 0.28 == 

[[Fink:Roadmap:0.28_new_features|Major new features in 0.28]]

=== 0.28.7 (Piltdown Man) === 

* Released on 2009-02-19

=== 0.28.6 (The Philosopher's Stone) === 

* Released on 2008-10-05

=== 0.28.5 (Spontaneous Generation) === 

* Released on 2008-07-08

=== 0.28.4 (The Humors) === 

* Released on 2008-06-29 

=== 0.28.3 (Cold Fusion) ===

* Released on 2008-06-20

=== 0.28.2 (N-ray) ===

* Released on 2008-05-05

=== 0.28.1 (Phlogiston) ===

* Released on 2008-03-11

=== 0.28.0 (Aether) ===

* Released on 2008-01-20

== 0.27 ==

[[Fink:Roadmap:0.27_new_features|Major new features in 0.27]]

=== 0.27.16 (Defecaloesiophobia) ===

* Released on 2008-07-08 

=== 0.27.15 (Zemmiphobia) === 

* Released on 2008-06-29 

=== 0.27.14 (Liticaphobia) ===

* Released on 2008-06-27

=== 0.27.13 (Triskaidekaphobia) ===

* Released on 2008-06-22

=== 0.27.12 (Batrachophobia) ===

* Released on 2008-06-20

=== 0.27.11 (Athazagoraphobia) ===

* Released on 2008-02-17

=== 0.27.10 (Rhabdophobia) ===

* Released on 2008-01-02

=== 0.27.9 (Paralipophobia) ===

* Released on 2007-11-06

=== 0.27.8 (Ailurophobia) ===

* Released on 2007-11-02

=== 0.27.7 (Potophobia) ===

* Released on 2007-10-24

=== 0.27.6 (Hippopotomonstrosesquippedaliophobia) ===

* Released on 2007-07-18

=== 0.27.5 ===

* Never released.

=== 0.27.4 (Kakorrhaphiophobia) ===

* Released on 2007-07-10

=== 0.27.3 (Didaskaleinophobia) === 

* Released on 2007-06-15

=== 0.27.2 (Blennophobia) ===

* Released on 2007-06-10

=== 0.27.1 (Arachibutyrophobia) ===

* Released on 2007-03-19

=== 0.27.0 (Gynophobia) ===

* Released on 2007-03-17

== 0.26 ==

[[Fink:Roadmap:0.26_new_features|Major new features in 0.26]]

=== 0.26.4 (The Joy Luck Club) ===

* Released on 2007-03-14

=== 0.26.3 (Divine Secrets of the Ya-Ya Sisterhood) ===

* Released on 2007-03-08

=== 0.26.2 (Beaches) ===

* Released on 2007-03-07

=== 0.26.1 (Thelma and Louise) ===

* Released on 2007-01-22

=== 0.26.0 (Steel Magnolias) ===

* Released on 2006-12-09

== 0.25 ==

[[Fink:Roadmap:0.25_new_features|Major new features in 0.25]]

=== 0.25.3 (Reservoir Dogs) ===

* Released on 2007-01-22

=== 0.25.2 (Things to Do in Denver When You're Dead) ===

* Released on 2006-11-28

=== 0.25.1 (Road to Perdition) ===

* Released on 2006-10-15

=== 0.25.0 (The Usual Suspects) ===

* Released on 2006-09-17

== 0.24 ==

=== 0.24.26 (Telescopium) === 

* Released on 2006-08-12

=== 0.24.25 (Triangulum Australe) ===

* Released on 2006-07-27

=== 0.24.24 (Norma [The Carpenter's Square]) ===

* Released on 2006-07-20

=== 0.24.23 (Apus) ===

* Released on 2006-07-03

=== 0.24.22 (Lupus) ===

* Released on 2006-06-27

=== 0.24.21 (Boötes) ===

* Released on 2006-06-23

=== 0.24.20 ===

* Released on 2006-06-23

=== 0.24.19 ===

* Released on 2006-06-23

  13:47 &amp;lt;drm&amp;gt; akh: hold off on the star/constellation business.. .19 is about to be replaced by .20 :/
  13:47 &amp;lt;akh&amp;gt; drm:  OK--hadn't actually picked one yet. :-)

=== 0.24.18 (Circinus) ===

* Released on 2006-06-12

=== 0.24.17 (Musca) ===

* Released on 2006-05-31

=== 0.24.16 (Antlia) ===

* Released on 2006-05-30

=== 0.24.15 (Hydra) ===

* Released on 2006-03-27

=== 0.24.14 (Pyxis) ===

* Released on 2006-03-21

  21:08 &amp;lt;dmacks&amp;gt; akh: 0.24.13 was still-born...okay to reuse its contellation for .14 if you want:)

=== 0.24.13 (Pyxis) ===

* Never released to the public

=== 0.24.12 (Vulpecula) ===

* Released on 2006-02-21

=== 0.24.11 (Lacerta) ===

* Released on 2005-11-17

=== 0.24.10 (Cameloparadalis) ===

* Released on 2005-08-25

=== 0.24.9 (Pavo) ===

* Released on 2005-08-15

=== 0.24.8 (Coma Berenices) ===

* Released on 2005-07-28

=== 0.24.7 (Carina) ===

* Released on 2005-06-04

This release was made specifically for EOL'ing 10.2 support.

=== 0.24.6 (Canes Venatici) ===

* Released on 2005-05-11

=== 0.24.5 (Crux Austrialis) ===

* Released on 2005-04-29

=== 0.24.4 (Ophiuchus) ===

* Released on 2005-04-20

=== 0.24.3 (Cassiopeia) ===

* Released on 2005-04-12

=== 0.24.2 (Draco) ===

* Released on 2005-03-25

=== 0.24.1 (Ursa Major) === 

* Released on 2005-02-28

=== 0.24.0 (Boilermaker) ===

* Released on 2005-02-24

== 0.23 ==

[[Category:Fink]]

__NOTOC__</text>
    </revision>
  </page>
  <page>
    <title>Fink:FinkProject</title>
    <ns>0</ns>
    <id>2114</id>
    <revision>
      <id>11848</id>
      <parentid>11847</parentid>
      <timestamp>2010-05-06T20:12:36Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <comment>Update</comment>
      <sha1>irwd3guf6u496hcnygh2yu0hozp00kz</sha1>
      <text xml:space="preserve" bytes="1213">The Fink project is now running its own server at finkproject.org, thanks to the generosity of [http://www.xs4all.nl www.xs4all.nl].

Note: a number of services provided by the server require authentication.  THERE IS SOMETHING NONSTANDARD ABOUT OUR CERTIFICATE; HERE IS HOW TO GET YOUR SYSTEM TO RECOGNIZE IT.

Currently, we host the following components of fink on this server:
* This wiki
* The main fink website
* The [[Fink:PackageDatabase|package database]] 
* The [[Fink:Distfiles|Distfiles project]] (originally a joint effort with MacPorts (formerly DarwinPorts))
* The [[Fink:ArchiveBrowser|archive browser]]
* The master server for [[Fink:SelfUpdate|selfupdate via rsync]]
* [[Fink:InternetDomains|DNS Hosting]]

Details on [[Server Administration|server administration are here]].

We do not yet have specific plans to migrate the remaining external components to this server:
* The package-submissions and other trackers (presently hosted on SourceForge).
* The mailing lists (presently hosted on SourceForge).
* The CVS repository (presently hosted on SourceForge).
* The file release system (presently hosted on SourceForge).

[[Category: Fink|FinkProject]]
[[Category: Fink Structure|FinkProject]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Downloads</title>
    <ns>0</ns>
    <id>2115</id>
    <revision>
      <id>11840</id>
      <parentid>11334</parentid>
      <timestamp>2010-05-06T20:08:12Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <minor/>
      <comment>Removing  {{Fink_Header}}</comment>
      <sha1>n80vj21z45l3o6jtv5s5snsm5grystq</sha1>
      <text xml:space="preserve" bytes="1724">The download statistics at Sourceforge.net may not be fully reliable, but they are the best measure we have of how many people might be using fink.
Files other than the installer files are mirrored other places, so the Sourceforge statistics are misleading.  But we will attempt to keep track of Sourceforge downloads of installer files.

For any currently downloadable file, the current download count is available on the Files page at sourceforge.net/projects/fink.  But for formerly available files, we need to record the final download count here.

=== 10.4 ===

Fink-0.8.1-Intel-Installer.dmg is still available.  (MD5 = 38c5837f8beb1ea96a04f9ca1ceba800; see [[Security]])

Fink-0.8.1-PowerPC-Installer.dmg is still available.

Fink-0.8.0-Installer.dmg was downloaded 272907 times.

=== 10.3 ===

Fink-0.7.2-Installer.dmg is still available.

Fink-0.7.1-Installer.dmg was downloaded 216556 times.

Fink-0.7.0-Installer.dmg was downloaded 131165 times.

=== 10.2 ===

Fink-0.6.4-Installer.dmg is still available.

Fink-0.6.3-Installer.dmg was downloaded 37077 times.

Fink-0.6.2-Installer.dmg was downloaded 102211 + 37132 times (the file was listed twice on the sourceforge page).

Fink-0.6.1-Installer.dmg was downloaded 25403 times.

Fink-0.5.3-Installer.dmg was downloaded 57596 times.

Fink-0.5.2-Installer.dmg was downloaded 33665 times.

Fink-0.5.1-Installer.dmg was downloaded 70330 times.

Fink-0.5.0a-Installer.dmg was downloaded 41410 times.

=== 10.1 ===

Fink-0.4.0-Installer.dmg is still available.

fink-0.3.2a-installer.dmg.gz was downloaded 90804 times.

fink-0.3.1-installer.dmg.gz was downloaded 24337 times.

fink-0.3.0-installer.dmg.gz was downloaded 23158 times.

{{Fink_Header}}

[[Category:Fink]]</text>
    </revision>
  </page>
  <page>
    <title>Server Administration</title>
    <ns>0</ns>
    <id>2116</id>
    <revision>
      <id>11504</id>
      <parentid>10335</parentid>
      <timestamp>2008-09-26T19:07:01Z</timestamp>
      <contributor>
        <username>Dmrrsn</username>
        <id>334</id>
      </contributor>
      <comment>howto restart the mail server</comment>
      <sha1>0wu2m3hx0mhxdob4n8m6phldfz77902</sha1>
      <text xml:space="preserve" bytes="1972">{{Fink_Header}}

== Backups ==

Backups are being done with Bacula.  It deserves [[Admin:Backups|its own page]].

== DNS ==

We are running the default bind9 installation from debian.  Domains are each in a separate file in &lt;code&gt;/etc/bind/&lt;/code&gt; named after the top-level domain (finkmirrors.net, finkdeveloper.net, etc.) and are editable by anyone in the &lt;code&gt;bind&lt;/code&gt; group (or root).

To add a finkmirrors.net record, do the following:

# edit /etc/bind/finkmirrors.net
# change the Serial to today's date
# add a distfiles.AIRPORT.STATE.CONTINENT record in the &quot;distfiles (source tarballs) mirrors&quot; section
# add a AIRPORT.STATE.CONTINENT record in the &quot;bindist (.deb package) mirrors&quot; section
# save the file
# restart bind: &lt;code&gt;/etc/init.d/bind9 restart&lt;/code&gt;

== Mail ==

We run a mail server.  It really really needs to be documented.  (In particular, we are running squirrelmail, websieve, and god knows what else.)

In particular, the following URL's are useful:

&lt;https://www.finkdeveloper.net/squirrelmail/src/login.php&gt;

&lt;https://www.finkdeveloper.net/cgi-bin/websieve.pl&gt;

Authorized persons can restart the mail server with &lt;code&gt; sudo /etc/init.d/cyrus2.2 restart&lt;/code&gt;

== Creating New Users ==

# add the user to LDAP
#* details go here
# create their SVN experimental directory
#* &lt;code&gt;svnadmin create --fs-type fsfs /var/lib/svn/users/'''username'''&lt;/code&gt;
#* &lt;code&gt;chown -R www-data:www-data /var/lib/svn/users/'''username'''&lt;/code&gt;
# create their .users.finkproject.org web site
#* add to /etc/bind/finkproject.org
#** &lt;code&gt;2006XXXXXX ; serial&lt;/code&gt;
#** &lt;code&gt;'''username'''.users IN CNAME finch&lt;/code&gt;
#** &lt;code&gt;/etc/init.d/bind restart&lt;/code&gt;
#* add to apache2 config
#** &lt;code&gt;sed -e 's,@USER@,'''username''',g &amp;lt; /etc/apache2/users/user.template &amp;gt; /etc/apache2/users/'''username'''.user&lt;/code&gt;
#** &lt;code&gt;/etc/init.d/apache2 restart&lt;/code&gt;

{{Fink_Header}}

[[Category: Fink|FinkProject]]
[[Category: Fink Structure|FinkProject]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Policy:Conduct</title>
    <ns>0</ns>
    <id>2120</id>
    <revision>
      <id>10252</id>
      <parentid>10251</parentid>
      <timestamp>2006-09-03T17:51:09Z</timestamp>
      <contributor>
        <username>Dmalloc</username>
        <id>424</id>
      </contributor>
      <comment>/* General */</comment>
      <sha1>ozz5h2elffx2v5wpb76ji23w93cj9i7</sha1>
      <text xml:space="preserve" bytes="2135">{{Fink_Header}}

= Work in Progress =

== Fink Policy to govern conduct ==

=== General ===

# Fink community members will conform to all relevant national and international laws. 
# Fink community members will behave ethically and will not do anything which might damage the reputation of Fink or the Fink Developer Network.
## There will be no discussion of material that is currently under a non-disclosure agreement in a public forum.  The [[mailto:fink-seed@lists.sourceforge.net | fink-seed ]] mailing list exists to allow such discussion to occur.
## As a Fink seed holder you shall not disclose or authorize to be disclosed, or use for personal gain or to benefit a third party, confidential information except with the permission of your relevant authority, or at the direction of a court of law.
# The cooperation of any Fink community member is voluntary and must be based on adequate, and not misleading, information about the general purpose and nature of Fink when their agreement to participate is being obtained and all such statements must be honoured.
# The rights of Fink community members as private individuals will be respected by anyone involved with Fink especially those involved with the Fink Developer Board.
# Fink community members will ensure that projects and activities are designed, carried out, reported and documented accurately, transparently, objectively and to appropriate quality.

=== Personal ===

# You shall conduct your activities within the Fink community without discrimination against other members or project admins.
   Grounds of discrimination include race, colour, ethnic origin, sexual orientation
   All colleagues have a right to be treated with dignity and respect.
   You should adhere to relevant law within the jurisdiction where you are working and, if appropriate, 
   the European Convention on Human Rights.
   You are encouraged to promote equal access to the benefits of Fink by all groups in society, and to avoid and
   reduce 'social exclusion' from Fink wherever opportunities arise.


[[Category: Fink|Policy:Conduct]]
[[Category: Fink_Documentation|Policy:Conduct]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Packaging:pkg-config</title>
    <ns>0</ns>
    <id>2122</id>
    <revision>
      <id>11255</id>
      <parentid>11186</parentid>
      <timestamp>2007-06-11T09:10:38Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of RjoJ0v, changed back to last version by Nieder</comment>
      <sha1>lsgfy6pghvo4txe2ocizltsn8ic5tbe</sha1>
      <text xml:space="preserve" bytes="3241">{{Fink_Header}}

This page explains our current best-guess about how to do dependencies on the pkgconfig package.

==About pkg-config and .pc files==
&lt;code&gt;%p/bin/pkg-config&lt;/code&gt; is a tool that packages use to determine flags for compiling against other—usually library—packages. The headers component packages of library packages supply a .pc data file that pkg-config reads.

Some .pc files contain syntaxes that are only compatible with certain newer versions of pkg-config and either cause &lt;code&gt;./configure&lt;/code&gt; errors or silently pass incorrect flags when used with older versions. Therefore we need a way to make sure that the proper version of the pkgconfig package is used. These requirements can change version-to-version in the library package and have nothing to do with the packages that use pkg-config. it's not reasonable to keep altering the &lt;code&gt;BuildDepends:pkgconfig&lt;/code&gt; versioning in every package that uses the library.

However, there may be other programs that can read .pc files and that may supply an alternate (and compatible) &lt;code&gt;pkg-config&lt;/code&gt; program. Therefore we don't want to over-do dependencies on pkgconfig, since that will lead to a mess if any of those other programs get packaged for fink. They would presumably &lt;code&gt;Conflicts/Replaces:pkconfig&lt;/code&gt;, so any &lt;code&gt;Depends:pkgconfig&lt;/code&gt; will block a smooth upgrade.

A .pc file is pretty useless without a program to process it and pkg-config is the standard tool other packages use. Therefore it makes sense to have packages with .pc have some sort of dependency on pkgconfig. This situation is similar to -dev packages that need other -dev packages, but where BDO prohibits a Depends. Ideally, packages with .pc that have specific pkgconfig versioning requirements would declare an [[Fink:Major New Feature Plans:InheritedBuildDepends|InheritedBuildDepends]] on it, since pkgconfig is used at build-time. However, we don't have that field. Should pkgconfig itself become BDO when we implement IBD?

==Suggested Best-Practices==
Our best solution for the present is to have any library (or other) package that has a .pc with specific version requirements for pkg-config to declare a versioned &lt;code&gt;Depends&lt;/code&gt; on the &quot;pkgconfig&quot; package, and packages with .pc files that can be used with any pkg-config version to have no dependency on pkgconfig.

*.pc file in %p/share/pkgconfig instead of %p/lib/pkgconfig
:The share/ location was added to the default search path starting in fink's packaging of pkgconfig-0.20. Older versions of the package only looked in the lib/ location. A package that installs a .pc file in the share/ location should declare a &lt;code&gt;Depends&lt;/code&gt; to require a pkgconfig version that looks there.
*&lt;code&gt;*.private&lt;/code&gt; field in .pc file
:The &lt;code&gt;*.private&lt;/code&gt; fields were implemented starting in pkgconfig-0.20. Older versions of the pkg-config program silently ignore these fields could therefore supply a deficient set of flags. A package containing a .pc file that has any &lt;code&gt;.private&lt;/code&gt; fields needs to declare a &lt;code&gt;Depends&lt;/code&gt; to mandate a pkgconfig version that supports them.

{{Fink_Header}}

[[Category: Fink|Packaging:pkg-config]]
[[Category: Fink Packaging|pkg-config]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:0.26 new features</title>
    <ns>0</ns>
    <id>2132</id>
    <revision>
      <id>12030</id>
      <parentid>10565</parentid>
      <timestamp>2011-10-29T12:59:37Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <minor/>
      <comment>cleanup</comment>
      <sha1>thelnq9sbcaywwousyj6m21434qgo9m</sha1>
      <text xml:space="preserve" bytes="1084">{{Fink_Header}}

* [[Fink:Packaging:Obsolete Packages|Obsoletes]] support
* Enable more than one Notify plugin at once
* Type: -64bit, %lib, and %type_num[] (for building 64bit libs in parallel with 32bit libs)
* new Distribution: field, which behaves like the Architecture: field
* Change allowed filenames for .info file, to: invariant packagename, optionally followed by archname, optionally follwed by distribution, and finally optionally followed by either version or version-revision, each delimited by hyphens.
* &lt;code&gt;fink configure&lt;/code&gt; now allows to enable/disable the unstable tree
* &lt;code&gt;--dpkg-status&lt;/code&gt; and &lt;code&gt;--all&lt;/code&gt; modes for &lt;code&gt;fink cleanup&lt;/code&gt;
* &lt;code&gt;--tests&lt;/code&gt; mode to utilize &lt;code&gt;InfoTest&lt;/code&gt; blocks
** '''on''' Errors are fatal
** '''warn''' Errors turn to warnings
* &lt;code&gt;--validate&lt;/code&gt; mode that causes packages to be validated
** '''on''' Errors are fatal
** '''warn''' Errors turn to warning
* Info4 (added in 0.26.2)
{{Fink_Header}}

[[Category: Fink|Roadmap 0.26 New Features]]
[[Category: Fink_Roadmap|0.26 New Features]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:New documentation needs</title>
    <ns>0</ns>
    <id>1043</id>
    <revision>
      <id>11843</id>
      <parentid>11054</parentid>
      <timestamp>2010-05-06T20:08:58Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <minor/>
      <comment>Removing  {{Fink_Header}}</comment>
      <sha1>r5a4rvas8z0tt7tai2esv24qpdkb17p</sha1>
      <text xml:space="preserve" bytes="1136">See also new major features in releases [[Fink:Roadmap:0.25 new features|0.25]], [[Fink:Roadmap:0.26 new features|0.26]], [[Fink:Roadmap:0.27 new features|0.27]], and [[Fink:Roadmap:0.28 new features|0.28]]

* Info3/Info4

* 'fink cleanup' (in fink.8 but need to add to web docs)

* AutoShlibs

* fast scanpackages with apt-ftparchive, including AutoScanpackages

* SkipPrompts

* --maintainer (in fink.8 but need to add to web docs)

* remove old 'fink list --tree=foo' documentation, add 'fink --trees=foo,bar command'.

* new DocFiles/Files abilities
** Conditionals
** subdirs/recursion
** Mention the &lt;i&gt;allowed&lt;/i&gt; wildcards that are used and useful (&lt;b&gt;* ?&lt;/b&gt; (any others--curly-braces or square brackets?)) so we don't accidentally break useful existing functionality...conditionals interferes with some uses of curly-braces
** Mention backtick scripts?

* --log-output and --logfile (in fink.8 but need to add to web docs)

* 'fink plugins' lists checksum algorithms

[[Category: Fink|Roadmap New documentation needs]]
[[Category: Fink_Roadmap|New documentation needs]]
[[Category: Fink_Documentation|New documentation needs]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:Near Term Goals</title>
    <ns>0</ns>
    <id>1042</id>
    <revision>
      <id>11844</id>
      <parentid>10378</parentid>
      <timestamp>2010-05-06T20:09:11Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <minor/>
      <comment>Removing  {{Fink_Header}}</comment>
      <sha1>5fad5m9cob03lzyupqsa66pgdcryjrk</sha1>
      <text xml:space="preserve" bytes="723">This page tracks features or bug fixes that should be implemented in the next fink release (or soon afterwards). This mostly includes high priority or easy-to-implement tasks. For other features please refer to the [[Fink:Roadmap:Medium_Term_Goals|Medium Term Goals]] page.

See also the [https://sourceforge.net/tracker/?atid=317203&amp;group_id=17203 patch tracker] and [https://sourceforge.net/tracker/?atid=117203&amp;group_id=17203 bug tracker]

=== Todo ===

* Update docs: [[Fink:Roadmap:New_documentation_needs|New documentation needs]]
* cirdan, drm: dist up
* test FinkCommander patch for incremental indexing
* x11 user vs. sdk issue

[[Category: Fink|Roadmap Near Term Goals]]
[[Category: Fink_Roadmap|Near Term Goals]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:New Features</title>
    <ns>0</ns>
    <id>2133</id>
    <revision>
      <id>12075</id>
      <parentid>12065</parentid>
      <timestamp>2012-07-16T21:52:47Z</timestamp>
      <contributor>
        <username>Nieder</username>
        <id>386</id>
      </contributor>
      <comment>0.34</comment>
      <sha1>kc2i4qe8p75oxoiol3inwawkoak2tsm</sha1>
      <text xml:space="preserve" bytes="822">New features in released fink versions. Not all of them might be documented. 
'''[[Fink:Roadmap:New_documentation_needs|Please help documenting]].'''

* [[Fink:Roadmap:0.34 new features|0.34 new features]]
* [[Fink:Roadmap:0.33 new features|0.33 new features]]
* [[Fink:Roadmap:0.32 new features|0.32 new features]]
* [[Fink:Roadmap:0.31 new features|0.31 new features]]
* [[Fink:Roadmap:0.30 new features|0.30 new features]]
* [[Fink:Roadmap:0.29 new features|0.29 new features]]
* [[Fink:Roadmap:0.28 new features|0.28 new features]]
* [[Fink:Roadmap:0.27 new features|0.27 new features]]
* [[Fink:Roadmap:0.26 new features|0.26 new features]]
* [[Fink:Roadmap:0.25 new features|0.25 new features]]
* [[Fink:Roadmap:0.24 backports|0.24 backports]]

[[Category: Fink|New Features]]
[[Category: Fink_Roadmap|New Features]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Policy:Trees</title>
    <ns>0</ns>
    <id>2139</id>
    <revision>
      <id>11950</id>
      <parentid>11948</parentid>
      <timestamp>2010-07-01T17:31:04Z</timestamp>
      <contributor>
        <username>Dmrrsn</username>
        <id>334</id>
      </contributor>
      <comment>revise description of ssl linking</comment>
      <sha1>p92skxlx35nodqnomteo3e4omwrjcqe</sha1>
      <text xml:space="preserve" bytes="2386">{{Fink_Header}}

== Linking Against OpenSSL ==

If the package currently has to be marked &quot;License: Restrictive&quot; because it [[Fink:Policy:Crypto|links against OpenSSL]], there is a workaround.  The GPL specifies that it is OK to link against non-GPL software if it is a system-provided library.  Since Apple includes OpenSSL as part of the base Mac OS X install, it can be linked against without license issues.

To do so, use the [[Fink:Policy:system-openssl|system-openssl-dev]] package.

== Tree Modularity ==

Any package in the stable tree must have all its (Build)Depends be satisfiable by packages in the stable tree. The idea is that a user could use only the stable tree and still still have a self-contained fink installation with no missing dependent packages.

Prior to July 1, 2010, any package that had a (Build)Depends that can only be satisfied by package(s) in section:crypto was required to itself be in section:crypto.  This requirement was dropped when crypto was moved into the main tree. 

You can pipe the output of 'fink list' into 'fink rebuild' to see if there are any packages with broken dependencies. The subsets are:
# stable/main
# unstable/main stable/main
(There used to be two more subsets, involving the crypto tree.)

Because some users might only have unstable/main, every package in the stable tree should also appear in the unstable tree, in either the same or a more recent version.

You can use fink's --trees flag instead of having to alter the &lt;code&gt;Trees&lt;/code&gt; line in your &lt;code&gt;fink.conf&lt;/code&gt; file for each subset of the distro, for example:

&lt;pre&gt;fink --trees=stable/main list -t | grep -v '\[' | cut -f2 &gt; pkgs&lt;/pre&gt;
edit &lt;code&gt;pkgs&lt;/code&gt; to remove any known blockers:
* &lt;code&gt;libgems-rb*&lt;/code&gt; and &lt;code&gt;rubygems-rb*&lt;code&gt; (-rb16 and -rb18 cannot be built concurrently)
&lt;pre&gt;cat pkgs | xargs fink --trees=stable/main,virtual rebuild&lt;/pre&gt;

An alternative way to test for modularity and find all unsatisfied dependencies is:

&lt;pre&gt;fink --trees=stable,virtual list --format=dotty &gt; foo.dot
perl -n -e 'if (/&quot;(.*?)&quot; -&gt; &quot;(.*?)&quot;/) { push @{$need{$2}}, $1} elsif (/&quot;(.*?)&quot; \[/) {$have{$1}++}} END {foreach (sort keys %need) {print &quot;missing $_ for &quot;.join(&quot; &quot;,@{$need{$_}}).&quot;\n&quot; unless $have{$_}}' foo.dot&lt;/pre&gt;


{{Fink_Header}}

[[Category: Fink|Policy:Trees]]
[[Category: Fink_Documentation|Policy:Trees]]
[[Category: Fink_Policy|Trees]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:PackageDatabase:NewSchema</title>
    <ns>0</ns>
    <id>2146</id>
    <revision>
      <id>10538</id>
      <parentid>10519</parentid>
      <timestamp>2007-02-20T19:49:52Z</timestamp>
      <contributor>
        <username>Chris01</username>
        <id>171</id>
      </contributor>
      <comment>collate ascii_general_ci</comment>
      <sha1>4ha5pnn1dmy5oy075eresf5l38zia91</sha1>
      <text xml:space="preserve" bytes="4900">{{Fink_Header}}

Possible new layout for a distribution/release db. It should replace the existing release table and also the  [http://fink.cvs.sourceforge.net/fink/web/pdb/releases.inc?view=markup&amp;pathrev=redesign_pdb releases.inc] file. The code below will go into the [http://fink.cvs.sourceforge.net/fink/scripts/pdb/schema.sql?view=markup&amp;pathrev=redesign_pdb schema.sql] and [http://fink.cvs.sourceforge.net/fink/scripts/pdb/releases.sql?view=markup&amp;pathrev=redesign_pdb releases.sql]

&lt;pre&gt;
create table if not exists distribution (
  dist_id int unsigned not null auto_increment,
  identifier varchar(16) not null,
  description varchar(64) not null default '',
  architecture enum('powerpc', 'i386') not null default 'powerpc',
  priority tinyint unsigned not null default '1',
  active boolean default 1,
  primary key (dist_id)
) collate ascii_general_ci;

create table if not exists distribution_releases (
  rel_id int unsigned not null auto_increment,
  dist_id int unsigned not null references distribution(dist_id),
  type enum('bindist', 'stable', 'unstable') not null,
  version varchar(16) not null,
  priority tinyint unsigned not null default '1',
  active boolean default 1,
  primary key (rel_id)
) collate ascii_general_ci;


insert into distribution (dist_id, identifier, description, architecture, priority, active) values (null, '10.1', '10.1', 'powerpc', 1, 1);
select @last_dist_id := last_insert_id();
insert into distribution_releases (rel_id, dist_id, type, version, priority, active) values (null, @last_dist_id, 'bindist',  '0.4.1', 1, 1);

insert into distribution (dist_id, identifier, description, architecture, priority, active) values (null, '10.2-gcc3.3', '10.2\n(gcc3.3 only)', 'powerpc', 2, 1);
select @last_dist_id := last_insert_id();
insert into distribution_releases (rel_id, dist_id, type, version, priority, active) values (null, @last_dist_id, 'unstable', 'current', 3, 1);
insert into distribution_releases (rel_id, dist_id, type, version, priority, active) values (null, @last_dist_id, 'stable',   'current', 2, 1);
insert into distribution_releases (rel_id, dist_id, type, version, priority, active) values (null, @last_dist_id, 'bindist',  '0.6.4', 1, 1);

insert into distribution (dist_id, identifier, description, architecture, priority, active) values (null, '10.3', '10.3', 'powerpc', 3, 1);
select @last_dist_id := last_insert_id();
insert into distribution_releases (rel_id, dist_id, type, version, priority, active) values (null, @last_dist_id, 'unstable', 'current', 3, 1);
insert into distribution_releases (rel_id, dist_id, type, version, priority, active) values (null, @last_dist_id, 'stable',   'current', 2, 1);
insert into distribution_releases (rel_id, dist_id, type, version, priority, active) values (null, @last_dist_id, 'bindist',  '0.7.2', 1, 1);

insert into distribution (dist_id, identifier, description, architecture, priority, active) values (null, '10.4', '10.4/powerpc', 'powerpc', 4, 1);
select @last_dist_id := last_insert_id();
insert into distribution_releases (rel_id, dist_id, type, version, priority, active) values (null, @last_dist_id, 'unstable', 'current', 3, 1);
insert into distribution_releases (rel_id, dist_id, type, version, priority, active) values (null, @last_dist_id, 'stable',   'current', 2, 1);
insert into distribution_releases (rel_id, dist_id, type, version, priority, active) values (null, @last_dist_id, 'bindist',  '0.8.1', 1, 1);

insert into distribution (dist_id, identifier, description, architecture, priority, active) values (null, '10.4', '10.4/intel', 'i386', 5, 1);
select @last_dist_id := last_insert_id();
insert into distribution_releases (rel_id, dist_id, type, version, priority, active) values (null, @last_dist_id, 'unstable', 'current', 3, 1);
insert into distribution_releases (rel_id, dist_id, type, version, priority, active) values (null, @last_dist_id, 'stable',   'current', 2, 1);
insert into distribution_releases (rel_id, dist_id, type, version, priority, active) values (null, @last_dist_id, 'bindist',  '0.8.1', 1, 1);
&lt;/pre&gt;

And the corresponding package schema:
&lt;pre&gt;
create table if not exists package (
 pkg_id int unsigned not null auto_increment,
 rel_id int unsigned not null references distribution_releases(rel_id),
 name varchar(64) not null,
 parentname varchar(64),
 version varchar(64) not null,
 revision varchar (16) not null,
 epoch tinyint not null default '0',
 descshort varchar(80) not null default '',
 desclong text,
 descusage text,
 maintainer varchar(255),
 license varchar(64),
 homepage varchar(255),
 section varchar(32) not null,
 infofile varchar(255) not null default '',
 infofilechanged datetime,
 primary key (pkg_id),
 index (name),
 index (section),
 index (rel_id)
) collate ascii_general_ci;
&lt;/pre&gt;


{{Fink_Header}}

[[Category: Fink|Package Database New Schema]]
[[Category: Fink Structure|Package Database New Schema]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Major New Feature Plans:Bindist VERSION file</title>
    <ns>0</ns>
    <id>2520</id>
    <revision>
      <id>11021</id>
      <parentid>11015</parentid>
      <timestamp>2007-03-19T19:04:19Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <comment>/* Proposal */ more stuff</comment>
      <sha1>kus564a8gc9o63fhu9umo0k6imng7j4</sha1>
      <text xml:space="preserve" bytes="4642">{{Fink_Header}}

For a long time now, the package distributions have had a file &lt;code&gt;%p/fink/$dist/VERSION&lt;/code&gt; that contains versioning information about the distro. The file contains information about the origin of the local package collection. This page describes the existing format and some proposed changes needed for future distros and other fink core work.

==Existing format and handling==
The file contains a single line declaring the bindist point version and some information about selfupdate method. In a bindist, the file contains a single line declaring the version of the bindist, for example:
 0.8.1
where the second atom has lately corresponded to the darwin kernel major version (OS X 10.4 is darwin 8.x). In the CVS package distros (&lt;code&gt;fink selfupdate-cvs&lt;/code&gt;), the file has the base bindist (the latest one for the dists/$dist directory), with &quot;.cvs&quot; appended, for example:
 0.8.1.cvs
Because the &lt;code&gt;selfupdate-rsync&lt;/code&gt; server is a mirror of the CVS server, the VERSION file downloaded by rsync also contains &quot;.cvs&quot;. However, at the end of that selfupdate method, fink patches the VERSION file to indicate &quot;.rsync&quot;, for example:
 0.8.1.rsync
During &lt;code&gt;fink --version&lt;/code&gt;, the file is read, &lt;code&gt;chomp&lt;/code&gt;ed (remove last newline, but all other and internal newlines retained), and the arch is appended:
 Distribution version: $VERSION_contents $arch

==New goals==
#Write info directly instead of patching.
#*Don't want to have to know the available method names other than the one used presently (SelfUpdate is being rewritten to use method plugin modules, and generally good idea to avoid cross-talk between different methods).
#*More well-defined syntax that is machine-readable, easier to parse version vs selfupdate method. Example: $bindist-$method
#Relationship with &lt;code&gt;Distribution&lt;code&gt; from fink.conf:
#*In 10.4 ''and beyond'', unified %p/fink/10.4 directory is used, so the VERSION file in a single location represents more than one bindist.
#*Make $distro itself (not just bindist value for it) more visible.
#Once selfupdate has been done, don't care what bindist was the starting point.
#*List $method ''instead of'' base $bindist (and also list $distro explicitly).
#Include timestamp for the selfupdate.
#*Currently we check FS modification time on some file that is updated from the selfupdate server. More reliable to record directly the timestamp of the last selfupdate.

==Proposal==
*Bindist point-release VERSION file will remain as a single line containing bindist version.
*Selfupdate-server VERSION file will contain multiple lines indicating base point-release for each $dist that is supported, formatted such that older fink can still display something intelligent:
 multiple
 dist-10.4: 0.8.1.updated
 dist-10.5: 0.9.0.updated
 
including a trailing blank line so &lt;code&gt;fink -V&lt;/code&gt; displays $arch on separate line.
*&lt;code&gt;fink selfupdate&lt;/code&gt; will over-write VERSION with a single line containing just the &quot;dist-$dist&quot; line for the fink.conf &lt;code&gt;Distribution: $dist&lt;/code&gt; value and use the selfupdate method name and human- and machine-readable timestamp instead of the bindist version:
 dist-10.4: cvs@2007.03.17-00.28.22
*Concern: Since the &quot;10.4&quot; directory is now shared among several $dist, could a user have %p/fink/10.4 be shared (remotely mounted) among several different $dist, so inappropriate to encode info about a specific one in a shared file? Does selfupdate do anything specific to a $dist within the directory (or anything dist-specfic at all), or is knowing the current fink.conf value enough?
**Better to have just &quot;$method@$time&quot;? But we might want to know $dist in effect during selfupdate.
**Could replace just the &quot;dist-$dist&quot; line in VERSION instead of replacing the whole file, and then have &lt;code&gt;fink -V&lt;/code&gt; only display the line with the presently-active $dist. But that ignores that selfupdating from one $dist of a unified directory updates others as well. Or does it, if there are $dist-specific things happening?
*Could have selfupdate add a line &quot;Selfupdate: $method@$time&quot; to the VERSION file instead of editing anything in it (except removing &quot;.cvs&quot;). That way we separate the bindist versioning (unresolved how to do for multidist anyway) from the selfupdate (which we are working on and can solve independently).
*Have &lt;code&gt;fink -V&lt;/code&gt; put $arch separately from the bindist versioning line(s), since it's not really related, and add explicit fink.conf:Distribution to that line.

{{Fink_Header}}

[[Category: Fink|New Feature Plans Bindist VERSION file]]
[[Category: Fink_Roadmap|New Feature Bindist VERSION file]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:0.28 new features</title>
    <ns>0</ns>
    <id>2522</id>
    <revision>
      <id>11475</id>
      <parentid>11345</parentid>
      <timestamp>2008-06-02T19:11:04Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <comment>/* New features in fink 0.28 */ private-shlibs</comment>
      <sha1>hqpzbx4diqxrnbfjbm6vqzq2awz4zyv</sha1>
      <text xml:space="preserve" bytes="675">{{Fink_Header}}

===New features in fink 0.28===

* Validate the shlibs field for consistency
* Inclusion of &lt;code&gt;.info&lt;/code&gt; file as a control file in the &lt;code&gt;.deb&lt;/code&gt;
* New selfupdate code to make future addition of methods easier
* Automatic suggestion to run &lt;code&gt;fink selfupdate&lt;/code&gt; if it hasn't been done in a while.
* Remind user to selfupdate after enabling unstable
* Display actual Distribution string in 'fink -V'
* Use lftpget if available and appropriate
* Private shared-library syntax in &lt;code&gt;Shlibs&lt;/code&gt;

===Bug fixes in fink 0.28===

* 

{{Fink_Header}}

[[Category: Fink|Roadmap 0.28 New Features]]
[[Category: Fink_Roadmap|0.28 New Features]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:0.27 new features</title>
    <ns>0</ns>
    <id>2134</id>
    <revision>
      <id>11344</id>
      <parentid>11057</parentid>
      <timestamp>2007-06-11T20:43:34Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <comment>/* New features in fink 0.27 */</comment>
      <sha1>l7z0ijvicvedmf8fjhhw9cs1tmy2zuz</sha1>
      <text xml:space="preserve" bytes="1051">{{Fink_Header}}

===New features in fink 0.27===

* &lt;code&gt;fink --build-as-nobody&lt;/code&gt; tries to build as user &lt;code&gt;fink-bld&lt;/code&gt; instead of &lt;code&gt;nobody&lt;/code&gt;, which is reserved by the OS.
* Timeouts for sluggish/stalled downloads.
* Validator detects deficient checking of some script return codes in &lt;code&gt;.info&lt;/code&gt; files.
* New in 0.27.2, add conditionals support to &lt;code&gt;Shlibs&lt;/code&gt; and &lt;code&gt;ConfFiles&lt;/code&gt; field (requires using &lt;code&gt;BuildDepends: fink (&gt;= 0.27.2)&lt;/code&gt; or higher).

===Bug fixes in fink 0.27===
* Saner handling of virtual (&lt;code&gt;Provides&lt;/code&gt;) packages directly from the fink command-line.
* Better recovery when encountering an unprocessable &lt;code&gt;.info&lt;/code&gt; file.
* More reliable building perl-module packages (&lt;code&gt;Type: perl&lt;/code&gt; passed &lt;code&gt;-j1&lt;/code&gt; in default &lt;code&gt;InstallScript&lt;/code&gt;).
* Improved detection of non-fink X11.
* Safer management of communication between fink and apt-get.

{{Fink_Header}}

[[Category: Fink|Roadmap 0.27 New Features]]
[[Category: Fink_Roadmap|0.27 New Features]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:PBL</title>
    <ns>0</ns>
    <id>1695</id>
    <revision>
      <id>11122</id>
      <parentid>11103</parentid>
      <timestamp>2007-05-31T01:11:35Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of JoeSy4, changed back to last version by RangerRick</comment>
      <sha1>778pi6741ggyrnivsx8qtmx16hsrud9</sha1>
      <text xml:space="preserve" bytes="19053">{{Fink_Header}}

'''BY-LAWS
OF
Fink Developer Network, INC.'''

&lt;div style=&quot;float:right;&quot;&gt;__TOC__&lt;/div&gt;

==ARTICLE ONE - ORGANISATION==

*1. The name of this organisation shall be Fink Developer Network, Inc or its short form FDN. Inc.
*2. The organisation may at its pleasure by a vote of the board change its name.
*3. The organisation will operate globally.
----
: &amp;rarr; ''This seems self explanatory, the first article simply defines what this organisation does and what it does not in very simple terms. This is only limited to the organisation itself, the name, its form and so on.''
----
==ARTICLE TWO - PURPOSE==
The following are the purposes for which this organisation has been organised:

* To create, form and establish an organisation to formulate and provide a software named Fink for use by the general public without charge;
* To teach and train individuals regarding the use and application of Fink;
* To produce and further the publication of written or electronic books, articles or other means of transporting information regarding Fink.
* To hold classes, seminars and workshops concerning the proper use and application of Fink;
* To support, encourage and promote the creation and development of Fink;
* To solicit, collect and otherwise raise money and to expend such funds in furtherance of the goals and activities of the corporation;
* To aid, assist, cooperate, co-sponsor and otherwise engage in concerted action with private, educational and governmental organisations and associations on all issues and matters concerning the development and improvement of Fink as well as its distribution;&lt;br&gt;and generally:
* To endeavour to promote, foster and advance interest in Fink by all available means and methods.
----
: &amp;rarr; ''This basically defines what FDN is allowed to do and why it has been incorporated. Please review this carefully and let me know what you would remove or what you want to add. It is very hard for FDN to operate outside of these. we have to be very clear what we do.'' &lt;br&gt;
: ''Everything below this is just legal mumbo jumbo, saying that we do are not allowed to run a school and certain laws have to be honoured.'' 
----

Nothing herein shall authorise the corporation to operate or maintain a nursery school, elementary school or secondary school. Nothing herein shall authorise the corporation to operate or maintain an institute of higher learning or to grant degrees.

In furtherance of its corporate purposes, the corporation shall have all the general powers enumerated in ''Section 202'' of the '''Not-For-Profit Corporation Law''', together with the power to solicit grants and contributions for the corporate purposes.

Nothing herein shall authorise this corporation, directly or indirectly, to engage in or include among its purposes, any of the activities mentioned in the '''Not-For-Profit Corporation Law''', ''Section 404(b)-(v)''.

==ARTICLE THREE - MEMBERSHIP==

Membership in this organisation shall be open to all who meet the approval of the board.&lt;br&gt;
Members have the right and responsibility of overseeing the board members, officers, and committees and ensuring that they operate in accordance with the goals and principles of the organisation. All board members, officers, and committees are ultimately responsible to the membership, and should act in accordance with its wishes.

Contributing and non-contributing memberships are available within this organisation. Members agree to support the principles and help further the goals of this organisation. All membership applications and renewals will be reviewed by the board. Applicants must meet the criteria set forth in the charter of the board. The board has the right to refuse any membership application as long as its reasons are publicly declared.

*Members may be individuals or organisations.
*Members wishing to leave the organisation may do so at the first and last day of every month by notifying the board in writing of their desire for the membership to be terminated.

===Contributing Members===

Contributing memberships are open to persons and organisations who have made significant contributions to Fink, as determined by the board.&lt;br&gt;
The board and its charter will make reasonable and fair procedures for these determinations, including for acquiring necessary information such as code fragments or lists of packages a prospective member has supplied to Fink or testimonials, and for regularly reviewing the status of contributing members.
If a contributing membership is not renewed, the member's status will be downgraded to a non-contributing member.

Board members, by virtue of their office, are automatically granted the status of contributing members.

===Non-contributing Membership===

To become a non contributing member, the applicant must apply for a non-contributing membership. This membership will not expire.
To become a contributing member at a later time, non-contributing members must follow the application process for contributing members.

----
: &amp;rarr; ''All of the above mentioned defines who is eligible for certain memberships. This is used in the voting process below, it could also be used for the chapters. Sometimes it might be desirable that only certain type of members are allowed to do certain thigs. Right now there are two types, it might be interesting to add a third, which would be a &quot;dormant&quot; membership.''
----

==ARTICLE FOUR - MEETING==

The annual board meeting of this organisation shall be held on the first day of September, each and every year except if such day be a legal holiday then and 
in that event the Board of Directors shall fix the day but it shall not be more than two weeks from the date fixed by these by-laws.
The Location of this annual board meeting shall be fixed by the Board of Directors at the end of each annual meeting for the following annual meeting. 
Annual board meetings may use the funds of this organisation to pay for the expenses of board members. 
This only includes travel costs and housing. Each board member is required to fully disclose what service has been payed by the organisations funds.

The Secretary shall cause to be mailed to every board member in good standing at his or her address as it appears in the membership roll book of this organisation a notice telling the time and place of such annual meeting.
'''Regular meetings of the board of this organisation shall be held electronically every two months.'''

The presence of not less than two-thirds of the board members shall constitute a quorum and shall be necessary to
conduct the business of this organisation, but a lesser number may adjourn the meeting for a period of not more than two weeks
from the date scheduled by these by-laws and the Secretary shall cause a notice of this scheduled meeting to be sent to all those members
who were not present at the meeting originally called. A quorum as herein-before set forth shall be required at any adjourned meeting.

Special meetings of the board of this organisation may be called by the President when he deems it in the best interest of the organisation
or by two members of the board. Notices of such meeting shall be mailed to all members at their addresses as they appear in the membership
roll book at least two weeks but not more than 30 days before the scheduled date set for such special meeting. Such notice shall state the reasons
that such meeting has been called and the business to be conducted.

At the request of one-third members of the organisation the President shall cause a special meeting to be called but such request must be made
in writing at least '''thirty (30) days''' before the requested scheduled date. No other business but that specified in the notice may be transacted at
such special meeting without the unanimous consent of all present at such meeting.

==ARTICLE FIVE - VOTING==

Any contributing member of FDN is eligible to vote.&lt;br&gt;
Non contributing members of FDN may not vote.&lt;br&gt;
Each voting member shall have exactly one vote.&lt;br&gt; 
Ballots concerning election or removal of officers shall be secret ballots.

The quorum for a vote by the membership shall be set at 45% of eligible voters. All votes (unless otherwise stated) are approved by a two-third majority (&gt;75%) of voters being in favor of the issue in question. Each board member has the right to issue a veto. An issues veto by any board member results in the vote in question being declared null and void. The topic being voted on must be renegotiated and may then be brought in for another voting, no less than 5 days but no more than 14 days from the date the veto has been issued. Board members that issue a veto loose their right to issue another for 3 months.

At any regular or special meeting if a majority so requires, any question may be voted upon in the manner and style deemed appropriate by the secretary of the organization or chairman of the meeting.
All votes by the membership shall be cast in the manner specified by the Secretary. The default method of voting shall be registered letter sent to the Secretary.

Any proposal submitted to the secretary with N or more number of seconds shall be put before the membership for a vote within 30 days. N is defined as follows:&lt;br&gt;
'''N''' = ''sqrt(''M'')''  where M is the number of contributing members of the organization. ''(Is this floor() or ceil()?)''

Votes and tallies are not revealed during voting but votes cast are listed after the election is over. The ballots for the election of officers shall be kept secret even after the vote is over. No inspector of election shall be a candidate for office or shall be personally interested in the question voted upon.

===Resolutions===
Resolutions are voted on by the board of directors. Resolutions may be put before the board for consideration. 
If the board decides not to consider an issue, the membership may vote on the resolution.
The membership may never override a vote of the board unless there is a 100% consensus.

==ARTICLE SIX - ORDER OF BUSINESS==

#Roll call.
#Reading of the minutes of the preceding meeting.
#Reports of committee.
#Reports of officers.
#Old and unfinished business.
#New business.
#Good and welfare.
#Adjournments.

==ARTICLE SEVEN - BOARD OF DIRECTORS==

The business of this organisation shall be managed by a Board of Directors consisting of '''six''', ''four'' of whom shall be the officers of this organisation.

The directors to be chosen for the ensuing year shall be chosen at the annual meeting of this organisation in the same manner and style as the officers of this organisation and they shall serve for a term of two years.&lt;br&gt;

*The Board of Directors shall have the control and management of the affairs and business of this organisation. Such Board of Directors shall only act in the name of the organisation when it shall be regularly convened by its chairman after due notice to all the directors of such meeting.
*Two-thirds of the members of the Board of Directors shall constitute a quorum and the meetings of the Board of Directors shall be held regularly on the first of July each year.
*Each director shall have one vote and such voting may not be done by proxy.
*Each director shall have one veto and such veto may not be given by proxy.
*The Board of Directors may make such rules and regulations covering its meetings as it may in its discretion determine necessary.
*Vacancies in the Board of Directors shall be filled by a vote of the majority of the remaining members of the Board of Directors for the balance of the year.
*The President of the organisation by virtue of the office shall be Chairperson of the Board of Directors. The Board of Directors shall select from one of their number a Secretary.

A director may be removed when sufficient cause exists for such removal. The Board of Directors may entertain charges against any director. A director may be represented by counsel upon any removal hearing. The Board of Directors shall adopt such rules as it may in its discretion consider necessary for the best interests of the organisation, for this hearing.

==ARTICLE EIGHT - OFFICERS==
The officers of this organisation shall hold the positions of President, Vice President, Secretary, and Treasurer. The names and positions of the current officers are found in ''Appendix A'' of these by-laws.

The President shall preside at all membership meetings, by virtue of the office be Chairperson of the Board of Directors, present at each annual meeting of the organisation an annual report of the work of the organisation, appoint all committees, temporary or permanent, see that all books, reports and certificates as required by law are properly kept or filed, be one of the officers who may sign the checks or drafts of the organisation, and have such powers as may be reasonably construed as belonging to the chief executive of any organisation.

The Vice-President shall in the event of the absence or inability of the President to exercise his or her office become acting President of the organisation with all the rights, privileges and powers as if he or she had been the duly elected President.

The Secretary shall keep the minutes and records of the organisation in appropriate books, file any certificate required by any statute, federal or state, give and serve all notices to members of the organisation, be the official custodian of the records and seal of the organisation, be one of the officers required to sign the checks and drafts of the organisation, present to the membership at any meetings any communication addressed to the Secretary of the organisation, submit to the Board of Directors any communications which shall be addressed to the Secretary of the organisation, attend to all correspondence of the organisation and exercise all duties incident to the office of Secretary.

The Treasurer shall have the care and custody of all monies belonging to the organisation, be solely responsible for such monies or securities of the organisation and be one of the officers who shall sign checks or drafts of the organisation. No special fund may be set aside that shall make it unnecessary for the Treasurer to sign the checks issued upon it.
The Treasurer shall render at stated periods as the Board of Directors shall determine a written account of the finances of the organisation and such report shall be physically affixed to the minutes of the Board of Directors of such meeting and shall exercise all duties incident to the office of Treasurer.


''I'm confused: The President '''may''' sign checks, the Secretary is '''required''' to sign checks, and the Treasurer '''shall''' sign checks for all funds (No special fund may be set aside that shall make it unnecessary for the Treasurer to sign the checks issued upon it.)''

''Do we have 3 different terms for 2 things?''

''How many signatures are needed? 2? 3?  Who must sign? Who can sign?''


Officers shall by virtue of this office be members of the Board of Directors.
No officer or director shall for reason of the office be entitled to receive any salary or compensation, but nothing herein shall be construed to prevent an officer or director from receiving any compensation from the organisation for duties other than as a director or officer.

==ARTICLE NINE - SALARIES==
The Board of Directors shall hire and fix the compensation of any and all employees which they in their discretion may determine to be necessary in the conduct of the business of the organisation.

==ARTICLE TEN - COMMITTEES==
Committees are an extension of the board of directors and take care of the day to day business of the organisation. The board of directors forms committees by issuing the committee charter.

Committees are governed by the board of directors and are accountable to the board and the membership.
Committees may propose resolutions and motions within the scope of their charter, and may also make decisions on behalf of the organisation if and as authorised by their charter. Discussions should be held in a public forum, but the committee may have private discussions if they are deemed necessary.
===Committee Charter===
The committee charter completely describes the rights and responsibilities of the committee, as well as its structure, membership policies, and any other relevant details. The charter should also provide an outline for how discussions will be conducted, and how the membership and public are to be informed of its actions. Charters are issued and revoked by the board of directors. The charter shall be put before the membership for review and discussion before it is voted on by the board of directors.
The charter shall also define the membership structure of the committee. Both contributing and non contributing members are eligible to serve on committees.
===Permanent Committees===
Permanent committees are in charge of issues that are vital to the basic functionality of the organisation. Their charters shall not be revoked but may be modified by the board of directors if necessary.&lt;br&gt;
The permanent committees shall be as follows:

* Administrative Committee
**This committee is responsible for maintaining the computers and other technical systems that Fink is using and other technical resources.
* Website Committee
** This committee is responsible for maintaining, developing and providing all technical and financial means to uphold an intact web-infrastructure for Fink.
  
==ARTICLE ELEVEN - DUES==
No dues are required and no dues are anticipated, but the Directors reserve the right to impose a membership dues and to set the amount at a later date if it is deemed necessary. Such membership dues have to be approved by a vote of the contributing membership.

==ARTICLE TWELVE - FINANCIAL DISCLOSURE==
The Treasurer is responsible for publicly, electronically exposing any cash disbursements made by this organisation that have been fully or partly financed by monetary donations of its contributing and/or  non-contributing membership or any other source of such monetary donations. The only exception to this article are disbursements sponsored by third parties which explicitly request not to be disclosed. 

==ARTICLE THIRTEEN - AMENDMENTS==
These by-laws may be altered, amended, repealed or added to by an affirmative vote of not less than two-thirds of the members.
Appendices containing organisational information shall not require a vote of the membership for modification. They may be modified by a 2/3 vote of the Board of Directors, unless otherwise stated therein.

==APPENDIX A - OFFICERS OF THE COMPANY==
This section shall contain the names and positions of the current officers. It shall be modified to contain the names of new officers of the organisation when necessary, and shall not require a vote beyond the approval of the resolution appointing the officers.

The officers of the organisation shall be as follows:&lt;br&gt;
*President:    
*Vice President:    
*Secretary:    
*Treasurer:     (David H?hn)
{{Fink_Header}}

[[Category:Fink|Bylaws]]</text>
    </revision>
  </page>
  <page>
    <title>Japanese</title>
    <ns>0</ns>
    <id>2533</id>
    <revision>
      <id>11134</id>
      <parentid>11133</parentid>
      <timestamp>2007-06-01T04:45:45Z</timestamp>
      <contributor>
        <username>Baba</username>
        <id>291</id>
      </contributor>
      <sha1>oztkmvof8mvi8e9vaio83lcfmb5pw49</sha1>
      <text xml:space="preserve" bytes="739">= Fink と日本語 =
== ドキュメント翻訳 ==
翻訳者を募集中です。

== 日本語環境の構築 ==
=== 設定 ===
まず、Property List Editor で ~/.MacOSX/environment.plist というファイルを新規作成する。

以下の Property List と Value を入力する。Class はいずれも String。
{| border=&quot;1&quot;
|- 
|LANG||ja_JP.UTF-8 
|- 
|LC_COLLATE||C 
|- 
|LC_TIME||C 
|- 
|XMODIFIERS||@im=kinput2.mac
|}

== FAQ ==
Q. locale を設定したのに反映されない
A1. local は、/usr/share/locale/ にある通りに設定します。大文字、小文字も間違いなく設定しないと反映されません。

[[Category: Fink|Internationalization]]
[[Category: Fink Structure|Internationalization]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Documentation Jottings:TypeField</title>
    <ns>0</ns>
    <id>1648</id>
    <revision>
      <id>11228</id>
      <parentid>11143</parentid>
      <timestamp>2007-06-11T08:57:19Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of LfyTdb, changed back to last version by Chris01</comment>
      <sha1>941jqw1s15yd9yaz8epxq3mowvsa24k</sha1>
      <text xml:space="preserve" bytes="3123">{{Fink_Header}}

The 'Type:' field:

&lt;br /&gt;&lt;br /&gt;I found the information in the reference manual not so complete! Hence, I am writing this small write-up for new fink maintainers. I will give an example here and give some explanations.

&lt;br /&gt;&lt;br /&gt;I wanted to create a package called ccpnmr. It had three variants, namely, tk, opengl and mesa. It is also a python package. To allow for different versions of python in fink, I needed to create some more variants corresponding to different versions of python. I used a single Info2 format info file. Everything inside a Info2 file is exactly the same as in a regular info file, except for a few enhancements. The other main difference most will need to know is that the whole file is enclosed within a Info2: &amp;lt;&amp;lt; ...Contents &amp;lt;&amp;lt; tag. Eg.,
&lt;br /&gt;Info2: &amp;lt;&amp;lt;&lt;br /&gt;Pacakge: foo&lt;br /&gt;Version: 1.1.1&lt;br /&gt;.....&lt;br /&gt;&amp;lt;&amp;lt;&lt;br /&gt;&lt;br /&gt;

To create my variants, I defined my own 'type' called [handler].&lt;br /&gt;My 'type' field looks like this:&lt;br /&gt;Type: python (2.2 2.3 2.4), handler (tk opengl mesa)&lt;br /&gt;This creates 3 times 3 different types of packages like mypackage-tk-py22, ...., mypackage-opengl-py24, etc. All this is done with just one info file.

&lt;br /&gt;&lt;br /&gt;The 'package' field looks like this:&lt;br /&gt;Package: ccpnmr-%type_pkg[handler]-py%type_pkg[python]&lt;br /&gt;&lt;br /&gt;There are two types of %type_ variables: %type_pkg and %type_raw. The difference is as follows:&lt;br /&gt;Take the above example of Type: python (2.2 2.3 2.4). &lt;br /&gt;%type_pkg[python] = 22&lt;br /&gt;%type_pkg[python] = 23&lt;br /&gt;%type_pkg[python] = 24&lt;br /&gt;%type_pkg[] when expanded removes the dots.&lt;br /&gt;%type_raw[python] = 2.2&lt;br /&gt;%type_raw[python] = 2.3&lt;br /&gt;%type_raw[python] = 2.4&lt;br /&gt;%type_raw[] when expanded by fink, stil contains the dots, as raw as you enter!

&lt;br /&gt;&lt;br /&gt;Now if you look at the package field, you know why I wanted to use %type_pkg[python]. I wanted the names to end in -py24, etc. and not -py2.4, etc. We know that this is how a fink package should be named.&lt;br /&gt;&lt;br /&gt;
The newly created 'Type,' specific for my package 'handler,' has subtypes which are just strings. Hence, %type_pkg[handler] would be equivalent to %type_raw[handler].

&lt;br /&gt;&lt;br /&gt;The Depends/ BuildDepends field may contain dpendency packages specifc only for one or some of the variants. So to instruct fink that if the variant is 'foo' then the dependency would be 'bar,' we format the fields as follows:
From the example above,
Depends: python%type_pkg[python], python%type_pkg[python]-socket, x11, tcltk, (%type_pkg[handler] = opengl) freeglut-shlibs, (%type_pkg[handler] = mesa) mesa-shlibs

You can see from the above example that x11 and tcltk are listed as usual because they are needed by all the variants. The dependency needed by specific variants are written as '( %type_pkg[handler] = opengl) freeglut-shlibs,' etc. It would literally translate into the following:
if the variant is of 'Type' [handler], opengl, then freeglut-shlibs is a dependency and not otherwise.

[[Category:Fink|Documentation Jottings TypeField]]
[[Category:Fink_Documentation|Documentation Jottings TypeField]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:Medium Term Goals</title>
    <ns>0</ns>
    <id>1044</id>
    <revision>
      <id>11845</id>
      <parentid>11578</parentid>
      <timestamp>2010-05-06T20:09:23Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <minor/>
      <comment>Removing  {{Fink_Header}}</comment>
      <sha1>sojmkghd2kmx2x27x28wfa4y4ut0488</sha1>
      <text xml:space="preserve" bytes="7121">This page tracks features or bug fixes that could or should be implemented in a future fink release. This may includes major new feature. For smaller or high priority features or bug fixes please refer to the [[Fink:Roadmap:Near_Term_Goals|Near Term Goals]] page.

* [[Fink:Major New Feature Plans:InheritedBuildDepends|InheritedBuildDepends]]

* [[Fink:Major New Feature Plans:XMLish Source and Patch|new Source blocks]]

* more indexing work
** refactor into &lt;code&gt;Indexer.pm&lt;/code&gt; and possibly other modules
** load-on-demand
** version the DB
** forget_packages should have better options

* dep-engine refactoring work?

* External API (so scripts can 'use Fink') &lt;b&gt;'use Fink' works in CVS&lt;/b&gt;

* optimizations
** auto-split PkgVersion?

* bug fixing!

* dist-upgrade?

* automatically detect users' location, even for binary install

* [http://sourceforge.net/tracker/index.php?func=detail&amp;aid=642075&amp;group_id=17203&amp;atid=367203 rethink passwd]

* [http://sourceforge.net/tracker/?func=detail&amp;aid=992093&amp;group_id=17203&amp;atid=117203 Check version dependencies during package upgrade] to avoid (or at least minimize) dep breakage. If foo-dev:depends:foo(=%v-%r), upgrading foo should (but does not currently) trigger an upgrade of foo-dev. 
** Moving discussion to bug.

* New license that permits source mirroring but not binary distribution. (see [http://article.gmane.org/gmane.os.apple.fink.devel/10927 openssl-linked packages: need new license type?] on fink-devel)

* launchd support. We may '''have''' to get this done before 10.5, since the old StartupItems mechanism is deprecated.
** Modify daemonic so that it turns DaemonicFile/Name into launchd plists on 10.4 and above. (make sure 'daemonic install' checks for and removes an existing StartupItems if it installs a LaunchAgents) 
** Add a new field for explicitly specifying launchd plist files to be placed in /Library/LaunchAgents (or LaunchDaemons? what's the difference?). This should also automate calling launchctl load and unload in PostInst and PreRm. (What about backwards compatibility, what would happen on 10.3?)
*** LaunchDaemons start up on system boot.  LaunchAgents start up for each user when that user logs in (at the console only, probably) &amp;mdash;[[User:Msachs|msachs]]
**[http://lingon.sourceforge.net/ Lingon] is a really nice editor for launchd plists. It is open-source and could provide some good code to get the changes to daemonic started.
* make AutoScanpackages default to true (requires that an apt-ftparchive binary be available as part of the default installation).

* Try to conditionalize more fields
** AppBundles, DocFiles, JarFiles, Files, ConfFiles, InfoDocs
** Source and Patch (maybe wait for [[Fink:Major New Feature Plans:XMLish Source and Patch|new Source blocks]])
** SplitOff?
** Set*--probably trivial to do (piggyback on the ConfigureParams parser)


* Create command-line tools for things fink does in PostInst and other maintainer scripts. Eg: fink-update-pod, fink-app-bundles.
** Currently, fink inserts bash code in the PostInst, so when you upgrade fink you still have old .debs around with old code.
** If the PostInst just said 'fink-update-pod' (with any reasonable arguments) then the debs would automagically use the new code.
** Packages that use scrollkeeper and gconf would benefit here, since it's a pain to put the various multiline bits (that could change with future scrollkeeper or gconf versions and makes validation checks for their presence easier. I think at a minimum the same args passed to PostInst plus some package details would be good as generic interface for this kind of thing...simplifies the migration and leaves us completely open for future enhancements.
** Note that we'd have to automatically add a Depends: fink (&gt;= X), where X is the earliest version of Fink that provides all the command-line scripts needed for this package's Postinst/Prerm.

* &lt;strike&gt;A 'fink env' command. Use case is 'eval `fink env foo`', which sets up the environment in the current shell as if it would be used to build foo. This allows foo to be built manually.&lt;/strike&gt;
** &lt;i&gt;dmacks&lt;/i&gt;: I see on #fink you also mentioned installing deps; good idea! Something like:&lt;code&gt;fink install-dependencies [--build] foo&lt;/code&gt; or &lt;code&gt;fink install-[build-]dependencies foo&lt;/code&gt; (just runtime, or optionally also build-time deps/cons for a given pkg).

* consider copying dports trace-mode: conditional on a cmdline option, use DYLD_INSERT to monitor what files are opened during a build...then we can check for missing deps? Would be necessary to use FORCE_FLAT, which could be dangerous.
** After discussion with pogma and msacshs, it '''appears''' that FORCE_FLAT now can cause the wrong symbol to be used (rather than crashes, as under 10.2). In this case, we have to be much more careful to ensure that this doesn't cause data corruption.

* Begin splitting PkgVersion up into reasonable size chunks. Splitting shall be on functional borders, ie: where there already is a distinction made by fink between different groups of PkgVersions.
*# Split up Source (package from .info file) vs. Dummy (from Status or VirtPackage)
*## Create PV::Source which @ISA PV. 
*##* There should be a method is_source() which returns true for PV::Source only.
*##* '''Temporarily''', so that PV's don't suddenly lose the Source methods, make a PV::Dummy which @ISA PV::Source, but returns false for is_source().
*## Make creators of PVs use the new correct constructors in different packages.
*## Move methods to PV::Source one-by-one
*## Modify other classes to respect whether a package is a Source or not (eg: real_install)
*## Eventually, once everything is ready for it, remove PV::Dummy. Can remove it bit-by-bit by overriding methods with die &quot;Not implemented!&quot;. 
*# Split up Parent vs. SplitOff


* Shlibs needs work: '''AutoShlibs can wait'''
** unpredictable depends?
** [https://sourceforge.net/tracker/index.php?func=detail&amp;aid=1249916&amp;group_id=17203&amp;atid=117203 read-from-debs] issue 
* [http://sourceforge.net/tracker/index.php?func=detail&amp;aid=998741&amp;group_id=17203&amp;atid=317203 Module::Build] '''can wait'''
* prompt for confirmation before [http://permalink.gmane.org/gmane.os.macosx.fink.devel/10863 upgrading] 'fink reinstall' to 'fink build'? '''don't care?'''
* dmacks: abolish implicit &lt;code&gt;Source&lt;/code&gt;? '''Not worth doing until [[Fink:Major New Feature Plans:XMLish Source and Patch|XMLish Source and Patch]]'''
* Validator:
** Enforcement of requiring Depends:base-files if install any profile.d scripts (in .deb)? (see [http://thread.gmane.org/gmane.os.macosx.fink.devel/11210 fink-devel]) '''not sure we want to do this, so not a blocker'''

* fink selfupdate-http
** Every so often some user complains of not being able to selfupdate-cvs or selfupdate-rsync because of aggressive firewalls/proxies. We could create tarballs (every hour? every CVS commit? every day?) and make them available via HTTP on some server(s) (monipol thought of sourceforge.net, akh suggested master rsync server)


[[Category: Fink|Roadmap Medium Term Goals]]
[[Category: Fink_Roadmap|Medium Term Goals]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:NewMaintainer</title>
    <ns>0</ns>
    <id>1096</id>
    <revision>
      <id>11820</id>
      <parentid>11378</parentid>
      <timestamp>2010-04-14T17:20:37Z</timestamp>
      <contributor>
        <username>Nieder</username>
        <id>386</id>
      </contributor>
      <comment>changed defunct link to new file provided by danielj</comment>
      <sha1>5pwu6hyhbofyceh6jxsdb8rt51jda1t</sha1>
      <text xml:space="preserve" bytes="6326">{{Fink_Header}}

== DRAFT ==

If you'd like to maintain software within Fink, we'd love to have your help.

Note that this guide is designed for those who would like to become official Fink packages with full developer privileges, and who are committed to continued maintenance of their packages.

Here's how to start:

=== Learn about packaging software with Fink ===

* If you don't yet have Fink installed, you should [http://fink.sourceforge.net/download/index.php?phpLang=en install it].
* If you're not comfortable using Fink yet, read the [http://fink.sourceforge.net/doc/users-guide/index.php User's Guide].
* Learn the basics of packaging with the [http://fink.sourceforge.net/doc/quick-start-pkg/index.php Packaging Tutorial].
* Read and '''understand''' the [http://fink.sourceforge.net/doc/security/index.php Security Policy]
Once you know the basics, use the following sources for reference:

* The [http://fink.sourceforge.net/doc/packaging/index.php Packaging Manual]
* Some useful [http://fink.sourceforge.net/doc/porting/index.php OS X Porting Tips]
* [[The_Fink_Wiki|This wiki]]

=== Choose some software to package ===

If you already have a program in mind, that's a great place to start. Otherwise, you can check our auto-generated list of [http://pdb.finkproject.org/pdb/nomaintainer.php packages without maintainers]. Also, try the list of [[Fink:Orphaned|packages being orphaned]] ''NOTE: Under construction''.

Remember to make sure the program you chose is not already in fink, by trying
 fink list mypackage

Also search the [http://sourceforge.net/tracker/?atid=414256&amp;group_id=17203&amp;func=browse Package Submission Tracker] to make sure you don't duplicate somebody else's work.

=== Create your first package ===

Following the guides you read earlier, create a .info file for your package, and possibly a .patch file as well. A good way to start can be copying an existing .info file, and modifying it to fit your package.

The most important thing to do is to '''test''' and '''validate''' your package. Once you've made your .info file, put it in your local or unstable tree (for example, &lt;tt&gt;/sw/fink/dists/local/main/finkinfo/mypackage.info&lt;/tt&gt;). Then build it and validate it:

 fink validate /path/to/mypackage.info
 fink build mypackage
 fink validate /sw/fink/debs/mypackage_1.0-1_darwin-powerpc.deb

If any of the above commands shows you problems, you must fix them before submitting your package. Fink cannot accept packages that don't validate. Even apparently minor problems can become major headaches when they interact with thousands of other packages on thousands of users' computers.

If you are using &lt;code&gt;fink-0.25.x&lt;/code&gt; or later then you can perform the commands above automatically, as well as check that your package doesn't install files directly into the filesystem rather than into the .deb archive by running the following:

 fink -m --build-as-nobody rebuild mypackage

If you performe this step before submission, your package will get accepted sooner.

Should you need help with packaging, you can ask questions on the [http://fink.sourceforge.net/lists/fink-devel.php fink-devel mailing list]. You can also try asking developers on the #fink IRC channel on irc.freenode.net .

If you use BBEdit or TextWrangler there is a [http://snaggledworks.com/fink/FinkModule.plist Language Module] that offers field highlighting.

A syntax highlighting file for [http://nedit.org NEdit] is also [http://snaggledworks.com/fink/Fink-5.1.pats available].

=== Submit your package ===

If you don't already have an account with [http://sourceforge.net SourceForge.net], you'll need to create one before submitting your package.

Your package can be submitted at the [http://sourceforge.net/tracker/?atid=414256&amp;group_id=17203&amp;func=browse Package Submission Tracker]. Remember to attach the .info and .patch files. Make sure to mark the submission as &quot;Undergoing Validation&quot;. And please, '''ensure that your package validates'''.

Notes:  

*If your package is currently maintained by someone else, especially someone with commit access, you may get your update through faster if you contact the maintainer directly.
*If you are submitting a new revision or new version of an exiting package then please set the Category appropriately.  This will expedite validation of your package.
*If your package is a new lib_version, e.g. &lt;code&gt;foo2&lt;/code&gt; when &lt;code&gt;foo1&lt;/code&gt; is already in Fink, please use the &quot;Updated lib_version...&quot; Category rather than &quot;Updated Version...&quot;, as these require some special care.

'''Important:''' You ''must'' read whatever email account to which you have attached your sourceforge.net account so that you can see when a developer comments on your package, or you ''must'' visit your tracker items and check up on them.  Otherwise your submission will sit in the tracker until it is deleted or taken over by somebody who is willing to stay engaged with it.  

The Fink project doesn't have enough people to edit submitted packages:  that is incumbent on the submitter.  Moreover, it is a better learning process when the submitters stay engaged with their submissions and do the updates themselves.

=== Find a mentor (optional) ===

''NOTE: The mentoring system is currently unfinalized''

Because of the large number of submissions we receive, it's easy for some of them to be missed. Personal attention can help prevent this, so it can be a good idea to find a mentor who will follow your progress through your packaging efforts. You can start looking for a mentor [[Fink:Mentoring|here]].

=== Continue packaging, and maintaining your packages ===

A Fink developer should usually maintain more than one package. These packages aren't just constructed once, but have to be kept up to date, as new versions are released and bugs are found. This is the most important part of development, so be sure not to neglect it.

=== Be promoted! ===

Once you've shown your ability to package software and maintain your package, other developers will take notice. One of them will nominate you to the Fink Core Group, who will make the final decision to give you developer privileges.

Congratulations on making it this far, and thanks for contributing to Fink!

{{Fink_Header}}

[[Category:Fink|Maintainer New]]
[[Category:Fink Packaging|Maintainer New]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Major New Feature Plans:Test suite</title>
    <ns>0</ns>
    <id>2117</id>
    <revision>
      <id>11329</id>
      <parentid>11300</parentid>
      <timestamp>2007-06-11T18:40:13Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of RymWk6, changed back to last version by Dmacks</comment>
      <sha1>i9y6b4wuyiurif0gwnzjh0wb49rga6r</sha1>
      <text xml:space="preserve" bytes="2002">{{Fink_Header}}

It sounds like this feature needs to be able to do, at a minimum,  
the following in an info file:
*Add extra dependencies for running the tests
*Behave differently during compilation (ConfigureParams, CompileScript)
*Specify a script which is run immediately after building and which will invoke the test suite and do some degree of interpretation of the results (exit status 0/1/2 for pass/warning/failure, for instance)

Here's my idea for how to add this to the .info syntax in a backwards-compatible matter.  Define a new field, InfoTest, which will be ignored unless running in test mode (either enabled as part of -m or with a new option).  (Actually, dmacks says that unknown fields aren't considered a problem, so maybe we don't need these to be in a block.)

Here's what this field can contain:
*&lt;tt&gt;TestDepends&lt;/tt&gt; (effectively appended to &lt;tt&gt;BuildDepends&lt;/tt&gt;, probably also want a corresponding &lt;tt&gt;TestConflicts&lt;/tt&gt; just in case)
*&lt;tt&gt;TestConfigureParams&lt;/tt&gt; (appended to &lt;tt&gt;ConfigureParams&lt;/tt&gt;)
*&lt;s&gt;&lt;tt&gt;TestCompileScript&lt;/tt&gt; (&lt;b&gt;replaces&lt;/b&gt; &lt;tt&gt;CompileScript&lt;/tt&gt;; appending to &lt;tt&gt;CompileScript&lt;/tt&gt; isn't useful, that can just go in &lt;tt&gt;TestScript&lt;/tt&gt;)&lt;/s&gt; You can just specify a CompileScript inside the InfoTest instead.
*&lt;tt&gt;TestScript&lt;/tt&gt; (run the tests and exit with 0/1/&amp;gt;1 for pass/warning/error)
*&lt;tt&gt;TestSource&lt;/tt&gt; and related fields (treated as &quot;higher N than the highest &lt;tt&gt;Source'''N'''&lt;/tt&gt;)
*&lt;tt&gt;TestSuiteSize&lt;/tt&gt;: Optional.  Valid values are &lt;tt&gt;small&lt;/tt&gt;, &lt;tt&gt;medium&lt;/tt&gt;, and &lt;tt&gt;large&lt;/tt&gt;.  Some day we might want to provide a way for users to express &quot;run the test suite by default if it won't take too long&quot;.
It can also contain anything from the regular .info file and it would be interpreted normally, replacing the value outside the InfoTest.

{{Fink_Header}}

[[Category: Fink|New Feature Plans Test suite]]
[[Category: Fink_Roadmap|New Feature Plans Test suite]]
[[Category: Fink Infofile Syntax|New Feature Plans Test suite]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:PackageDatabase:NewDesign</title>
    <ns>0</ns>
    <id>2142</id>
    <revision>
      <id>11382</id>
      <parentid>11377</parentid>
      <timestamp>2007-09-24T13:15:41Z</timestamp>
      <contributor>
        <username>Chris01</username>
        <id>171</id>
      </contributor>
      <comment>Howto is now updated /* File cleanup */</comment>
      <sha1>ohldpy60gdy06umaj3nnkx4te4n04z0</sha1>
      <text xml:space="preserve" bytes="12090">{{Fink_Header}}

== Ideas about Improving the PDB ==

This page collectes ideas on what could and should be improved in the [http://pdb.finkproject.org/pdb/ Package Database (pdb)].


== Testing Setup ==

A demo of how the new PDB could look can be found at http://finch.finkproject.org/~chris01/fink_web/pdb/ . The corresponding files are on finch.finkproject.org . The scripts can be found at:

&lt;code&gt;finch.finkproject.org:/home/chris01/new_pdb/scripts/pdb&lt;/code&gt;

The files there are checked out from the [http://fink.cvs.sourceforge.net/fink/scripts/pdb/?pathrev=redesign_pdb redesign_pdb branch]. And the web pages are at:

&lt;code&gt;finch.finkproject.org:/home/chris01/public_html/fink_web/pdb&lt;/code&gt;

also checked out from the [http://fink.cvs.sourceforge.net/fink/web/pdb/?pathrev=redesign_pdb redesign_pdb branch]. The [http://fink.cvs.sourceforge.net/fink/scripts/pdb/HOWTO?view=markup&amp;pathrev=redesign_pdb HOWTO] file describes how to clean out the db and start fresh.

The database can be accessed through the [https://finch.finkproject.org/phpmyadmin/ phpMyAdmin web] interface.

'''IMPORTANT''': Always use the [http://fink.cvs.sourceforge.net/fink/scripts/pdb/update.sh?view=markup&amp;pathrev=redesign_pdb update.sh] script to update the cvs checkouts. This scripts fixes the group permissions so that everybody has access to the files. However, for the php files there is no such script. So make sure you do:

&lt;code&gt;chmod -R g+w *&lt;/code&gt;

== Backend: Implementation issues, Database Infrastructure ==

In this section, we talk about the &quot;behind the scenes&quot; code of the package database,
i.e. the parts not visible to users

=== General ===

* Incremental update of package db table. E.g.: ([[User:Chris01|chris01]])
** create a temporary table with new entries
** Remove everything from old table not in temp table
** Update entries already in old table
** Add entries only in temp table
** &lt;s&gt;and dmacks says: &quot;Now just a minute, why doesn't index.php just do SELECT COUNT(DISTINCT name) FROM package; ?&quot;&lt;/s&gt; ([[User:Chris01|chris01]])
* &lt;s&gt;Links to the info files in cvs, and last changed date.&lt;/s&gt; ([[User:Chris01|chris01]])
* &lt;s&gt;Better formatting of the Desc fields&lt;/s&gt; ([[User:Chris01|chris01]])
* &lt;s&gt;Show info about a specific version, e.g. http://www.finkproject.org/pdb/package.php/cups-dev?version=1.1.15-2&lt;/s&gt;([[User:Chris01|chris01]])
** &lt;s&gt;In the same vein, it should always be clearly visible which version is being displayed -- maybe display that information in the the title, so instead of &quot;Package cups-dev&quot; it shows &quot;Package cups-dev 1.1.20-11&quot;; alternatively, add a &quot;Version:&quot; entry to the table&lt;/s&gt; ([[User:Fingolfin|Fingolfin]])
** &lt;s&gt;The table on package.php which shows the latest known versions of a given package for each dist/tree would probably be linking to these &quot;specific version&quot; pages&lt;/s&gt; ([[User:Fingolfin|Fingolfin]])
* &lt;s&gt;exclude virtuals, or handle them gracefully, e.g. by showing all possible virtual packages without a version number, might be difficult&lt;/s&gt; ([[User:Chris01|chris01]]: just don't show them.)
* &lt;s&gt;omit actual locally-installed fink if it is present&lt;/s&gt;
* Why are there entries in the old pdb for packages that are no longer in any dist? (E.g. [http://pdb.finkproject.org/pdb/package.php/archive-zip-pm586-man archive-zip-pm586-man]) ([[User:Chris01|chris01]])
** They're available only in dists that aren't displayed in the table (flags/&quot;latest&quot; doesn't know releases.inc and package.php only looks at &quot;latest&quot;). archive-zip-pmXXX-man is present in current-10.4-transitional-unstable only. ([[User:Dmacks|DMacks]] 03:22, 30 January 2007 (CET))
** So we should discuss how we deal with entries of old releases. I suggest: don't show them in the index anymore. Objections? ([[User:Chris01|chris01]])
* &lt;s&gt;Show DescUsage&lt;/s&gt; ([[User:Chris01|chris01]])
* Do we want to hide some information for the default package page, and have an expert mode (e.g. DescUsage, dependencies, CVS, etc.) ([[User:Chris01|chris01]])
* Show dependencies? ([[User:Chris01|chris01]]) And should that include BuildDepends? ([[User:Alexkhansen|akh]])
* &lt;s&gt;Fixed a bug where packages were shown in a bindist even though the license was 'Restrictive' at the time of the bindist (e.g. svn-ssl)&lt;/s&gt; ([[User:Chris01|chris01]])
* How about displaying the output of &quot;fink validate&quot; for every .info file, too? (We would have to store it in the DB, too, for this to work, of course). Benefit: This might coerce some more packagers into validating their packages, as they get a nice shiny green &quot;Package is valid&quot; vs. a list of yellow/orange &quot;Validation warnings/errors&quot;. ([[User:Fingolfin|Fingolfin]])
* Should 'htdocs/pdb/db.inc.php' used in header.inc be the same as 'htdocs/db.inc.php'? ([[User:Chris01|chris01]])
* &lt;s&gt;Improve selecting splitoffs in package.php (include version info in link) ([[User:Chris01|chris01]])&lt;/s&gt;
* &lt;s&gt;Make links to splitoffs version/release specific, if package.php was called with version/release parameters ([[User:Chris01|chris01]])&lt;/s&gt;
* Is &quot;[http://sourceforge.net/tracker/?func=detail&amp;aid=1606084&amp;group_id=17203&amp;atid=117203 pdb doesn't see the &quot;current&quot; distribution (Fink Bug # 1606084)]&quot; solved?

=== Changes to the DB table layout ===

* The PDB SQL format is not in the proper form for a relational DB ([[User:Fingolfin|Fingolfin]])
** &lt;s&gt;fullname is redundant and should go&lt;/s&gt;
** &lt;s&gt;latest and needtest appear redundant, too&lt;/s&gt; ([[User:Chris01|Chris01]])
** &lt;s&gt;desclong is preformated, instead of leaving this formatting to the presentation layer&lt;/s&gt;
** &lt;s&gt;&quot;release&quot; table should be refactored:&lt;/s&gt;
*** &lt;s&gt;the name &quot;release&quot; for the table / &quot;package&quot; field seems inappropriate. How about changing it to &quot;distribution&quot; ?&lt;/s&gt;
*** &lt;s&gt;or rather, it might be split (for the sake of normalization): have a distribution&quot; table, which contains: OS/distro, and priority&lt;/s&gt;
*** &lt;s&gt;then, have a &quot;release&quot; (better name?) table, which contains:  distro, type (stable/unstable/bindist), version (like &quot;0.8.1&quot; or &quot;current&quot;).&lt;/s&gt;
*** &lt;s&gt;that way, we have normalized the data, and get rid of releases.inc as it is now trivial to find the stable tree matching an unstable tree and vice versa.&lt;/s&gt;
*** &lt;s&gt;however, I am not quite sure how one would now properly &quot;link&quot; packages to their release? Either we keep the current &quot;release name&quot; (somewhat contrary to normalization), or we simply number the releases sequentially, and use that number as key).&lt;/s&gt;
*** &lt;s&gt;I suggest the the following DB schema and content for the dist/release tables: [[Fink:PackageDatabase:NewSchema]] ([[User:Chris01|Chris01]])&lt;/s&gt;
** Consider performing some [http://en.wikipedia.org/wiki/Database_normalization database normalization], at least 1NF or even 2NF/3NF
*** some of the suggestions above already lead into that direction). 
*** not sure whether this would actually help us, though, considering we automatically create the content of the DB. However, since normalization helps keep data integretity, it might make incremental updating safe(er)
*** What else should be normalized? sections, maintainers, what else? ([[User:Chris01|Chris01]])

=== File cleanup ===
This refers to the PDB related files in our repository. Some of them could/should be removed, renamed, documented or otherwise modified.

The following files are in web/pdb:
* &lt;s&gt;list.php, maintainer.php, nomaintainer.php, search.php, section.php: have all been changed to simply redirect to browse.php&lt;/s&gt;
* &lt;s&gt;testing.php: can eventually be replaced by a redirect to browse.php (once we have refactored the &quot;release&quot; DB table appropriately)&lt;/s&gt;
* &lt;s&gt;compare.php: allowed comparing trees, currently not functional: Remove it for now (can easily be restored from CVS should we need to reimplement this feature at some point)&lt;/s&gt;
* &lt;s&gt;releases.inc: This should go, instead all the relevant information should be stored in the DB alone (this makes maintanance easier). For this, the &quot;release&quot; DB table needs to be refactored, see elsewhere on this page&lt;/s&gt;
* &lt;s&gt;Suspected part of clef's work on .deb contents db [[User:Dmacks|DMacks]]&lt;/s&gt;
** &lt;s&gt;submit.php: Looks like dead code, remove it?&lt;/s&gt;
** &lt;s&gt;packagedetails.php: This seems to be &quot;dead&quot; code: It could in theory be reached by a hidden and currently not working &quot;search package content&quot; feature of search.php: Go to http://pdb.finkproject.org/pdb/search.php?c=1 . Could probably be completly removed&lt;/s&gt;

The following files are in scripts/pdb:
* &lt;s&gt;HOWTO: Needs to be updated at some point. It seems that it hasn't received much attention in recent years, as it doesn't even mention pdb_full_update-piecewise and pdb_full_update-unified&lt;/s&gt;
* &lt;s&gt;flag: This evil beast is used for setting the &quot;latest&quot; and &quot;needtest&quot; flags -- once we remove those, it can finally be gone for good, yay :)&lt;/s&gt;
* &lt;s&gt;pdb_full_update-unified: This is long unused and no longer certain it's been updated in sync with -piecewise. No longer used because the full update can be too large or slow and hit CPU or timeout limits.&lt;/s&gt;
* &lt;s&gt;pdb_full_update-piecewise: This is the actual update script run by cron to update the databases.&lt;/s&gt;

== Frontend: Web interface ==

In this section, we are concerned with the user interface of the package database,
i.e. the parts of it with which the user interacts.

=== Usability ===

* Limit the amount of data sets returned for large queries, could happen with a LIMIT in the DB, provided the whole result is cached
* Look into better display possibilities, like a faked scrolling that actually updates inside the page using AJAX
* Investigate meaningful colour coding (might also help visually impaired)
* Make sure there is a stripped down, no frills, no javascript version for command line access
* Move as much as possible of the layout into CSS
* &lt;s&gt;Displayed advanced fields only when they are necessary in context or an advanced option is active&lt;/s&gt;
* &lt;s&gt;Simplify, simplify and simplify&lt;/s&gt;
** &lt;s&gt;The two &quot;Exclude...&quot; options at the bottom of the &quot;Browse...&quot; search form seem redundant at first glance. Maybe this could be moved to another &quot;Advanced&quot; section. --[[User:Charleslepple|Charleslepple]] 04:02, 13 March 2007 (CET)&lt;/s&gt;
* &lt;s&gt;The 'Clear Form' button should always set the form fields back to default (emtpy, Any, etc.). This probably needs some javascripting. --[[User:chris01|chris01]]&lt;/s&gt;
*&lt;s&gt;Improvements in parsing of Maintainer:  when one puts in ''finchproject.org'' for the maintainer, [[all]] of the packages show up--similarly if I use ''akh@finkproject.org''.&lt;/s&gt;--[[User:Alexkhansen|Alexkhansen]] 21:53, 12 March 2007 (CET)

=== Improved HTML code ===

*&lt;s&gt;Add type=&quot;text/css&quot; to every css link markups&lt;/s&gt;
*&lt;s&gt;Copyright &amp;copy 2001-2007 instead of Copyright copy 2001-2007&lt;/s&gt;
** &lt;s&gt;There was already an ampersand but the ending semicolon was missing in the lower-left of the webpages. Is that what you meant?&lt;/s&gt; [[User:Dmacks|DMacks]] 22:53, 26 January 2007 (CET)
* &lt;s&gt;Encode the url, i.e : &lt;a href=&quot;../maintainer.php?maintainer=Jeffrey%20Whitaker&quot;&gt;&lt;/s&gt;
*I would have use a definition list dl, dt, dd for the part under the pkgversion table. Ex: http://www.maxdesign.com.au/presentation/definition/dl-table-display.htm
**Seems reasonable. Also improves accessibility (logical relationship of dd to its dt vs just adjacent table cells). Can &amp;lt;div&amp;gt; still be used within dd so that we can manipulate the positioning of the full description?
***Different span classes may be defined to handle the position of various parts of description. See an example here: http://micmacfr.homeunix.org/translate.shtml.shtml
* &lt;s&gt;Display browse.php results in a table instead of a list? Might make it more readable.&lt;/s&gt;

=== PHP Code ===

*Add modularity to the code. I looked at browse.php and it is frightening. Everything is happening piece after piece without any logical workflow. I will try to rewrite it and will drop here a link for revision by others --[[User:Jimi Dini|Jimi Dini]] 17:49, 18 April 2007 (CEST)

=== Other === 
(possibly to be moved to another section)

{{Fink_Header}}

[[Category: Fink|Package Database New Redesign]]
[[Category: Fink Structure|Package Database New Redesign]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Major New Feature Plans:XMLish Source and Patch</title>
    <ns>0</ns>
    <id>1046</id>
    <revision>
      <id>11332</id>
      <parentid>11305</parentid>
      <timestamp>2007-06-11T18:40:57Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of As7We2, changed back to last version by Dmacks</comment>
      <sha1>ol4ymiwfetojtriarwgf348umvemgub</sha1>
      <text xml:space="preserve" bytes="2352">{{Fink_Header}}

All the &lt;code&gt;*Source*&lt;/code&gt;-related fields are a pain to parse, can lead to a messy .info. We could cluster all fields for a given source &quot;item&quot;. Easy to add new features (dmalloc wants stronger checksums) without making even more of a top-level fieldname mess. 

&lt;pre&gt;SourceFile: &lt;&lt;
  Source: http://whatever
  Rename: %n-%v.tar.gz
  MD5: whatever
&lt;&lt;
SourceFile2: &lt;&lt;
  Source: http://whatever
  Rename: %n-%v.tar.gz
  MD5: whatever
&lt;&lt;&lt;/pre&gt;

Easy to extend to patchfiles (for example, [http://sourceforge.net/tracker/index.php?func=detail&amp;aid=979713&amp;group_id=17203&amp;atid=367203 MD5 for patchfiles] is a longstanding request).&lt;pre&gt;PatchFile: &lt;&lt;
  Source: foo.patch
  MD5: whatever
&lt;&lt;
PatchFile2: &lt;&lt;
  Source: foo-ssl.patch
  MD5: whatever
&lt;&lt;&lt;/pre&gt;The full path to each file would be available as a %-exp and &lt;code&gt;%a&lt;/code&gt; would be abolished. That way only files that have passed the MD5 check would be usable.

===Extensions===

* &lt;i&gt;vasi:&lt;/i&gt;
:It would be nice to have a patch folder per package rather than one monster patch.
:*&lt;i&gt;dmacks:&lt;/i&gt;
::This is already possible (subdirs in %a), and I expect that way would continue to work correctly with the new syntax. One can already even cluster [.info and its .patch] in its own %n subdir.

* &lt;i&gt;drm&lt;/i&gt;: (on [http://sourceforge.net/support/tracker.php?aid=979713 Feature Requests Tracker])
:Make the application of the patches part of the default Patch field instead of an automatic action triggered by the mere presence of the patchfile field (whatever it's called).

* &lt;i&gt;vasi&amp;dmacks&lt;/i&gt;: (on #fink?)
:Have a &quot;Substitutions&quot; field in the PatchFile* that lists regexps to apply to the patchfile before applying it to the source tree. That way we can devise a clean solution to the pipefail that plagues the standard &quot;sed ... | patch&quot; approach.

* We should probably deprecate implicit source around the time we do this. That feature has not been used in 10.4T ever, or 10.3 or 10.2-gcc3.3 in at least a year. This is an annoying special case to support IMO...it means we need hacks like Source:none and Type:nosource instead of just treating &quot;no source listed means there is no Source&quot;.

{{Fink_Header}}

[[Category: Fink|New Feature Plans XMLish Source]]
[[Category: Fink_Roadmap|New Feature Plans XMLish Source]]
[[Category: Fink_Infofile_Syntax|New Feature Plans XMLish Source]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Major New Feature Plans:Patchfile Checksums</title>
    <ns>0</ns>
    <id>1646</id>
    <revision>
      <id>11340</id>
      <parentid>11306</parentid>
      <timestamp>2007-06-11T18:45:02Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <minor/>
      <comment>Reverted edit of YfyEbr, changed back to last version by Dmacks</comment>
      <sha1>ateijb4r91za3lcnfbe87n81f94hpi3</sha1>
      <text xml:space="preserve" bytes="4670">{{Fink_Header}}

==Current implementation==
===Syntax===
Automatic application via an implicit &lt;code&gt;patch -p1 &lt; %a/foo.patch&lt;/code&gt;
&lt;pre&gt;Patch: foo.patch&lt;/pre&gt;
and/or usage in explicit scripts:
&lt;pre&gt;PatchScript: sed 'some script' &lt; %a/foo.patch | patch -p1&lt;/pre&gt;
===Problems===
* No detection of corrupted patchfile.
* No protection against CVS problems that cause a .info to use the wrong revision of a .patch.
* If multiple .info use a common .patch, all maintainers of the .info have to coordinate their updates.
* In the PatchScript/sed usage, package building does not abort if the patchfile is missing or not readable(!).
* [http://sourceforge.net/tracker/?group_id=17203&amp;atid=367203&amp;func=detail&amp;aid=979713 Feature-requests tracker #979713].
* [http://sourceforge.net/tracker/?group_id=17203&amp;atid=117203&amp;func=detail&amp;aid=1204001 Bugs tracker #1204001]
* [http://thread.gmane.org/gmane.os.macosx.fink.devel/11916 Fink-devel discussion].
* [http://article.gmane.org/gmane.os.apple.fink.devel/9810 Fink-devel discussion a long time ago]

==Solution in CVS HEAD==
===Goals===
* Old fink will fail hard if it attempts to use an .info file with the new syntax if that would succeed but give an incorrect build) if a &lt;code&gt;BuildDepends:fink&lt;/code&gt; for the relevant fink version is accidentally omitted. Rather not resort to bumping to a new &lt;code&gt;InfoN&lt;/code&gt; level.
* Explicitly state the patchfile filename so that fink can check that it exists, is readable, and is the maintainer-expected contents.
* Don't need strong checksumming (patchfile is stored on same server as infofile that lists the checksum).
* Quicker implementation and easier adoption than [[Fink:Major New Feature Plans:XMLish Source and Patch|XMLish Source and Patch]].

===Syntax===
&lt;pre&gt;Patchfile: foo.patch
PatchFile-MD5: hash-string&lt;/pre&gt;
* A new &lt;code&gt;%{PatchFile}&lt;/code&gt; would expand to the full path to the patchfile (&lt;code&gt;%a/foo.patch&lt;/code&gt; in the old syntax).
* The &lt;code&gt;%{default_script}&lt;/code&gt; for &lt;code&gt;PatchScript&lt;/code&gt; contains the &lt;code&gt;patch&lt;/code&gt; command to apply it. The only change in fink behavior vs old fields is that if there was &lt;code&gt;Patch&lt;/code&gt; &lt;i&gt;and an explicit &lt;code&gt;PatchScript&lt;/code&gt;&lt;/i&gt;, will have to modify &lt;code&gt;PatchScript&lt;/code&gt; to apply the patch instead of simply converting the &lt;code&gt;Patch&lt;/code&gt; field to &lt;code&gt;PatchFile&lt;/code&gt;.
* Could expand to &lt;code&gt;PatchFile&lt;i&gt;N&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;PatchFile&lt;i&gt;N&lt;/i&gt;-MD5&lt;/code&gt; if we want to continue to support multiple patchfiles.
===Implementation===
* At the beginning of &lt;code&gt;PatchScript&lt;/code&gt;, fink checksums the file on disk, and abort immediately if it does not match. By always routing through the new percent-expansion token, we force this step to occur.
** Using %a, .info could access a file that has not been checked.
** Still allow %a for now so that .info would still work on older fink versions, but eventually abolish it at the same time the &lt;code&gt;Patch&lt;/code&gt; field is abolished.
* Also check file readability &lt;i&gt;as the user who will run the PatchScript&lt;/i&gt;.
* Fink always aborts when it encounters an unknown percent-expansion token, so we're protected against an old version of fink that silently mis-using a .info file with &lt;code&gt;%{PatchFile}&lt;/code&gt;.
* Validator enforces a BuildDepends:fink that is versioned to require a fink that supports this new field. Not ideal, but if you're building a package whose .info doesn't validate, never any guarantees it'll work anyway.
===&quot;But Dan, Why Not...?&quot;===
* Can't do implicit application of the patch because that doesn't protect against mis-use by old-fink. The explicit use is easy and many packages already use explicit patch in &lt;code&gt;PatchScript&lt;/code&gt; so there isn't a big learning curve here.
** drm and akh feel that having validator check for BDep on a version of fink that supports this new feature is enough, so we &lt;i&gt;will&lt;/i&gt; have implicit patching available.
* Can't &lt;i&gt;just&lt;/i&gt; add &lt;code&gt;PatchFile-MD5&lt;/code&gt; for use vs the existing &lt;code&gt;Patch&lt;/code&gt; because that allows leakage via %a and doesn't protect against missing patchfile when used by sed/patch. Also &lt;code&gt;Patch&lt;/code&gt; can have more than one filename listed.
* Can't also have &lt;code&gt;PatchFile-MD5&lt;/code&gt; be used for patchfiles implemented by existing &lt;code&gt;PatchScript&lt;/code&gt; because there's no foolproof way to get the filename out of that field. Also, there could be more than one filename used by the &lt;code&gt;Patch&lt;/code&gt; and &lt;code&gt;PatchScript&lt;/code&gt; fields.

{{Fink_Header}}

[[Category: Fink|New Feature Plans Patchfile Checksums]]
[[Category: Fink_Roadmap|New Feature Plans Patchfile Checksums]]
[[Category: Fink_Infofile_Syntax|New Feature Plans Patchfile Checksums]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Major New Feature Plans:Modernizing the Upgrade Process</title>
    <ns>0</ns>
    <id>2580</id>
    <revision>
      <id>11399</id>
      <parentid>11398</parentid>
      <timestamp>2007-10-24T13:42:12Z</timestamp>
      <contributor>
        <username>Dmrrsn</username>
        <id>334</id>
      </contributor>
      <comment>wikify</comment>
      <sha1>8bbh6n5d0gihmzmjdseisdwk2ykuli6</sha1>
      <text xml:space="preserve" bytes="2532">{{Fink_Header}}

Starting with fink-0.27.7, fink has a new method for handling upgrades which change the distribution.

First, each fink.info file is being given a Distribution tag, and its own Revision increment.  This way, when the underlying OS is upgrading, fink will recognize that it needs an update.

Second, to handle the problem that older finks don't recognize the Distribution tag, each fink.info for distributions 10.5 and later is being wrapped in Info4.  Old finks which do not recognize the Distribution tag also can't handle Info4, and will refuse to process those files.  Thus, fink-10.4.info with no Info4 and fink-10.5.info with an Info4 can coexist in the same finkinfo tree, and an older fink will only see the former.  Once it has updated that one, it will see the latter too and -- if on 10.5 -- will update again.

Third, fink's postinstall.pl now compares the Distribution value stored in fink.conf with the one obtained by querying the system, so that it knows if we are upgrading.  If we are upgrading, it stores the old Distribution value in a new fink.conf entry &quot;UpdateFrom&quot;, for later handling by SelfUpdate.pm.  It also may, depending on which upgrade is being performed, store a list of packages in &quot;UpdatePackages&quot;.  (These are packages, such as perl586-core during a 10.4-&gt;10.5 upgrade, which need to be installed immediately to prevent missing dependencies.)  The info and patch files for any update-packages are being supplied with fink itself, and at the end of postinstall.pl they are copied to %p/fink/dists/local/injected (where they will subsequnetly found when SelfUpdate.pm needs them.)

In a related change, fink's postinstall.pl now processes the SelfUpdateTrees information, modifying it appropriately if we are upgrading, and storing in fink.conf.  (If SelfUpdateTrees is not present but the old variable SelfUpdateCVSTrees _is_ present, it uses the latter to obtain information, but stores the information in the new variable and removes the old variable.)

The presence of an &quot;UpdateFrom&quot; variable indicates to fink selfupdate-finish that there is work to be done.  However, this has not yet been implemented.

The one part of the work in SelfUpdate.pm which _has_ been implemented is installing the &quot;UpdatePackages&quot; -- these are installed along with &quot;essential&quot; and &quot;important&quot; packages during fink selfupdate-finish.

{{Fink_Header}}

[[Category: Fink|New Feature Plans Modernizing the Upgrade Process]]
[[Category: Fink_Roadmap|New Feature Plans Modernizing the Upgrade Process]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:pangocairo testing</title>
    <ns>0</ns>
    <id>2584</id>
    <revision>
      <id>11505</id>
      <parentid>11465</parentid>
      <timestamp>2008-09-28T18:56:21Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <comment>cleanup</comment>
      <sha1>1ow7uk0tkoqbrysaxsuxu8h6tub0gmb</sha1>
      <text xml:space="preserve" bytes="7781">== Done! ==

The pangocairo branch merged back into the &quot;unstable&quot; tree on 2008-07-15 and most of it was soon pushed into the &quot;stable&quot; tree. The CVS branch was frozen. The following information is retained for historical interest only.

== What's this all about? ==

The goal of the &quot;pangocairo&quot; project is to upgrade fink's packages to the level of GNOME 2.20.

For the past ''many'' months, several fink developers have been working on
upgrading gtk+2 and related packages. This task requires making
simultaneous version updates, changes in dependencies, and compile-script adjustments to all
packages that use gtk+2. For various reasons, it cannot be done in a
few packages at a time, nor are packages likely to work correctly if
they use a mixture of pangocairo and non-pangocairo libraries. Thus, the whole &quot;unstable&quot; tree will be converted to pangocairo all at once. After this somewhat monolithic upgrade, updates of individual packages will be possible when they become available, allowing fink to stay more current with upstream releases.

The major change, apart from new versions, is a switch from using the freetype2 from X11 to using fink's freetype219 package. That switch has led to a change from using the pango1-xft2 packages to pango1-xft2-ft219. The different variants of the freetype* and pango1-* packages are not compatible with each other, so one cannot reliably use &quot;some of each&quot; and most packages require some adjustment to use the &quot;correct&quot; (i.e., self-consistent) one.

== What's the status? ==

All core GNOME libraries (glib2, gtk+2, atk1, libgnome*, etc.) have been updated and seem to build and
work. All mid-level libraries have been updated and also seem to
build. We think most other packages have been adjusted so that they
should be compileable. Thus, the pangocairo project is ready for
testing.

== Can I help? ==

We'd love any help anyone is willing and able to provide! The more help the better! This is for testing of the pangocairo changes, so please be prepared
for breakage and be prepared to file good bug reports about problems
you have. This is not for users who are new to fink or for users who
only want &quot;the latest and greatest gtk+&quot; but don't want to help make
it work. This testing will likely require many hours of compiling from
source (though as usual fink will handle doing it).

You should not attempt this testing on a production system (the packages
may be more prone to compile-time and run-time problems even than the
&quot;unstable&quot; branch). Switching to the pangocairo testing branch is
irreversible: there is no way, short of wiping your whole fink
installation and reinstalling from scratch, to get back to the normal
public fink distro. However, once testing is complete, the pangocairo
branch will be merged back into the public distro and you will be able
to switch back at that point.

== How do I get started? ==

You will need fink on any currently supported system (OS X 10.4 or 10.5, on a PowerPC or Intel Mac) with a recent version
of the developer tools (XCode) installed for your system. To activate the pangocairo distro:

1. Make sure you have the &quot;unstable&quot; trees enabled.
2. You must be using the &quot;CVS&quot; selfupdate method:

 fink selfupdate-cvs

3. Switch to the pangocairo branch of packages. As non-root user:

 cd /sw/fink/dists
 cvs update -rpangocairo-branch
 fink index

You're all set! Starting at this point, fink will see the packages in the pangocairo branch instead of the public one, and 'fink selfupdate' will automatically continue to use this branch.

Please use the 'fink' command to test building packages, and test running them. All
packages that have been changed have higher versions or revisions, so
'fink update' or 'fink install' can be used to get the pangocairo form of a package. As usual, 'fink list -ot' to see what packages have new versions available.

We think that updating a package to the one available in the pangocairo
branch will trigger updates of all its dependencies and give a working
program or library. However, once something is updated to pangocairo,
things that depend on it will possibly not work correctly until they
too have been updated to the one in pangocairo. Using just
'fink update-all' to upgrade everything at once is prone to failure
due to the number of packages and complexity of the dependency trees
being updated.  (Using 'fink update-all' repeatedly, until no further
updates are necessary, might work.)

== Anything else I should know? ==
* This is source-only. There are no binaries available at this time for any package that is new or updated in pangocairo. Among other things, we're trying to catch build issues.
* This is not the fully supported fink distro. The online package database (http://pdb.finkproject.org) does not see the pangocairo branch and the sources are not mirrored by fink's master-mirrors server pool. You might want to run 'fink configure' and change your mirror selection to use &quot;Master&quot; last.

== Provide feedback! ==

Of particular interest is the ease building various packages, especially...&quot;whatever you care about&quot;.

Let us know how far you get. What packages did not build (be specific
for what fails, not for what package you requested that led to a
dependency failing)? If you were able to figure out what was wrong (a
missing dependency, etc.) please let us know what you did so we don't
have to re-investigate and re-solve what you already know. After this round of testing, the whole pangocairo package set will be merged back into the main public distribution--all users will suddenly have them without doing anything other than a normal &quot;selfupdate&quot;. An important goal of this round of testing is to see how well the upgrading/building of packages works on systems that started out with the currently-public unstable distro.

There are a very few packages that are not yet present (or are only present at slightly older versions) than in the public distro, especially if they were changed in public very recently (every change needs to be imported into pangocairo manually). If you find one (try &quot;fink list -Nt&quot;), please let us know.

If you are a
maintainer, look at the changes that were made in your packages. The changes needed for pangocairo are will need to be retained in the packages
into the future. Also, the tricks used are often general enough that they can be used when writing new packages. The tweaks needed now will be required for all future packages that
use gtk+2, often even to get as far as compiling. When these packages become public, we will write a list of common flags, variables, and other tricks that are required to use the new gtk+2. Also, there are lots of specialty programs in fink that
very few users use, so they have likely not been well tested. If
nobody complains, everyone thinks it works and unmentioned problems
will never get fixed.

The fink-devel@lists.sourceforge.net mailing list is a good place to discuss this project. you don't need to be subscribed to post (though it would be helpful if you do for a little while so that you can help test proposed solutions to problems you find, etc.). If you are filing a bug report, remember ''details'' (useless bug reports will be ignored): feel free to include a ''short'' exerpt of the failure or a link to a complete build log). We also welcome solutions to problems and technical discussion of the solutions.

== Thanks! ==

Thanks in advance for any help you are willing and able to provide.
After a (very) few weeks, the pangocairo branch will be merged into
the public fink distribution. At that point, it will become easy to
switch back to that public distro with no rebuilding required beyond the pangocairo you have from the branch.

[[Category: Fink]]
[[Category: Fink Packaging]]
[[Category: Gnome]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:0.29 new features</title>
    <ns>0</ns>
    <id>2585</id>
    <revision>
      <id>11481</id>
      <timestamp>2008-06-24T00:11:34Z</timestamp>
      <contributor>
        <username>Dmrrsn</username>
        <id>334</id>
      </contributor>
      <comment>new page</comment>
      <sha1>qzn5ngjctsubv1w4cv8digibs3eulq5</sha1>
      <text xml:space="preserve" bytes="223">{{Fink_Header}}

===New features in fink 0.29===

* separate Restrictive packages

===Bug fixes in fink 0.29===

* 

{{Fink_Header}}

[[Category: Fink|Roadmap 0.29 New Features]]
[[Category: Fink_Roadmap|0.29 New Features]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:BinDists</title>
    <ns>0</ns>
    <id>2587</id>
    <revision>
      <id>11498</id>
      <parentid>11495</parentid>
      <timestamp>2008-07-10T12:59:02Z</timestamp>
      <contributor>
        <username>Dmrrsn</username>
        <id>334</id>
      </contributor>
      <comment>more about VERSION</comment>
      <sha1>6it4qkdrhrxf2deq9ml89qb1vzq0n90</sha1>
      <text xml:space="preserve" bytes="2496">{{Fink_Header}}

Periodically, Fink releases a &quot;binary distribution&quot; or &quot;point distribution&quot;, traditionally numbered according to the Darwin version number.  This consists of several things:
*a source release from which fink can be bootstrapped, which includes all of the packages in the distribution (such as fink-full-10.5-0.9.0.tar.gz)
*a release of a tarball of all the .info files from the distribution (such as dists-10.5-0.9.0.tar.gz)
*periodic subsequent releases of tarballs of .info files from updates to the distribution (such as dists-10.5-0.9.0.1.tar.gz)
*binary .deb files for pre-compiled versions of all of the packages in the distribution, for all currently-supported architectures
*periodic updates to the set of binary .deb files, as needed (in conjunction with updates such as dists-10.5-0.9.0.1.tar.gz)
*binary installers for the distribution (such as Fink-0.9.0-Intel-Installer.dmg and Fink-0.9.0-PowerPC-Installer.dmg
 
Fink makes pre-compiled versions of its &quot;stable&quot; packages available for automatic installation (when the package license permits).  Many of these packages were released under the Gnu Public License (GPL), and the Fink project takes its obligations under the GPL quite seriously.  See [[Fink:ArchiveBrowser|Archive Browser]] for more information.

Here are a few tips for the Fink Developer team:
* the set of .info files in a distribution should be tagged with a cvs tag such as release_0_9_0
* the set of .info files in the updates to a distribution should be tagged with a cvs tag such as release_0_9_0_1; these updates should be cumulative, so that release_0_9_0_2 contains everything from release_0_9_0_1 plus additional updates.  (The pdb must be configured to grab both of these cvs tags and get fink to merge their contents when indexing them.)
* note that any of these tagged distributions must include the files inject.pl ,DISTRIBUTION, VERSION, README, and stamp-cvs-live, and must also include at least one .info file (in the appropriate heierarchy).  The tarball-rolling script scripts/srcdist/dist-module.pl will replace stamp-cvs-live with stamp-rel-$version.
* the VERSION file in an update release such as release_0_9_0_1 should still contain the string 0.9.0-cvs, not reflecting the update.  The tarball-rolling script scripts/srcdist/dist-module.pl will insert the correct value for users obtaining (and injecting) the tarball.

{{Fink_Header}}

[[Category: Fink|BInary Distributions]]
[[Category: Fink Structure|Binary Distributions]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:default freetype and pango</title>
    <ns>0</ns>
    <id>2588</id>
    <revision>
      <id>11606</id>
      <parentid>11510</parentid>
      <timestamp>2009-09-01T14:03:16Z</timestamp>
      <contributor>
        <username>Nieder</username>
        <id>386</id>
      </contributor>
      <comment>fix typo in pango1-xft2-ft219 %v</comment>
      <sha1>byecv6jglk0bldn6p2hu4h8ulk0cvj0</sha1>
      <text xml:space="preserve" bytes="3474">Our gnome-related library packages in the unstable trees are being
migrated to the latest releases (gnome2.24 and associated
dependencies). First, this will obviously involve lots of packages
being updated, so if something doesn't build, don't bother reporting   
it until after selfupdating, but then please check if it's been
reported and *do* report if not. But of course don't bother reporting
without specific information about the package and the actual full
error messages.
  
I'm working &quot;up the tree&quot; starting at glib2, ft219, and RangerRick
bringing along the cairo world and other stuff of his. We're cascading
the dependencies to keep users from getting too much of a mixed bag of
gnome versions (i.e., the new %v of atk1 will require the latest %v of
glib2, not just the minimum glib2 that it claims to accept).

I will test some end packages maintained by others and make
adjustments if I find build problems for the new gnome libs, but don't
plan to do a full overhaul of the whole distro to cascade the latest
dependencies or to remove no-longer-needed flags. In general, the new
stuff will reduce the dependency tree, not add new inherited deps as
far as I can tell.

One major change is that freetype219 now also makes its headers and
other compile-time files available in the &quot;default&quot; locations.  If one
sets the freetype219* dependencies to be &gt;=2.3.7-4, one can remove the 
-I, -L, and PKG_CONFIG_PATH settings for %p/lib/freetype219* paths
that had previously been required. The install_name and actual
location of the lib is the same (buried) in freetype219-shlibs, so
there is no foward/backward compatibility problem at runtime. The
headers and especially the .la are also still present in the buried
location, so previously-built packages that somehow encoded those 
paths are still okay too (especially .la dependency_libs). Unless we  
have some other reason to change install_name (and therefore create a 
new headers package-name), this buried thing will always need to be   
there for compatibility. At that time, we can cascade dependency
changes on it and put the actual things *only* in the default paths.

The old freetype2 (and -hinting) package is completely unused as far  
as I can tell. I looked at updating it to the latest, now that the new
version is it's apparently compatible again), but the cascading became
a mess (on the scale of the pangocairo project, involving nearly every
package that uses ft, not just the main library set) to avoid mixing &amp;
matching the different freetype locations and potentially conflicting
package combinations of them. Didn't see the need, since pangocairo
got us completely converted to ft219 dependencies.

pango1-xft2-ft219-dev will also (soon, once I make sure we got it 
&quot;right&quot; in freetype219:) make itself available in the default 
locations and we can stop using special path flags for it, while  
retaining its buried files as well for compatibility.

I do not understand fontconfig, so will leave it to RangerRick (its
maintainer) and others to figure out whether it can be unburied, or   
whether there are substantial numbers of packages that are expecting  
&quot;something else&quot; to be visible in the default paths.

Important dependencies as part of the upgrade:
*freetype219 (and freetype219-shlibs) &gt;= 2.3.7-4
*pkgconfig &gt;= 0.23
*pango1-xft2-ft219-dev (and pango1-xft2-ft219-shlibs and pango1-xft2-ft219) &gt;= 1.22.0-3

[[Category: Fink]]
[[Category: Fink Packaging]]
[[Category: Gnome]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Packaging:x86 64</title>
    <ns>0</ns>
    <id>2593</id>
    <revision>
      <id>11851</id>
      <parentid>11776</parentid>
      <timestamp>2010-05-06T20:23:50Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <minor/>
      <comment>Removing  {{Fink_Header}}</comment>
      <sha1>too2fmshavbfyz53oqznihtqvx2s36m</sha1>
      <text xml:space="preserve" bytes="3415">This page contains information about building packages for the x86_64 architecture.

==Fink and x86_64==

Fink allows users to choose either a 32- or 64-bit Fink installation on 10.6 systems with 64-bit capable processors. Most packages do not need to be patched to support 64-bit systems because Finks adds /sw/var/lib/fink/path-prefix-10.6 to the PATH environmental variable before a package is built. This directory contains aliases for commonly used compiler driver names such as cc, gcc, c++, g++, and adds the appropriate -arch flag when invoking them: -arch i386 for 32-bit Fink, -arch x86_64 for 64-bit Fink. Note that -arch is an Apple GCC only flag.

This should be enough for most build systems. However, there are some caveats.

==Autoconf-based build systems==

Autoconf-based systems use the config.guess script to identify the system type; the resulting identification is a triplet cpu-vendor-os. On Mac OS X, these triplets follow the format cpu-apple-darwinX, where cpu is powerpc, i386, or x86_64, and X is the major version outputted by uname -r. Valid examples are i386-apple-darwin9 and x86_64-apple-darwin10.

Depending on the verifications performed by the configure script, it might be necessary to specify on which system type the resulting programs or libraries are meant to run. This is the purpose of the &lt;tt&gt;--host&lt;/tt&gt;=system_type parameter. Also, &lt;tt&gt;--build&lt;/tt&gt; should be defined whenever &lt;tt&gt;--host&lt;/tt&gt; is.

In order to set &lt;tt&gt;--build&lt;/tt&gt;, &lt;tt&gt;--host&lt;/tt&gt; in &lt;tt&gt;ConfigureParams&lt;/tt&gt;, use:

&lt;tt&gt;ConfigureParams: --build=%m-apple-darwin`uname -r | cut -d. -f1` --host=%m-apple-darwin`uname -r | cut -d. -f1`&lt;/tt&gt;

or the equivalent in &lt;tt&gt;CompileScript&lt;/tt&gt;.

==Carbon==

The [http://developer.apple.com/carbon Carbon API] contains libraries that are 32-bit only as well as libraries that are both 32- and 64-bit. Packages that build against Carbon libraries might need to be restricted to powerpc and i386 architectures (i.e., ''not'' x86_64) if they use functions that are only available in 32-bit format.

==The LP64 data model==

Mac OS X uses the LP64 data model, the same used in Linux. In LP64, &lt;tt&gt;int&lt;/tt&gt; is a 32-bit data type, whilst &lt;tt&gt;long&lt;/tt&gt;, &lt;tt&gt;long long&lt;/tt&gt;, and &lt;tt&gt;size_t&lt;/tt&gt; are 64-bit data types. Pointers are 64-bit and cannot be stored in &lt;tt&gt;int&lt;/tt&gt; variables. When a program is being compiled for x86_64, GCC automatically defines the &lt;tt&gt;__LP64__&lt;/tt&gt; macro — use it in case you need conditional compilation for that architecture. More information is available in [http://developer.apple.com/mac/library/documentation/Darwin/Conceptual/64bitPorting/index.html Apple's 64-bit Transition Guide].

==-mdynamic-no-pic==

In x86_64, GCC's -mdynamic-no-pic flag, which allowed applications not to be position-independent (PIC), is a no operation. This means that in x86_64 code must always be position-independent. See http://lists.apple.com/archives/Darwin-dev/2009/Dec/msg00035.html

==Xcode projects==

The ARCHS build setting can be used to specify a target architecture for an Xcode project as follows:

 xcodebuild ARCHS=target_architecture 

Valid examples of &lt;tt&gt;target_architecture&lt;/tt&gt; include &lt;tt&gt;x86_64&lt;/tt&gt;, &lt;tt&gt;i386&lt;/tt&gt;, &lt;tt&gt;ppc&lt;/tt&gt;. Note that on PowerPC machines Fink expands &lt;tt&gt;%m&lt;/tt&gt; as &lt;tt&gt;powerpc&lt;/tt&gt; instead of the &lt;tt&gt;ppc&lt;/tt&gt; value supported by Xcode.

[[Category: Fink|Packaging:x86_64]]
[[Category: Fink Packaging|x86_64]]</text>
    </revision>
  </page>
  <page>
    <title>The Fink Wiki:Roadmap:0.24 backports</title>
    <ns>4</ns>
    <id>2008</id>
    <revision>
      <id>7418</id>
      <timestamp>2006-04-05T22:38:30Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>3u32p8oi8gxi0c0csoojexnohk2f1bh</sha1>
      <text xml:space="preserve" bytes="177">{{Fink_Header}}

* &lt;s&gt;BuildDep swapping&lt;/s&gt; '''done'''

* &lt;s&gt;ParentEssential fix&lt;/s&gt; '''done'''

{{Fink_Header}}

[[Category: Fink|Roadmap 0.24]]
[[Category: Fink_Roadmap|0.24]]</text>
    </revision>
  </page>
  <page>
    <title>The Fink Wiki:Roadmap:0.25 blockers</title>
    <ns>4</ns>
    <id>2010</id>
    <revision>
      <id>7420</id>
      <timestamp>2006-07-12T21:15:46Z</timestamp>
      <contributor>
        <username>Dmacks</username>
        <id>172</id>
      </contributor>
      <comment>progress bar done</comment>
      <sha1>i8nfcob2f7kunsn9otwt0myd1eun94y</sha1>
      <text xml:space="preserve" bytes="3066">{{Fink_Header}}

See also the [https://sourceforge.net/tracker/?atid=317203&amp;group_id=17203 patch tracker] and [https://sourceforge.net/tracker/?atid=117203&amp;group_id=17203 bug tracker]

=== Todo ===

* Update docs: [[0.25_new_documentation_needs]]
* Shlibs needs work: '''AutoShlibs can wait'''
** unpredictable depends?
** [https://sourceforge.net/tracker/index.php?func=detail&amp;aid=1249916&amp;group_id=17203&amp;atid=117203 read-from-debs] issue 
* cirdan, drm: dist up
* [http://sourceforge.net/tracker/index.php?func=detail&amp;aid=998741&amp;group_id=17203&amp;atid=317203 Module::Build] '''can wait'''
* prompt for confirmation before [http://thread.gmane.org/gmane.os.macosx.fink.devel/10863 upgrading] 'fink reinstall' to 'fink build'? '''don't care?'''
* test FinkCommander patch for incremental indexing
* x11 user vs. sdk issue

=== Done ===

* reevaluate fink --tree=stable list?
* Shlibs index on-demand
* Prohibit RFC-822 for Info3
* Validator:
** Complain about [https://sourceforge.net/tracker/index.php?func=detail&amp;aid=702802&amp;group_id=17203&amp;atid=367203 &gt; and &lt; in dependency versioning]  (in .info).
** dmacks: complete overhaul of .deb (val-unpack branch)
** InfoN validator patch '''vasi fixed it the way he likes it'''
* RangerRick: 'fink build foo-1.0-1' where a .deb exists in the bindist for foo-1.0-1 and UseBinaryDist is true should build locally, not fetch from the bindist.
* Info3: allow comment lines in pkglist fields?
&lt;pre&gt;Depends: &lt;&lt;
  #foo-shlibs,   foo is static-only right now
  bar-shlibs
&lt;&lt;&lt;/pre&gt;
* &lt;code&gt;chown -h&lt;/code&gt; functionality during --build-as-nobody (use Command:chowname_hr?)
* dmacks: overhaul buildlocks to go away more automatically and have a cleaner cleanup
** &lt;i&gt;vasi&lt;/i&gt;: just lock a file to indicate &quot;this buildlock is in use&quot;, and then test if it's locked to see if it's safe to remove? (Note that the file we lock should NOT be part of the buildlock package--what if another Fink tries to cleanup stale locks just between installing it and locking it? It would have to be a separate file in %p/var or something.)
** &lt;i&gt;dmacks&lt;/i&gt;: Ayup, works well. Good idea!
entation).
** Automatically do cleanup when embarking on a package installation or removal
* dmacks: buildlock destruction
** Checking via lock_wait and PreRm
** Removal on build failure via Fink::Finally
* remove line-number in SysState error
* BuildConflicts breakage
* chown_hR is still leaving nobody-owned links.
* progress bar during indexing (&quot;.&quot; every 100 .info processed or every 10% of set of .info processed?) —newbies to HEAD have complained &lt;code&gt;index -f&lt;/code&gt; &quot;has hung&quot;...can take up to 5 minutes?

=== Wontfix ===

* dmacks: abolish implicit &lt;code&gt;Source&lt;/code&gt;? '''Not worth doing until [[XMLish Source and Patch]]'''
* Validator:
** Enforcement of requiring Depends:base-files if install any profile.d scripts (in .deb)? (see http://thread.gmane.org/gmane.os.macosx.fink.devel/11210 fink-devel]) '''not sure we want to do this, so not a blocker'''

{{Fink_Header}}

[[Category: Fink|Roadmap 0.25 Blockers]]
[[Category: Fink_Roadmap|0.25 Blockers]]</text>
    </revision>
  </page>
  <page>
    <title>The Fink Wiki:Roadmap:0.25 new documentation needs</title>
    <ns>4</ns>
    <id>2011</id>
    <revision>
      <id>7421</id>
      <timestamp>2006-04-05T22:39:27Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>hpdu2yniapygtcfdeuw4o1njjg23uk7</sha1>
      <text xml:space="preserve" bytes="999">{{Fink_Header}}

See also  [[Fink:Roadmap:0.25 new features|0.25 new features]]

* Info3

* 'fink cleanup' (in fink.8 but need to add to web docs)

* AutoShlibs

* fast scanpackages with apt-ftparchive, including AutoScanpackages

* SkipPrompts

* --maintainer (in fink.8 but need to add to web docs)

* remove old 'fink list --tree=foo' documentation, add 'fink --trees=foo,bar command'.

* new DocFiles/Files abilities
** Conditionals
** subdirs/recursion
** Mention the &lt;i&gt;allowed&lt;/i&gt; wildcards that are used and useful (&lt;b&gt;* ?&lt;/b&gt; (any others--curly-braces or square brackets?)) so we don't accidentally break useful existing functionality...conditionals interferes with some uses of curly-braces
** Mention backtick scripts?

* --log-output and --logfile (in fink.8 but need to add to web docs)

* 'fink plugins' lists checksum algorithms

{{Fink_Header}}

[[Category: Fink|Roadmap 0.25 Documentation]]
[[Category: Fink_Roadmap|0.25 Documentation]]
[[Category: Fink_Documentation|Roadmap 0.25]]</text>
    </revision>
  </page>
  <page>
    <title>The Fink Wiki:Roadmap:0.26 goals</title>
    <ns>4</ns>
    <id>2012</id>
    <revision>
      <id>7422</id>
      <timestamp>2006-04-05T22:40:02Z</timestamp>
      <contributor>
        <username>RangerRick</username>
        <id>173</id>
      </contributor>
      <minor/>
      <sha1>laiy6d5pdgd2hvjwfj2gdk2ar7yi6rl</sha1>
      <text xml:space="preserve" bytes="6512">{{Fink_Header}}

* [[Fink:Major New Feature Plans:InheritedBuildDepends|InheritedBuildDepends]]

* [[Fink:Major New Feature Plans:XMLish Source and Patch|new Source blocks]]

* more indexing work
** refactor into &lt;code&gt;Indexer.pm&lt;/code&gt; and possibly other modules
** load-on-demand
** version the DB
** forget_packages should have better options

* dep-engine refactoring work?

* External API (so scripts can 'use Fink') &lt;b&gt;'use Fink' works in CVS&lt;/b&gt;

* optimizations
** auto-split PkgVersion?

* bug fixing!

* dist-upgrade?

* automatically detect users' location, even for binary install

* [http://sourceforge.net/tracker/index.php?func=detail&amp;aid=642075&amp;group_id=17203&amp;atid=367203 rethink passwd]

* [http://sourceforge.net/tracker/?func=detail&amp;aid=992093&amp;group_id=17203&amp;atid=117203 Check version dependencies during package upgrade] to avoid (or at least minimize) dep breakage. If foo-dev:depends:foo(=%v-%r), upgrading foo should (but does not currently) trigger an upgrade of foo-dev. 
** Moving discussion to bug.

* New license that permits source mirroring but not binary distribution. (see [http://article.gmane.org/gmane.os.apple.fink.devel/10927 openssl-linked packages: need new license type?] on fink-devel)

* launchd support. We may '''have''' to get this done before 10.5, since the old StartupItems mechanism is deprecated.
** Modify daemonic so that it turns DaemonicFile/Name into launchd plists on 10.4 and above. (make sure 'daemonic install' checks for and removes an existing StartupItems if it installs a LaunchAgents) 
** Add a new field for explicitly specifying launchd plist files to be placed in /Library/LaunchAgents (or LaunchDaemons? what's the difference?). This should also automate calling launchctl load and unload in PostInst and PreRm. (What about backwards compatibility, what would happen on 10.3?)
*** LaunchDaemons start up on system boot.  LaunchAgents start up for each user when that user logs in (at the console only, probably) &amp;mdash;[[User:Msachs|msachs]]
* make AutoScanpackages default to true (requires that an apt-ftparchive binary be available as part of the default installation).

* Obsoletes field, to make it easy to get rid of unneeded packages.
** Eg: foo and foo-ssl exist. Now foo decides to link against the system's SSL, so there's no more need for foo-ssl. In foo.info, we add Obsoletes: foo-ssl 1.2.3-2 . Fink automagically creates a package foo-ssl 1.2.3-2 that is just a dummy depending on the current version of foo, so that foo-ssl users will get foo installed. Fink cleanup could later remove any dummy packages that are left installed but no longer a Depends of any installed package.
** This requires some indexer support.
** The token that marks a package as obsolete needs to be in the .deb somehow. Maybe have the Description be &quot;[OBSOLETE: replaced by %N]&quot; where %N is package that contains this Obsolete: field, not the obsoleted packge. Makes it easy for a semi-clueful user to see what's going on. We already use &lt;code&gt;Description=~/^\[/&lt;/code&gt; only for special packages with well-established text, so no off-target effects.

* Try to conditionalize more fields
** AppBundles, DocFiles, JarFiles, Files, ConfFiles, InfoDocs
** Source and Patch (maybe wait for [[Fink:Major New Feature Plans:XMLish Source and Patch|new Source blocks]])
** SplitOff?
** Set*--probably trivial to do (piggyback on the ConfigureParams parser)


* Create command-line tools for things fink does in PostInst and other maintainer scripts. Eg: fink-update-pod, fink-app-bundles.
** Currently, fink inserts bash code in the PostInst, so when you upgrade fink you still have old .debs around with old code.
** If the PostInst just said 'fink-update-pod' (with any reasonable arguments) then the debs would automagically use the new code.
** Packages that use scrollkeeper and gconf would benefit here, since it's a pain to put the various multiline bits (that could change with future scrollkeeper or gconf versions and makes validation checks for their presence easier. I think at a minimum the same args passed to PostInst plus some package details would be good as generic interface for this kind of thing...simplifies the migration and leaves us completely open for future enhancements.
** Note that we'd have to automatically add a Depends: fink (&gt;= X), where X is the earliest version of Fink that provides all the command-line scripts needed for this package's Postinst/Prerm.

* A 'fink env' command. Use case is 'eval `fink env foo`', which sets up the environment in the current shell as if it would be used to build foo. This allows foo to be built manually.
** &lt;code&gt;eval `fink dumpinfo -fenv foo | grep =`&lt;/code&gt; (works now I think?)
** &lt;i&gt;dmacks&lt;/i&gt;: I see on #fink you also mentioned installing deps; good idea! Something like:&lt;code&gt;fink install-dependencies [--build] foo&lt;/code&gt; or &lt;code&gt;fink install-[build-]dependencies foo&lt;/code&gt; (just runtime, or optionally also build-time deps/cons for a given pkg).

* consider copying dports trace-mode: conditional on a cmdline option, use DYLD_INSERT to monitor what files are opened during a build...then we can check for missing deps? Would be necessary to use FORCE_FLAT, which could be dangerous.
** After discussion with pogma and msacshs, it '''appears''' that FORCE_FLAT now can cause the wrong symbol to be used (rather than crashes, as under 10.2). In this case, we have to be much more careful to ensure that this doesn't cause data corruption.

* Begin splitting PkgVersion up into reasonable size chunks. Splitting shall be on functional borders, ie: where there already is a distinction made by fink between different groups of PkgVersions.
*# Split up Source (package from .info file) vs. Dummy (from Status or VirtPackage)
*## Create PV::Source which @ISA PV. 
*##* There should be a method is_source() which returns true for PV::Source only.
*##* '''Temporarily''', so that PV's don't suddenly lose the Source methods, make a PV::Dummy which @ISA PV::Source, but returns false for is_source().
*## Make creators of PVs use the new correct constructors in different packages.
*## Move methods to PV::Source one-by-one
*## Modify other classes to respect whether a package is a Source or not (eg: real_install)
*## Eventually, once everything is ready for it, remove PV::Dummy. Can remove it bit-by-bit by overriding methods with die &quot;Not implemented!&quot;. 
*# Split up Parent vs. SplitOff

{{Fink_Header}}

[[Category: Fink|Roadmap 0.26 Goals]]
[[Category: Fink_Roadmap|0.26 Goals]]</text>
    </revision>
  </page>
  <page>
    <title>The Fink Wiki:Releases</title>
    <ns>4</ns>
    <id>2099</id>
    <revision>
      <id>8328</id>
      <timestamp>2006-07-21T15:09:24Z</timestamp>
      <contributor>
        <username>Alexkhansen</username>
        <id>167</id>
      </contributor>
      <sha1>n3mpgv991ntm4czutko3fufbrqk3971</sha1>
      <text xml:space="preserve" bytes="1713">{{Fink_Header}}

(newest first)

== 0.24.24 (Norma [The Carpenter's Square]) ==

* Released on 2006-07-20

== 0.24.23 (Apus) ==

* Released on 2006-07-03

== 0.24.22 (Lupus) ==

* Released on 2006-06-27

== 0.24.21 (Boötes) ==

* Released on 2006-06-23

== 0.24.20 ==

* Released on 2006-06-23

== 0.24.19 ==

* Released on 2006-06-23

  13:47 &amp;lt;drm&amp;gt; akh: hold off on the star/constellation business.. .19 is about to be replaced by .20 :/
  13:47 &amp;lt;akh&amp;gt; drm:  OK--hadn't actually picked one yet. :-)

== 0.24.18 (Circinus) ==

* Released on 2006-06-12

== 0.24.17 (Musca) ==

* Released on 2006-05-31

== 0.24.16 (Antlia) ==

* Released on 2006-05-30

== 0.24.15 (Hydra) ==

* Released on 2006-03-27

== 0.24.14 (Pyxis) ==

* Released on 2006-03-21

  21:08 &amp;lt;dmacks&amp;gt; akh: 0.24.13 was still-born...okay to reuse its contellation for .14 if you want:)

== 0.24.13 (Pyxis) ==

* Never released to the public

== 0.24.12 (Vulpecula) ==

* Released on 2006-02-21

== 0.24.11 (Lacerta) ==

* Released on 2005-11-17

== 0.24.10 (Cameloparadalis) ==

* Released on 2005-08-25

== 0.24.9 (Pavo) ==

* Released on 2005-08-15

== 0.24.8 (Coma Berenices) ==

* Released on 2005-07-28

== 0.24.7 (Carina) ==

* Released on 2005-06-04

This released was made specifically for EOL'ing 10.2 support.

== 0.24.6 (Canes Venatici) ==

* Released on 2005-05-11

== 0.24.5 (Crux Austrialis) ==

* Released on 2005-04-29

== 0.24.4 (Ophiuchus) ==

* Released on 2005-04-20

== 0.24.3 (Cassiopeia) ==

* Released on 2005-04-12

== 0.24.2 (Draco) ==

* Released on 2005-03-25

== 0.24.1 (Ursa Major) == 

* Released on 2005-02-28

== 0.24.0 (Boilermaker) ==

* Released on 2005-02-24

{{Fink_Header}}

[[Category:Fink]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:0.31 new features</title>
    <ns>0</ns>
    <id>2623</id>
    <revision>
      <id>12041</id>
      <parentid>12032</parentid>
      <timestamp>2012-01-05T14:10:53Z</timestamp>
      <contributor>
        <username>Nieder</username>
        <id>386</id>
      </contributor>
      <comment>0.31.6 HTTP proxy fix</comment>
      <sha1>ez0zy9ah2ysvmr0tw625xpjxxef62m5</sha1>
      <text xml:space="preserve" bytes="451">{{Fink_Header}}

===New features in fink 0.31===

* Support for OS X 10.7 (Lion)
* Default support for building with multiple processors (UseMaxBuildJobs field)

===Bug fixes in fink 0.31===

* Recognize Growl.app v1.3 that is available from the App store
* Fix compiler usage on 10.6 with Xcode 4.2
* Fix for HTTP proxies with cvs selfupdates

{{Fink_Header}}

[[Category: Fink|Roadmap 0.31 New Features]]
[[Category: Fink_Roadmap|0.31 New Features]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:0.32 new features</title>
    <ns>0</ns>
    <id>2627</id>
    <revision>
      <id>12058</id>
      <parentid>12054</parentid>
      <timestamp>2012-04-08T20:01:23Z</timestamp>
      <contributor>
        <username>Nieder</username>
        <id>386</id>
      </contributor>
      <comment>Xcode Command Line Tools</comment>
      <sha1>1bmbkupevubhvt748q8l29360rkbkwp</sha1>
      <text xml:space="preserve" bytes="547">{{Fink_Header}}

===New features in fink 0.32===

* Support for RuntimeDepends field
* Automatic xz archive support in Source fields
* Allow bootstrapping on systems with the Xcode Command Line Tools only

===Bug fixes in fink 0.32===

* Disallow bootstrapping on OS X 10.4 which has not been supported since 0.31.
* Fix detection for Xcode 4.3 in /Developers
* Allow Xcode 4.3 to be installed in arbitrary locations (not just /Developers)

{{Fink_Header}}

[[Category: Fink|Roadmap 0.32 New Features]]
[[Category: Fink_Roadmap|0.32 New Features]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:0.33 new features</title>
    <ns>0</ns>
    <id>2630</id>
    <revision>
      <id>12072</id>
      <parentid>12066</parentid>
      <timestamp>2012-06-20T17:57:50Z</timestamp>
      <contributor>
        <username>Nieder</username>
        <id>386</id>
      </contributor>
      <comment>0.33.2 release</comment>
      <sha1>sxjknkreoq0w8gub9yynzw0r50ji8rl</sha1>
      <text xml:space="preserve" bytes="526">{{Fink_Header}}

===New features in fink 0.33===

* Make fink use --build-as-nobody by default
** Maintainers: use &lt;code&gt;BuildAsNobody: false&lt;/code&gt; in .info to override
** End Users: use &lt;code&gt;--no-build-as-nobody&lt;/code&gt; at build time to override
* %p/Library/Python is now a legal directory.

===Bug fixes in fink 0.33===

* Avoid coreutils-default (id) interference
* Better Java detection to properly set JAVA_HOME

{{Fink_Header}}

[[Category: Fink|Roadmap 0.33 New Features]]
[[Category: Fink_Roadmap|0.33 New Features]]</text>
    </revision>
  </page>
  <page>
    <title>Fink:Roadmap:0.34 new features</title>
    <ns>0</ns>
    <id>2631</id>
    <revision>
      <id>12083</id>
      <parentid>12080</parentid>
      <timestamp>2012-09-26T02:16:14Z</timestamp>
      <contributor>
        <username>Nieder</username>
        <id>386</id>
      </contributor>
      <comment>0.34.3 bugfix</comment>
      <sha1>2oisxnbk9ajtgq5gs29hprgwy9vg28m</sha1>
      <text xml:space="preserve" bytes="584">{{Fink_Header}}

===New features in fink 0.34===

* Support for OS X 10.8 (Mountain Lion)
* Move all essential packages to use gettext-0.18.1.1 from 0.14.5

===Bug fixes in fink 0.34===

* Check system executables used by Fink are useable
* Make sure to use Fink or system provided tools (rsync, cvs, etc) for crucial tasks
* Fix checking for unused UID/GID after Mountain Lion installer is run
* New diagnostics to make sure Fink related directories have correct perimissions

{{Fink_Header}}

[[Category: Fink|Roadmap 0.34 New Features]]
[[Category: Fink_Roadmap|0.34 New Features]]</text>
    </revision>
  </page>
  <page>
    <title>Template:Fink Header</title>
    <ns>10</ns>
    <id>1061</id>
    <revision>
      <id>11837</id>
      <parentid>10146</parentid>
      <timestamp>2010-05-06T20:03:01Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <comment>Hiding  {{Fink_Header}} globally</comment>
      <sha1>2hmpvih5ewrx5y4mvjsf0388o9nnjn3</sha1>
      <text xml:space="preserve" bytes="64">&lt;!-- this template is obsolete, please do not use it anymore --&gt;</text>
    </revision>
  </page>
  <page>
    <title>Template:Infobox Project Service Information</title>
    <ns>10</ns>
    <id>2626</id>
    <revision>
      <id>12023</id>
      <timestamp>2011-10-29T12:14:55Z</timestamp>
      <contributor>
        <username>Fingolfin</username>
        <id>204</id>
      </contributor>
      <comment>Created page with &quot;{| style=&quot;border: 1px solid #6666ff; margin: 0px; padding: 0px; width: 270px; align=right; margin: 3px; float: right;&quot; cellspacing=0 | align=&quot;center&quot; colspan=2 style=&quot;background-...&quot;</comment>
      <sha1>aedncqrb92pg5qg8k9crr3dyo4u3dgt</sha1>
      <text xml:space="preserve" bytes="590">{| style=&quot;border: 1px solid #6666ff; margin: 0px; padding: 0px; width: 270px; align=right; margin: 3px; float: right;&quot; cellspacing=0
| align=&quot;center&quot; colspan=2 style=&quot;background-color: #f0f0ff;&quot; | '''''{{PAGENAME}} Project Service'''''
|-
|- valign=&quot;top&quot;
|style=&quot;padding:5px;&quot;| '''URL(s)'''
| {{{url|&lt;i&gt;None&lt;/i&gt;}}}
|- valign=&quot;top&quot;
|style=&quot;padding:5px;&quot;| '''Purpose'''
| {{{purpose}}}
|- valign=&quot;top&quot;
|style=&quot;padding:5px;&quot;| '''Maintainer(s)'''
| {{{maintainer|&lt;i&gt;None&lt;/i&gt;}}}
|}&lt;includeonly&gt;[[Category:Project Services]]&lt;/includeonly&gt;&lt;noinclude&gt;
[[Category:Information templates]]&lt;/noinclude&gt;</text>
    </revision>
  </page>
</mediawiki>

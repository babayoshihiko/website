<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document SYSTEM "../finkdoc.dtd">
<document filename="index" lang="en">
  <title>Fink Internationalization (i18n) Howto Guide</title>
  <shorttitle>i18n</shorttitle>
  <cvsid>$Id: multilingual.en.xml,v 1.19 2006/05/26 13:04:20 michga Exp $</cvsid>
  <preface>
    <p><em>This document is a work in progress.</em></p>
    <p>Welcome to the Fink Website Internationalization Howto. This document
    is intended to offer guidelines for people who want to contribute to the
    i18n effort for the Fink website.</p>
  </preface>
  <chapter filename="intro">
    <title>Introduction</title>
    <shorttitle>Intro</shorttitle>
    <section name="what">
      <title>What is going on with internationalization of the Fink
      website?</title>
      <p>The Fink project has undertaken an effort to add full
      internationalization support to its website, in order to make the site
      more accessible worldwide. Thanks to Baba Yoshihiko, there is now a
      framework in which pages in multiple languages can be employed.</p>
    </section>
    <section name="languages">
      <title>Languages</title>
      <p>We currently have volunteers working on the following languages:</p>
      <ul>
        <li>Danish</li>
        <li>Dutch</li>
        <li>English (the baseline documentation)</li>
        <li>French</li>
        <li>German</li>
        <li>Italian</li>
        <li>Japanese</li>
        <li>Spanish</li>
        <li>Simplified Chinese</li>
      </ul>
    </section>
    <section name="organization">
      <title>Organization</title>
      <p>A chart of the organization of the i18n team is available <link url="http://micmacfr.homeunix.org/web/organisation/">here</link>.</p>
    </section>
    <section name="helping">
      <title>Helping out</title>
      <p>If you wish to help out with the internationalization effort, there
      are several things that you can do:</p>
      <ul>
        <li>Join discussions on the <link url="http://fink.sourceforge.net/lists/fink-i18n.php">fink-i18n
        mailing list</link>. This is where we will discuss the mechanics of
        internationalization, announcements of updates to documents will be
        made, etc.</li>
        <li>Look over the translation for your own language. You may have a
        translation that flows better than does the official one, you may find
        a translation error, and other possibilities.</li>
        <li>Become a translator yourself. If your language isn't currently
        represented (or even if it is), and you think you can provide an
        effective translation, then you may want to volunteer to be a
        translator for your language. <p>Be advised, however, if you are the
        first person to work on your language: there are quite a few documents
        that you will have to translate initially. Once this is done, there
        typically will be small changes made.</p></li>
      </ul>
    </section>
  </chapter>
  <chapter filename="files">
    <title>The Documentation Files</title>
    <shorttitle>Files</shorttitle>
    <preface>
      <p>The purpose of this chapter is to introduce you to the Fink
      documentation files, how to access them, and how to send changes to the
      Fink website and activate them.</p>
    </preface>
    <section name="requirements">
      <title>Requirements</title>
      <p>To work on the documentation files as a member of a translation team,
      you need:</p>
      <ul>
        <li>A CVS client to allow you to download the documentation from the
        Fink xml tree.</li>
        <li>A UTF-8 compatible text editor--a dedicated XML editor is a plus,
        since many of the files on the Fink website are generated from XML
        files.</li>
        <li>A checkout of the Fink xml tree, as per the <xref section="acquiring">instructions</xref> below.</li>
        <li>Working knowledge of Fink is also beneficial.</li>
      </ul>
      <p><em>Note:</em> "team member" is defined as someone who translates but
      is not ultimately responsible for uploading files to the Fink
      website.</p>
      <p>Team leaders must meet the above requirements, but should also
      have:</p>
      <ul>
        <li>A SourceForge account (free registration).</li>
        <li>Commit access to the Fink documentation tree. To get this, send a
        message to the fink-18n mailing list, letting them know your
        SourceForge username. One of the i18n Core Team will make the
        arrangements for you to have CVS access to the documentation
        section.</li>
      </ul>
      <p><em>Note: </em>a "team leader" is here defined as a person who is
      responsible for actually uploading changed files to the Fink website and
      activating those changes.</p>
    </section>
    <section name="setting-up">
      <title>Environment Settings</title>
      <p>You will want to set up your
      environment to save you some typing later on. The ensuing discussion
      assumes that you are using the built-in command-line tools on Mac OS X or
      another Unix-like OS.</p>
      <ol>
        <li><em>Team leaders only</em>: Modify your login files to add the CVS_RSH environment
        variable.<ol>
            <li>If you are using <filename>bash</filename> or
            <filename>zsh</filename> add the following:
            <codeblock>export CVS_RSH=ssh</codeblock>
            to your <filename>.profile</filename>.</li>
            <li>If you're using <filename>tcsh</filename> add the
            following:
            <codeblock>setenv CVS_RSH ssh</codeblock>
            to your
            <filename>.cshrc</filename>. <p>This will tell
            <filename>cvs</filename> to use ssh to gain access to the files.
            This is required.</p></li>
          </ol></li>
        <li><em>All members</em>: Create a file called .cvsrc in your home directory with the
        following line in it:
        <codeblock>cvs -z3</codeblock>
        By doing this, CVS
        will use level 3 compression by default (it's a good thing!)</li>
      </ol>
      <p>After these operations make sure to start a new terminal window to
      make sure your CVS_RSH environment is set.</p>
    </section>
    <section name="acquiring">
      <title>Acquiring Files to Work on</title>
      <p>For now, you must check out the xml branch of the web site:</p>
      <ol>
        <li>Open a terminal</li>
        <li>Create a directory somewhere to contain the Fink xml branch, e.g:
        <codeblock>mkdir -p ~/Documents/Fink-i18n</codeblock></li>
        <li>Move to that directory: 
        <codeblock>cd ~/Documents/Fink-i18n</codeblock></li>
        <li><em>For non-leader team members (or leaders awaiting access):
        </em>Login to fink.cvs.sourceforge.net anonymously: <ol>
            <li>
            <codeblock>cvs -d:pserver:anonymous@fink.cvs.sourceforge.net:/cvsroot/fink login</codeblock></li>
            <li>Push the enter key (no password, anonymous as default)</li>
            <li>Check out the xml module: 
            <codeblock>cvs -d:pserver:anonymous@fink.cvs.sourceforge.net:/cvsroot/fink co xml</codeblock></li>
          </ol><em>Team leaders: </em>Check out using your username:<ol>
            <li>You don't have to do the login step above, but can go right
            to
            <codeblock>cvs -d:ext:yourusername@fink.cvs.sourceforge.net:/cvsroot/fink co xml</codeblock>
            where <em>yourusername</em> is of course your
            SourceForge username.  You may get a message about the DSA key of the server
            being unknown. Go ahead and answer yes.</li>
            <li>In this case you should enter your SourceForge passphrase at the
            prompt.</li>
          </ol></li>
      </ol>
    </section>
    <section name="file-standards">
      <title>File Standards</title>
      <p>There are two different file standards you will have to be concerned
      with as a translator:</p>
      <ol>
        <li><em>Static (PHP only)</em> <p>These are documents whose
        organization (e.g. item numbering) isn't expected to change much on a
        day-to-day basis. In this case the document just has a PHP file, which
        you will translate.</p></li>
        <li><em>Dynamic (XML generates PHP and HTML)</em> <p>These documents
        (e.g. the FAQ) are updated and restructured more often, so they need
        the facility to be reorganized dynamically. Such documents use an XML
        file as the basis by which PHP and HTML files are generated, via a
        script. As a translator, your responsibility is to translate the XML
        file.</p></li>
      </ol>
      <p>In addition, you will have to translate or modify a few other files, such as Makefile, nav.xx.inc, constants.xx.inc. Without them, the pages either will not appear on the web site or will not appear correctly.</p>
      <p>All files are <em>utf-8 encoded</em>, consequently you should not change the encoding unless it is wrong (i.e. not utf-8), or use any html entities but those already in the English files.</p>
    </section>
    <section name="updating">
      <title>Update to latest revision</title>
      <p>Since other translators will change some files (don't be afraid about
      that, CVS can take good care of it) after you checked out the files, it
      is a good idea that you update your working copy to the latest revision
      frequently. For updating, you can:</p>
      <ol>
        <li>Move to the directory that contains the files you checked out,
        e.g: 
        <codeblock>cd ~/Documents/Fink-i18n/xml</codeblock></li>
        <li>Update it, e.g:
        <codeblock>cvs -d:pserver:anonymous@fink.cvs.sourceforge.net:/cvsroot/fink update -dP</codeblock>
        for team members without commit access,
        or
        <codeblock>cvs update -dP</codeblock>
        for team leaders.</li>
      </ol>
      <p>You may find a letter in front of one or more of the filenames when
      you do this. Consult the <xref chapter="appendix">Appendix</xref> for
      more information, as well as the cvs man page.</p>
    </section>
    <section name="initial-translation">
      <title>Initial Translation</title>
      <p>The files to translate, in order of priority, are:</p>
      <p><strong>Title</strong> (English version file)</p>
      <ol>
        <li>Constants files: (e.g. <filename>xml/web/constants.*.inc</filename>) (see
        below)</li>
       <li>Static PHP files (e.g. <filename>xml/web/*.en.php</filename>)</li>
       <li>Documentation navigation files (e.g. <filename>xml/web/doc/nav.*.inc</filename>) (same handling as constants.*.inc)</li>
        <li>Document Index (<filename>xml/doc/doc.en.xml</filename>)</li>
       <li>User's Guide (<filename>xml/users-guide/uguide.en.xml</filename>)</li>
       <li>Advanced (<filename>xml/advanced/advanced.en.xml</filename>)</li>
       <li>FAQ (<filename>xml/faq.en.xml</filename>)</li>
        <li>Running X11 (<filename>xml/x11/x11.en.xml</filename>)</li>
        <li>CVS Access (<filename>xml/cvsaccess/cvs.en.xml</filename>)</li>
        <li>ReadMe (<filename>xml/fink-readme/readme.en.xml</filename>)</li>
        <li>Internationalization (<filename>xml/multilingual/multilingual.en.xml</filename>)</li>
        <li>ReadMe (<filename>xml/fink-readme/readme.en.xml</filename>)</li>
        <li>Security (<filename>xml/security/security.en.xml</filename>)</li>
       <li>Packaging Tutorial (<filename>xml/quick-start-pkg/quick-start-pkg.en.xml</filename>)</li>
       <li>Packaging (<filename>xml/packaging/packaging.en.xml</filename>)</li>
        <li>Porting (<filename>xml/porting/porting.en.xml</filename>)</li>
        <li>News (<filename>xml/news/news.xml</filename>)</li>
      </ol>
      <p>Be sure to check also the subdirectories in <filename>xml/web</filename> for php, constants or navigation files to translate.</p>
      <p>Do <em>not</em> translate or modify any php file in <filename>xml/web</filename> and its subdirectories which contains "Generated from" near the beginning of the file. You will find the corresponding xml file to translate or modify in the <filename>xml</filename> tree.</p>
      <p>The <filename>constants.*.inc</filename> files, as well as the <filename>nav.*.inc</filename> files, are intended to deal
      with hard coded items in the PHP include files. They are mostly menu
      items and such, located on top and left of the pages. You should
      separate them from the scripts and create a constants.xx.inc file for your language. To do this, just issue the following command in a terminal window:</p>
      <codeblock>cp constants.fr.inc constants.xx.inc</codeblock>
      <p>where xx is your language code (e.g.: de for German language).
      Next, you'll want to translate the single quoted part of the define lines into your language. In case you don't understand French, here is the translation into English:</p>
      <p>Don't forget to change the locale, i.e. en_US to de_DE for German language.</p>
      <codeblock>
/* The Sections.  Used in Menu Navigation Bar */
define (FINK_LC_ALL, 'en_US');

/* The Sections. Used in Menu Navigation Bar */ 
define (FINK_SECTION_HOME, 'Home'); 
define (FINK_SECTION_DOWNLOAD, 'Download');
define (FINK_SECTION_PACKAGE, 'Packages'); 
define (FINK_SECTION_HELP, 'Help'); 
define (FINK_SECTION_FAQ, 'F.A.Q.'); 
define (FINK_SECTION_DOCUMENTATION, 'Documentation'); 
define (FINK_SECTION_MAILING_LISTS, 'Mailing Lists'); 
      
/* The Home Subsections. Used in Menu Navigation Bar */ 
define (FINK_SECTION_HOME_INDEX, 'Index'); 
define (FINK_SECTION_HOME_NEWS, 'News'); 
define (FINK_SECTION_HOME_ABOUT, 'About'); 
define (FINK_SECTION_HOME_CONTRIBUTORS, 'Contributors'); 
define (FINK_SECTION_HOME_LINKS, 'Links'); 
      
/* The word 'Sections'. Used in Menu Navigation Bar */ 
define (FINK_SECTIONS, 'Sections'); 
      
/* Used in FAQ/Documentation Sections: */
/* Contents as Table of contents, Next as next page */ 
/* Q as question, A as anwer */
define (FINK_CONTENTS, 'Contents');
define (FINK_NEXT, 'Next');define (FINK_Q, 'Q');define (FINK_A, 'A');

/* Printer */
define (FINK_PRINTER, 'Printer');
define (FINK_PRINT_VERSION, 'Print Version');

/* Footer */
define (META_KEYWORDS, 'Mac OS X, Fink, Debian, Macintosh, Apple, UNIX, Open Source,
             download, free software, port, development, package management');
define (META_DESCRIPTION, 'The Fink project wants to bring the full world of Unix Open
             Source software to Darwin and Mac OS X. We modify Unix software so that it 
             compiles and runs on Mac OS X and make it available for download as a coherent
             distribution.');
define (HEADER_HOSTED_BY, 'Hosted by {img}');
define (FOOTER_AVAILABLE_LANGUAGES, 'Available Languages');
define (FOOTER_GENERATED_DYNAMICALLY, 'Generated dynamically from');
define (FOOTER_DATABASE_LAST_UPDATED, 'Last updated on %a, %d %B %Y,  %R %Z');
define (FOOTER_LAST_CHANGED, 'Last changed by {author} on %a, %d %B %Y,  %R %Z');
</codeblock>
<p><em>Note:</em> the first lines of Footer section have been splitted for display purpose, do not split them in the file.</p>
      <p>When you translate, you normally follow the steps as below (suppose
      you are translating the <strong>Running X11</strong> document into
      French):</p>
      <ol>
        <li>Copy the xml file 
        <codeblock>cp x11.en.xml x11.fr.xml</codeblock></li>
        <li>Edit the line to declare it is French and its encoding is UTF-8
<codeblock>&lt;?xml version='1.0' encoding='utf-8' ?&gt; ...
&lt;document filename="index" lang="fr" &gt; ...</codeblock></li>
<li><em>Very important notice:</em> Check that the cvsid line near the beginning of the file is not splitted.</li>
        <li>Save as UTF-8. Be aware that the encoding must be utf-8 and take
        care not to change anything but true text.</li>
        <li>Once you are done, or just to test it, edit the
        <code>Makefile</code> to include your language as:
        <codeblock>LANGUAGES = en ja fr include $(basedir)/Makefile.i18n.common</codeblock> 
        <p>then type
        <code>make</code> in the directory. This should generate your PHP (and
        possibly some other) files as well as other files matching the languages in the Makefile.</p></li>
      </ol>
      <p>Note: If you see some misspelling or errors in the English file,
      don't change it, but instead report it instead to the <link url="http://fink.sourceforge.net/lists/fink-i18n.php">fink-i18n
      list</link>, so that the master English file is changed.</p>
    </section>
    <section name="check-work">
      <title>Check Your Work</title>
      <p>Before your work gets uploaded onto the Fink website, you should
      check how the documents look.</p>
      <ul>
        <li><em>The easy way: </em>Open the HTML and PHP files in your web
        browser. PHP files won't look exactly like you see them on the
        website, however.</li>
        <li><em>The best way: </em>You can use your built in web server to view
        your documents as they will appear as it will on Fink's website.
        Assuming that you are using the built-in server:<ol>
            <li>Edit <filename>/etc/httpd/httpd.conf</filename>, e.g.
            via:
            <codeblock>sudo pico /etc/httpd/httpd.conf</codeblock></li>
            <li>Look for a line that says:
            <codeblock>#LoadModule php libexec/httpd/libphp4.so</codeblock>
            and remove the #</li>
            <li>Look for a line that says:
            <codeblock>#AddModule mod_php4.c</codeblock>
            and remove the #</li>
            <li>If you are running a version of Apache older than the built-in
            one for Panther then you may also have to look for a line that
            looks like
            <codeblock>AddType application/x-httpd-php .php</codeblock>
            and put a # in front of it.</li>
            <li>Save the file and exit your editor.</li>
            <li>Start Personal Web Sharing in System Preferences--if it's
            already running then turn it off and back on again.</li>
            <li>The easiest way to make everything visible is to move your
            checkout of the <filename>xml </filename>Tree into the
            <filename>Sites </filename>folder in your Home folder. You can
            then open the homepage in your web browser at the following
            URL:
            <codeblock>http://127.0.0.1/~<em>USERNAME</em>/xml/web/index.php</codeblock>
            where
            <code>USERNAME </code> should be replaced by your username.</li>
          </ol></li>
      </ul>
    </section>
    <section name="change-checkout">
      <title>When You Get Commit Access (Team Leaders)</title>
      <p>Once you have been given commit access, you should</p>
      <ul>
        <li>Set up an SSH key for your SourceForge account.<ol>
            <li>Set the key up on your machine following the <link url="http://sourceforge.net/docman/display_doc.php?docid=761&amp;group_id=1#keygenopenssh">instructions</link>
            from SourceForge.</li>
            <li>Type in the terminal: 
            <codeblock>cat ~/.ssh/id_dsa.pub | pbcopy</codeblock>
            This will copy the contents of the file directly
            to your pasteboard, to avoid spurious linebreaks. Make sure not to
            copy anything else to the pasteboard until you're done.</li>
            <li>Log in to your account on SourceForge.</li>
            <li>Select "Account Options"</li>
            <li>Go to the "Host Access Information" area, and click on "Edit
            SSH Keys for Shell/CVS"</li>
            <li>Click on the form and use Cmd-A, Cmd-V</li>
            <li>Click the button.</li>
          </ol></li>
        <li>Check out the <code>xml </code>tree using your username.<ol>
            <li>If you checked out the whole <filename>xml </filename>tree
            initially, then you should rename your local copy. You can use the
            Finder for this.</li>
            <li>Move to that directory in a terminal window: 
            <codeblock>cd ~/Documents/Fink-i18n</codeblock></li>
            <li>Do the checkout of the xml tree:
            <codeblock>cvs -d:ext:yourusername@fink.cvs.sourceforge.net:/cvsroot/fink co xml</codeblock>
            where <em>yourusername</em> is of course your
            SourceForge username. Enter your passphrase where prompted.</li>
            <li>Copy the files that you were working on from your old tree to
            the new one. Feel free to use the Finder, making sure that they go
            in the same subfolder as they were initially.</li>
          </ol></li>
      </ul>
    </section>
    <section name="committing">
      <title>Committing the Changes (Team Leaders)</title>
      <p>Now you need to send your changes to the main server. To do this you
      need to make sure that you have commit access. You also should make sure
      that you are always using the latest version of XSLT in unstable tree,
      which is <filename>libxslt-1.1.4-1</filename> from Fink as the time of
      writing this document.</p>
      <p>The procedure is different according to the nature - static or
      dynamic - of the documents:</p>
      <ul>
        <li><em>Static: </em>(PHP files only) To commit these documents do the
        following: <ol>
            <li>Open a terminal.</li>
            <li>Move to the directory that contains the file you want to check
            in, e.g: 
            <codeblock>cd ~/Documents/Fink-i18n/xml/web</codeblock>
            <p>if you created your <filename>xml</filename> tree under
            <filename>Documents/Fink-i18n/</filename> in your home folder, and
            you want to commit a PHP file from the xml/web directory.</p></li>
            <li>If the file is a new one that you've created, then you need to
            add it to the list of files, e,g.:
            <codeblock>cvs add download.ru.php</codeblock>
            Give your SourceForge passphrase at the
            prompt.<p>If the file already
            exists, you can skip to the next step.</p></li>
            <li>Commit the file, e.g. in the prior example:
            <codeblock>cvs ci -m "message" download.ru.php</codeblock>
            where once again
            <em>message </em>should indicate what you've done. Give your
            SourceForge passphrase at the prompt. 
            <p>Note: you can commit multiple files at once.</p></li>
          </ol></li>
        <li><em>Dynamic: </em>(XML and PHP) After you've modified the XML
        file, do the following:<ol>
            <li>Open a terminal</li>
            <li>Move to the directory that contains the file you've added or
            modified, e.g.
            <codeblock>cd ~/Documents/Fink-i18n/xml/faq</codeblock>
            if you've been working on
            the FAQ.</li>
            <li>Now run
            <codeblock>make check</codeblock>
            To ensure that the
            file is valid.</li>
            <li>If the XML file is a new one that you've created, then you
            need to add the XML file and its Makefile (assuming, of course,
            that you edited it to create the files for your language) to the
            list of files, e,g.: <codeblock>cvs add faq.ru.xml Makefile</codeblock> You'll need to give your SourceForge
            passphrase.<p>If the file already exists, you can skip to the next
            step.</p></li>
            <li>Commit the files, e.g.: <codeblock>cvs ci -m "message" faq.ru.xml Makefile</codeblock> where <em>message</em> is a
            descriptive message about what you've done. Enter your SourceForge
            passphrase at the prompt.</li>
            <li>Now run <codeblock>make &amp;&amp; make install</codeblock></li>
            <li>If you get an error message telling you that a directory <filename>foo</filename> is missing under <filename>xml/scripts/installer/dmg</filename>, then move to it with: <codeblock>cd ../scripts/installer/dmg</codeblock> and create the directory with: <codeblock>mkdir -p foo</codeblock> Then return to the previous directory and rerun <codeblock>make &amp;&amp; make install</codeblock></li>
            <li>Move into your copy of the Fink xml tree, e.g: <codeblock>cd ~/Documents/Fink-i18n/xml</codeblock> <p>if you created your
            <filename>xml</filename> tree under
            <filename>Documents/Fink-i18n/</filename> in your home
            folder.</p></li>
            <li>If the XML file was new, you'll need to do some more CVS
            adding. For example, if you have been working on the FAQ, then,
            you'll want to run (e.g.):
<codeblock>cvs add web/faq/index.en.php web/faq/general.ru.php \ 
web/faq/relations.ru.php web/faq/usage-fink.ru.php \ 
web/comp-general.ru.php web/faq/comp-packages.ru.php \ 
web/faq/usage-general.ru.php web/faq/usage-packages.ru.php \ 
web/faq/upgrade-fink.ru.php web/faq/mirrors.ru.php \ 
web/faq/faq.ru.html web/faq/header.ru.inc \ 
scripts/installer/dmg/faq.ru.html</codeblock>
For other
            documents, the files will of course be different--use whatever
            gets created for your language when you run <code>make
            install</code>.</li>
            <li>Don't forget to add and commit any file you've created (be it constants.xx.inc, header.xx.inc, nav.xx.inc, etc.)
          <p>If the file already exists, you can
            skip to the next step.</p></li>
            <li>Commit the whole tree:
            <codeblock>cvs ci -m "message"</codeblock>
            <p>Where once again <em>message</em> is a
            descriptive log message (you may want to use the same one as when
            you committed the XML file). Enter your SourceForge passphrase at
            the prompt.</p><p>The reason that you have to do two
            commits in this case is that it's required to ensure that the
            files show the correct creation time and person who last modified
            them.</p></li>
          </ol></li>
      </ul>
    </section>
    <section name="website">
      <title>Update our website</title>
      <p>Want to see your efforts from our website right now? Just do the
      following:</p>
      <ol>
        <li>Open a terminal</li>
        <li>log in web server via ssh: 
        <codeblock>ssh username@shell.sourceforge.net</codeblock>
        You'll need to give your
        SourceForge passphrase.</li>
        <li>Move to the directory which contains our web pages: 
        <codeblock>cd /home/groups/f/fi/fink/htdocs</codeblock></li>
        <li>update the website from CVS:
        <codeblock>./update.sh</codeblock><em>Important note:</em> when you do
        this you will activate <em>everything</em> that's been placed in
        <code>web/xml</code>.</li>
        <li>log out from web server: <codeblock>exit</codeblock></li>
        <li>See your efforts: <codeblock>open http://fink.sourceforge.net/</codeblock></li>
      </ol>
    </section>
  </chapter>
  <chapter filename="procedure">
    <title>Procedure for Updating Documents</title>
    <shorttitle>Updating</shorttitle>
    <preface>
      <p>Since the English documentation is the baseline, it must be updated
      first. Such an update may come from a member of the i18n team (e.g. the
      English Documentarians) or directly from the core developers.</p>
      <p>In order that things go smoothly, the following procedures should be
      followed:</p>
    </preface>
    <section name="call-to-translate">
      <title>Call to Translate</title>
      <p>If a new document is posted, or changes are made in the English documentation, a message should be posted to the
      fink-18n list informing all translators of the fact. The message will
      contain the following:</p>
      <ul>
        <li>A note in the subject line indicating that this is a request for
        translation, e.g. "[translation]", or "[translation-delayed]" for items
        where the English documentation is going online with a delay.</li>
        <li>In addition, the filename of the base file should be included
        somewhere in the message.</li>
        <li>A full diff, e.g.: 
        <codeblock>diff -Nru3 -r<em>last_revision</em> r<em>head</em> </codeblock>
        to show the modifications in context.</li>
      </ul>
      <p>Note: since committing the XML file automatically produces a message
      on fink-commits that meets all of these criteria, an easy thing to do is
      to forward such a message and re-title the subject. However, this will
      fail if many changes were made.</p>
    </section>
    <section name="doc-updates">
      <title>New Document</title>
      <p>The English version of the document is <xref chapter="files" section="committing">committed</xref> and <xref chapter="files" section="website">activated</xref>, and it is <xref section="new-translations">translated</xref> as below.</p>
<p><em>Note</em>: When the new document is inside a new directory, you shoould add that new directory to the Makefile located in the <filename>xml</filename> directory. Otherwise the built process will not complete successfully.</p>
    </section>
    <section name="new-translation">
      <title>New Translations</title>
      <p>The language team leader (or someone else with CVS access) will <xref chapter="files" section="committing">commit</xref> and <xref chapter="files" section="website">activate</xref> each document as it becomes ready.</p>
      <p>This classification includes:</p>
      <ul>
        <li>The first time a translation is made of an existing document.</li>
        <li>Partial translations of an existing document.</li>
        <li>Translation of a new English document</li>
      </ul>
    </section>
    <section name="prompt-update">
      <title>Prompt Update to Existing Documentation</title>
      <p>The base English documentation is <xref chapter="files" section="committing">committed</xref> and <xref chapter="files" section="website">activated</xref> immediately--whomever changed the XML should commit the HTML and PHP, and do the activation. The
      translation teams then update their versions, <xref chapter="files" section="committing">commit</xref><em> all</em> of the files (XML and
      PHP), then <xref chapter="files" section="activate">activate</xref> the
      changes.</p>
      <p><em>Never</em> change a  dynamically generated php file; change the xml file instead.</p>
      <p><em>Check</em> that the cvsid line near the beginning of an xml file is not splitted.</p>
      <p><em>Notes:</em></p>
      <ol>
        <li>Changes to the Internationalization HOWTO (this document) will
        <em>always</em> be made on this schedule, because such changes affect all
        translation teams.</li>
        <li>Changes to the static documents (PHP files not generated from XML)
        will <em>always</em> be made on this schedule as well, because it's hard to <xref section="delayed-update">delay</xref> their activation.</li>
      </ol>
    </section>
    <section name="delayed-update">
      <title>Delayed Update to Existing Documentation (XML-generated files only)</title>
      <p>In this case, the English version of the XML file is <xref chapter="files" section="committing">committed</xref>, but <em>not</em> the
        PHP and HTML files, i.e. stop after step 5 under of Dynamic under <xref chapter="files" section="committing">2.9</xref>. All translators do
        their work and <xref chapter="files" section="committing">commit</xref> <em>only </em>their XML file (i.e. the same as
        for English) within an agreed-upon timeframe. All of the PHP and HTML
        files will be generated, committed, and <xref chapter="files" section="website">activated</xref> simultaneously at an
        agreed-upon time by one person, e.g. someone from the i18n core
        team.</p>
    </section>
    <section name="summary">
      <title>For Developers and English Language Documenters</title>
      <p>The current policy is that all documents should be updated according to the <xref section="prompt-update">prompt update</xref> schedule, unless you have a specific reason to do otherwise.</p>
    </section>
  </chapter>
  <chapter filename="resources">
    <title>Additional Resources           </title>
    <shorttitle>Resources</shorttitle>
    <section name="resources">
      <title>Important Links</title>
      <p>Internationalization is a complicated subject. The resources provided
      below can serve as a valuable second source of information. You are
      advised to read them carefully if you wish to delve deeper into this
      subject.</p>
      <ol>
        <li><link url="http://www.w3.org/TR/unicode-xml/">Unicode in XML and
        other Markup Languages</link></li>
        <li><link url="http://www.w3.org/International/tutorials/tutorial-char-enc.html">Tutorial:
        Character sets &amp; encodings</link></li>
        <li><link url="http://www.w3.org/International/">W3C
        Internationalization Activity</link></li>
        <li><link url="http://www.cl.cam.ac.uk/~mgk25/unicode.html">UTF-8 and
        Unicode FAQ for Unix/Linux</link></li>
      </ol>
    </section>
    <section name="editors">
      <title>Editors</title>
      <p>There are various editors you can use to edit files. This is a short
      list of recommended editors. Some editors are complicated to use or
      command line only and thus not suited for everybody. We will try to
      provide a list of editors suitable for about anyone.</p>
      <ul>
        <li><link url="http://www.codingmonkeys.de/subethaedit/">SubEthaEdit</link> - A
        modern Rendezvous enabled graphical editor for Mac OS X.</li>
        <li><link url="http://www.barebones.com/products/bbedit/index.shtml">BBEdit</link>
        - A versatile and well known albeit none-free editor.</li>
        <li><link url="http://www.morphon.com/xmleditor/index.shtml">Morphon
        XML-Editor</link> - A free, specialized XML Editor. Very good for
        editing XML files.</li>
        <li><link url="http://free.abracode.com/cyclone/">Cyclone</link> - An
        free Interface for the Apple Text Encoding Converter.</li>
        <li><link url="http://www.macalester.edu/~jaas/linebreak.html">LineBreak</link>
        - A simple utility for Mac OS X that converts line breaks in text
        documents.</li>
      </ul>
    </section>
    <section name="moretools">
      <title>Useful Tools</title>
      <p>The command line interface is not meant for everyone. The following
      list of useful tools are often graphical frontends to those command line
      tools. They are provided for your convenience.</p>
      <ul>
        <li><link url="http://www.wincvs.org/download.html">MacCvsX 3.3</link>
        - Graphical frontend to CVS. (This is recommended for Team Leaders
        only!)</li>
      </ul>
    </section>
  </chapter>
  <chapter filename="appendix">
    <title>Appendix</title>
    <shorttitle>Appendix</shorttitle>
    <section name="cvs-codes">
      <title>CVS codes</title>
      <p>When you are updating your CVS checkout, you may see some letters
      before the filenames. These represent the following conditions:</p>
      <ul>
        <li><em>P:</em> There is a new version of the file via a patch.</li>
        <li><em>U:</em> There is a new version of the file via download.</li>
        <li><em>M:</em> The version in your local repository has been
        modified.</li>
        <li><em>C:</em> Your version conflicts with that in the remote
        repository. You should resolve this by editing the  file and
        merging your modifications. <p>You can use </p> <codeblock>rm file; cvs update file</codeblock> <p>where <code>file </code>is the
        offending file, to resolve the conflict, and then apply the changes
        from the backup of your file that exists
        under<filename>.#file-version</filename>, where <code>version</code>
        is the revision that your file started from.</p></li>
        <li><em>?:</em> The file is neither in the remote repository nor in
        the files to be ignored.</li>
        <li><em>A:</em> The file has been added but not committed yet.</li>
        <li><em>R:</em> The file has been removed but not committed yet.</li>
      </ul>
    </section>
  </chapter>
</document>

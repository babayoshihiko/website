<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document SYSTEM "../finkdoc.dtd">
<document filename="index" lang="ru">
    <title>Руководство пользователя Fink</title>
    <shorttitle>Руководство пользователя</shorttitle>
    <cvsid>$Id: uguide.ru.xml,v 1.1 2005/02/01 02:34:17 horsager Exp $</cvsid>
    <preface>
        <p> Данный документ содержит обзор всех параметров Fink. (Следующие более ранние документы могут предоставить более широкий обзор:<link
                url="http://fink.sourceforge.net/doc/bundled/install.php">Инсталляция</link>,<link
            url="http://fink.sourceforge.net/doc/bundled/usage.php">Использование</link>
            и ReadMe.rtf, включенные в загрузочный модуль диска бинарной дистрибуции.)
            Также см. на веб-сайте раздел <link
                url="http://fink.sourceforge.net/doc/">Документация
            </link>, который содержит другие полезные документы
            в дополнение к указанным.</p>
        <p> Добро пожаловать в Руководство пользователя Fink. Оно описывает процедуры первоначальной
            инсталляции и обновления при дистрибуции на основе исходного кода и бинарной дистрибуции.
            Также здесь отражены инсталляция пакетов и
            обслуживание.</p>
    </preface>
    <chapter filename="intro">
        <title>Введение</title>
        <shorttitle>Введение</shorttitle>
        <section name="what">
            <title>Что такое Fink?</title>
            <p> Fink - дистрибуция ПО Mac OS X и Darwin с открытым исходным кодом. 
                Она обеспечивает широкий выбор свободной строки команд и
                графического ПО, разработанных для Linux и аналогичных операционных
                систем вашего Mac.</p>
        </section>
        <section name="req">
            <title>Требования</title>
            <p> В любом случае вам понадобится:</p>
            <ul>
                <li>
                    <p> Инсталлированная система Mac OS X, версия 10.2 или более поздняя, либо
                        эквивалентные версии Darwin. Более ранние версии
                        <em>не</em> будут работать. См. далее информацию
                        о поддерживаемых системах.</p>
                </li>
                <li>
                    <p> Доступ к Internet. Исходный код и бинарные пакеты
                        скачиваются с сайтов скачивания Internet.</p>
                </li>
            </ul>
            <p> Если вы намерены использовать дистрибуцию на основе исходного кода (см. ниже), вам также
                понадобятся:</p>
            <ul>
                <li>
                    <p> Инструменты разработки. В Mac OS X надо инсталлировать
                        пакет Developer.pkg с компакт-диска Developer Tools. Имейте в виду, что
                        инструменты должны соответствовать вашей версии Mac OS X. В
                        Darwin инструменты инсталлированы по умолчанию.</p>
                    <p> Идея инсталлировать Developer Tools хороша,
                        даже если вы не намерены строить пакеты от исходного кода.
                        Некоторые программы, инсталлированные пакетом,
                        являются инструментами строки команд общего назначения. Некоторые
                        пакеты могут зависеть от них в своей работе.</p>
                </li>
                <li>
                    <p> Терпение. Компилирование нескольких больших пакетов требует времени.
                        Во время этого процесса можно болтать в течение часов и даже дней.</p>
                </li>
            </ul>
        </section>
        <section name="supported-os">
            <title>Поддерживаемые системы</title>
            <p>
                <em>Mac OS X 10.3</em> - операционная система, выбранная
                для работы Fink. Ее используют все разработчики и в ней проверяются все пакеты.
                Она считается "полностью поддерживаемой и проверяемой",
                хотя все еще могут быть некоторые проблемы компиляции в случае отдельных пакетов. </p>
            <p>
                <em>Mac OS X 10.2</em> все еще поддерживается, хотя некоторые
                более новые пакеты могут не иметь версий 10.2.</p>
            <p>
                <em>Mac OS X 10.1</em> все еще поддерживается до некоторой степени. Надо
                использовать Fink 0.4.1, но не более поздние версии.</p>
            <p> Darwin 7.0.1 - версия Darwin, соответствующая Mac OS X
                10.3, а <em>Darwin 6.0.2</em> - версия Darwin,
                соответствующая Mac OS X 10.2. В целом они должны работать, но
                не очень хорошо проверены, т.к. вместо этого люди используют параметры, присущие Mac OS X.
                Можно столкнуться с проблемами в случае пакетов, использующих
                параметры, присущие Mac OS X - затрагиваемые пакеты включают
                XFree86 и возможно esound.</p>
        </section>
        <section name="src-vs-bin">
            <title>Дистрибуция исходного кода и бинарная дистрибуция</title>
            <p> ПО пишется ("разрабатывается") на языках программирования,
                доступных для человеческого понимания; эта форма называется "исходным кодом".
                До того, как компьютер сможет выполнить программу, она должна быть преобразована
                в инструкции машинного кода низкого уровня (которые большинство людей не могут прочитать).
                Это процесс называется "компиляцией", а конечная программа
                называется "выполняемой" или "бинарной". (Процесс также называется
                "построением", т.к. обычно включает больше действий, чем
                просто компиляция.)</p>
            <p> Когда вы приобретаете коммерческое ПО, вы не видите его
                исходный код - он является коммерческой тайной компаний. Вы можете
                получить только готовый выполняемый материал, а это значит, что
                вы никак не сможете модифицировать программу или даже узнать,
                что она делает во время своей работы.</p>
            <p> Программное обеспечение с <link url="http://www.opensource.org/">открытым исходным
                кодом</link> совсем иное. Как видно из названия, исходный код
                открыт каждому для просмотра и модификации. Фактически, большинство ПО
                с открытым исходным кодом только распространяется авторами как открытый код,
                и вы должны скомпилировать его на своем компьютере для получения рабочей программы.
                </p>
            <p> Fink предоставляет выбор между двумя моделями. При дистрибуции на основе
                исходного кода первоначальный исходный код скачивается, адаптируется к политике Mac
                OS X и Fink и компилируется на вашем компьютере. Процесс полностью автоматизирован,
                но занимает некоторое время. При бинарной дистрибуции,
                с другой стороны, предварительно скомпилированные пакеты скачиваются 
                с сайта Fink и инсталлируются, что экономит ваше время, необходимое на
                компиляцию. При желании можно совместить обе модели.
                Далее Руководство рассказывает, как это сделать.</p>
        </section>
    </chapter>
    <chapter filename="install">
        <title>Первоначальная инсталляция</title>
        <shorttitle>Инсталляция</shorttitle>
        <preface>
            <p> В процессе первоначальной инсталляции на вашей машине
                инсталлируется базовая система с инструментами управления пакетами.
                После этого вам надо настроить свою среду оболочки для использования ПО,
                инсталлированного при помощи Fink. Это надо сделать только один раз; любое инсталлированное ПО Fink
               (начиная с версии 0.2.0)  может быть обновлена на месте без
                реинсталляции. См. раздел <xref
                    chapter="upgrade">Обновление</xref>.</p>
            <p> После инсталляции инструментов управления пакетами вы можете
                их использовать для инсталляции другого ПО. См. раздел <xref
                    chapter="packages">Инсталляция пакетов</xref>.</p>
        </preface>
        <section name="bin">
            <title>Инсталляция при бинарной дистрибуции</title>
            <p> Бинарная дистрибуция представлена в виде пакета Mac OS X
                (.pkg) в загрузочном модуле диска (.dmg). После скачивания
                загрузочного модуля диска со страницы <link
                    url="http://fink.sourceforge.net/download/bindist.php">Скачивание
                </link> (возможно, вам придется использовать на браузере функцию "Save Target
                as..." или "Download to Disk") щелкните дважды на его изображении.
                Откройтке иконку диска "Fink 0.x.x Installer" на рабочем столе
                (или там, куда вы скачали) после проверки файла дисковым утилитом
                (Disk Copy для версий OS до 10.3).
                В нем вы найдете документацию и пакет инсталлятора.
                Сделайте двойной щелчок на пакете инсталлятора и следуйте указаниям
                на экране.</p>
            <p> Вам будет задан вопрос о пароле администратора и затем появятся
                тексты. Прочтите их - они могут быть написаны позже, чем
                данное Руководство. При появлении опций инсталлятора для дискового
                накопителя, на котором надо инсталлировать, надо правильно выбрать объем системы (где
                вы инсталлировали Mac OS X). Если вы выберите неправильный объем,
                инсталляция продолжится, но Fink после этого не будет работать. Когда инсталлятор
                закончит работу, перейдите к разделу <xref
                    section="setup">Настройка среды</xref>.</p>
        </section>
        <section name="src">
            <title>Инсталляция при дистрибуции на основе исходного кода</title>
            <p> Дистрибуция на основе исходного кода является стандартным тарболом Unix
                (.tar.gz). Он содержит только менеджер пакетов <code>fink</code>
                с описанием пакетов и скачивает исходный код
                для пакетов на fly. Его можно получить со страницы <link
                    url="http://fink.sourceforge.net/download/srcdist.php">Скачивание
                </link>. Важно не использовать StuffIt Expander
                для извлечения архива архиватора на магнитной ленте. По какой-то причине StuffIt все еще
                не может обрабатывать имена файлов. Если StuffIt Expander уже извлек архив,
                надо удалить созданную им папку.</p>
            <p> Версия исходного кода должна инсталлироваться со строки команд,
                т.е. надо открыть Terminal.app и перейти к каталогу, в котором вы поместили архив
                fink-0.x.x-full.tar.gz . Следующая команда извлекает
                архив:</p>
            <codeblock>tar -xzf fink-0.x.x-full.tar.gz</codeblock>
            <p> Создается каталог с таким же именем, как архив.
                Мы просто будем продолжать здесь использовать заполнитель
                <code>fink-0.x.x-full</code>. Теперь перейдите в этот каталог и выполните
                сценарий загрузки:</p>
            <codeblock>cd fink-0.x.x-full ./bootstrap.sh</codeblock>
            <p> Сценарий произведет проверку вашей системы и использует sudo,
                чтобы стать суперпользователем - вы увидите опцию для пароля. Затем
                сценарий спросит о маршруте инсталляции. Если у вас нет иной
                веской причины, надо использовать
                -<filename>/sw</filename> по умолчанию. Только это позволит вам впоследствии инсталлировать
                скачанные бинарные пакеты. Кроме того, все примеры используют
                этот маршрут; если вы используете другой, надо убедиться, что ваш действительный маршрут
                заменен.</p>
            <p> Следующий шаг - конфигурация Fink. Вам будут заданы вопросы о
                настройках прокси и зеркала, а также о том, хотите ли вы получать многословные сообщения.
                Если вы не поняли какой-то вопрос, надо нажать на return для принятия
                выбора по умолчанию. Можно перезапустить этот процесс позднее с использованием команды
                    <code>fink configure</code>.</p>
            <p> Когда сценарий загрузки будет иметь всю необходимую информацию, он
                начнет скачивание исходного кода для базовой системы и
                компиляцию. С этого момента не требуется никакое вмешательство.
                Не надо беспокоиться, если вы увидите некоторые пакеты, скомпилированные дважды.
                Это необходимо, т.к. для построения бинарного пакета в менеджере пакетов
                сначала надо получить менеджер пакетов.</p>
            <p> По окончании загрузки перейдите к разделу <xref
                    section="setup">Настройка среды</xref>.</p>
        </section>
        <section name="setup">
            <title>Настройка среды</title>
            <p> Для использования ПО, установленного в иерархии каталогов Fink,
                в т.ч. самих программ управления пакетами, необходимо
                настроить переменную величину вашей среды PATH (и кое-что другое)
                соответствующим образом. В большинстве случаев можно это сделать при помощи команды</p>
            <codeblock>open /sw/bin/pathsetup.command</codeblock>
            <p> либо для <code>fink-0.18.3</code> или <code>fink-0.19.2</code> 
                (в точности, как показано ниже):</p>
            <codeblock>/sw/bin/pathsetup.sh</codeblock>
            <p> Если по какой-то причине это не сработает, можно сделать
                конфигурацию вручную. Но это будет зависеть от используемой оболочки.
                Можно определить используемую оболочку, открыв терминал
                и выполнив команду</p>
            <codeblock>echo $SHELL</codeblock>
            <p> Если результат будет "csh" или "tcsh", значит, вы используете оболочку C. Если
                это bash, zsh, sh и т.п., у вас вероятно
                вариант bourne shell.</p>
            <ul>
                <li>
                    <p>
                        <strong>Bourne Shell</strong> (по умолчанию в Mac OS X 10.3
                        и более поздних версиях) </p>
                    <p> Если вы используете Bourne shell (н-р sh, bash, zsh),
                        добавьте следующие строки к файлу
                        <code>.profile</code> в своем базовом каталоге (либо, если
                        у вас есть файл <code>.bash_profile</code>, надо
                        использовать следующее вместо него): </p>
                    <codeblock>. /sw/bin/init.sh</codeblock>
                    <p> Если вы не знаете, как добавить строку, примените
                         </p>
                    <codeblock>cd pico .profile</codeblock>
                    <p> Теперь вы в полноэкранном текстовом редакторе (с полным терминальным
                        окном) и можете просто начать печатать строку
                            <code>. /sw/bin/init.sh</code>. Если есть отметка
                        "New file", значит, все хорошо. Убедитесь, что вы нажали
                        клавишу Return не менее одного раза, затем нажмите
                        Control-O, Return, Control-X для выхода из редактора. </p>
                </li>
                <li>
                    <p>
                        <strong>Оболочка C</strong> (по умолчанию в Mac OS X 10.2 и
                        более ранних версиях) </p>
                    <p> Если вы используете tcsh, добавьте следующую строку к файлу
                        <filename>.cshrc</filename> в своем базовом каталоге: </p>
                    <codeblock>source /sw/bin/init.csh</codeblock>
                    <p> Если вы не знаете, как добавить строку, примените
                        следующие команды: </p>
                    <codeblock>cd pico .cshrc</codeblock>
                    <p> Теперь вы в полноэкранном текстовом редакторе (с полным терминальным
                        окном) и можете просто начать печатать строку
                            <code>source /sw/bin/init.csh</code>. Если есть отметка
                        "New file", значит, все хорошо. Убедитесь, что вы нажали
                        клавишу Return не менее одного раза, затем нажмите
                        Control-O, Return, Control-X для выхода из редактора.
                         </p>
                    <p>Есть пара общих ситуаций, в которых вам может понадобиться
                        редактирование дополнительных файлов:</p>
                    <ol>
                        <li>
                            <p>У вас есть <code>~/.tcshrc</code>.</p>
                            <p>Такой файл иногда создается приложениями
                                третьих лиц или самими вами.
                                Так или иначе, случается так, что
                                <code>~/.tcshrc</code> становится читаемым, а
                                <code>~/.cshrc</code> игнорируется.
                                Рекомендуется отредактировать
                                <code>~/.tcshrc</code> также, как вы это сделали с
                                <code>~/.cshrc</code> ранее, а также
                                добавить следующую строку в конце:</p>
                            <codeblock>source ~/.cshrc</codeblock>
                            <p>Таким образом, если вам когда-либо понадобится удалить
                                <code>~/.tcshrc</code>, вы сможете запускать Fink.</p>
                        </li>
                        <li>
                            <p>Вы следовали указаниям в <code>/usr/share/tcsh/examples/README</code>.</p>
                            <p>Они объясняют, как создать
                                <code>~/.tcshrc</code> и <code>
                                ~/.login</code>.  В данном случае проблема заключается в
                                <code>~/.login</code>, который запускается после
                                <code>~/.tcshrc</code>, и исходных кодах
                                <code>/usr/share/tcsh/examples/login</code>. Последние
                                содержат строку, которая делает запись поверх вашей
                                предыдущей настройки PATH. В данном случае надо
                                создать <code>~/Library/init/tcsh/path</code>:</p>
                            <codeblock>mkdir -p ~/Library/init/tcsh pico ~/library/init/tcsh/path</codeblock>
                            <p>и внести туда </p>
                            <codeblock>source ~/.cshrc</codeblock>
                            <p>. Надо также модифицировать ваш .tcshrc, как описано
                                в п.1 выше, и убедиться, что ваш PATH настроен правильно
                                на случай ситуаций, когда
                                <code>~/.login</code> не читается.</p>
                        </li>
                    </ol>
                    <p> Редактирование .cshrc (и других файлов инициализации) только
                        негативно отразится на новых оболочках (т.е. вновь открытых терминальных окнах),
                        таким образом надо также применить данную команду во всех
                        терминальных окнах, открывающихся до того, как вы отредактировали файл.
                        Вам также понадобится выполнить <code>rehash</code>, т.к. tcsh
                        кэширует список имеющихся команд внутрениим образом. </p>
                </li>
            </ul>
            <p> Имейте в виду, что сценарии также добавляют
                <filename>/usr/X11R6/bin</filename>
                и <filename>/usr/X11R6/man</filename> к вашему PATH, чтобы
                вы могли использовать  X11 после его инсталляции. Пакеты Fink обладают способностью
                самостоятельно добавлять настройки, н-р пакет qt  устанавливает переменные величины среды QTDIR.
                </p>
            <p> После настройки своей среды перейдите к главе <xref
                    chapter="packages">Инсталляция пакетов</xref>, чтобы
                увидеть, как вы можете инсталлировать некоторые действительно полезные пакеты,
                используя различные инструменты управления пакетами, входящие в Fink.</p>
        </section>
    </chapter>
    <chapter filename="packages">
        <title>Инсталляция пакетов</title>
        <shorttitle>Пакеты</shorttitle>
        <preface>
            <p> Теперь, когда у вас есть то, что может называться инсталляцией Fink,
                данная глава дает информацию, как инсталлировать настоящие пакеты ПО,
                которые вам необходимы. Сначала мы объясним, как
                инсталлировать пакеты с использованием дистрибуции на основе исходного кода и
                бинарной дистрибуции, а также дадим важные сведения, относящиеся к обоим видам дистрибуции.</p>
        </preface>
        <section name="bin-dselect">
            <title>Инсталляция бинарных пакетов при помощи dselect</title>
            <p>
                <code>dselect</code> - программа, которая позволяет просматривать список
                имеющихся пакетов и выбирать те, которые вы хотите инсталлировать.
                Она запускается в Terminal.app, но занимает весь экран
                и обеспечивает простые перемещения при помощи клавиатуры. Как и другие инструменты управления
                пакетами, <code>dselect</code> требует привилегий суперпользователя,
                т.е. вам надо использовать sudo (со счета с привилегиями администратора):</p>
            <codeblock>sudo dselect</codeblock>
            <p>
                <em>Примечание:</em>
                У <code>dselect</code> были проблемы с терминальным приложением Mac OS X.
                Надо применить следующие команды
                перед ее использованием или ввести их в соответствующий файл инициализации
                (н-р <code>.cshrc</code> / <code>.profile</code>):</p>
            <p>для пользователей tcsh:</p>
            <codeblock>setenv TERM xterm-color</codeblock>
            <p>для пользователей bash:</p>
            <codeblock>export TERM=xterm-color</codeblock>
            <p> Главное меню имеет несколько опций:</p>
            <ul>
                <li>
                    <p>
                        <em>[A]ccess</em> - конфигурирует используемый метод доступа к сети.
                        <em>Не надо ее использовать</em>,
                        т.к. Fink предварительно конфигурирует все за вас. 
                        Вообще надо избегать этот пункт меню, т.к. он может перезаписать
                        конфигурацию по умолчанию так, что она не будет работать.</p>
                </li>
                <li>
                    <p>
                        <em>[U]pdate</em> - скачивает список имеющихся пакетов
                        с сайта Fink. Данная опция не инсталлирует
                        и не обновляет пакеты, а просто обновляет
                        листинги, используемые для браузера пакетов.
                        Надо выполнить ее хотя бы однократно после инсталляции Fink.</p>
                </li>
                <li>
                    <p>
                        <em>[S]elect</em> - предоставляет листинг реальных пакетов,
                        в котором вы можете активировать/дезактивировать пакеты
                        в своей системе. Более подробно см. об этом далее.</p>
                </li>
                <li>
                    <p>
                        <em>[I]nstall</em> - именно здесь происходит действие.
                        Пункты меню, указанные выше, влияют только на листинги пакетов dselect
                        и базы данных статуса. Данная опция скачивает и
                        инсталлирует запрошенные пакеты.
                        Она также удаляет пакеты, которые вы дезактивируете в браузере. </p>
                </li>
                <li>
                    <p>
                        <em>[C]onfig</em> и <em>[R]emove</em> - реликвии,
                        оставшиеся со времен, предшествующих apt. Они не нужны,
                        хотя и безвредны.</p>
                </li>
                <li>
                    <p>
                        <em>[Q]uit</em> - теперь поговорим о том, что вы должны для себя уяснить.</p>
                </li>
            </ul>
            <p> Вы потратите большую часть времени на dselect в браузере
                пакетов, доступных через пункт меню "[S]elect". Перед тем, как
                dselect покажет вам список пакетов, вы увидите экран
                вводной помощи. Можно нажать 'k' для получения
                полного списка команд клавиатуры или просто пробел для получения
                списка пакетов.</p>
            <p> Можно передвигаться по списку вверх-вниз при помощи клавиш up и down.
                Выбор осуществляется при помощи '+' и '-'. Когда вы выбираете пакет,
                для которого требуются другие пакеты, dselect показывает подсписок
                с соответствующими пакетами. В большинстве случаев вы можете нажать
                Return для утверждения варианта в dselect. Можно также сделать
                корректировки в подсписке (н-р выбрать другую альтернативу
                для взаимозависимости виртуальных пакетов) или нажать 'R' (н-р Shift-R)
                для возврата к предыдущему состоянию. Оба подсписка и главный список
                пакетов остаются, если нажать Return. Если выбранный вариант вас устраивает,
                оставьте главный список и используйте пункт меню "[I]nstall"
                для инсталляции пакетов.</p>
        </section>
        <section name="bin-apt">
            <title>Инсталляция бинарных пакетов при помощи apt-get</title>
            <p>
                <code>dselect</code> сам по себе не скачивает пакеты.
                Вместо этого он применяет apt для грязной работы. Если вы
                предпочитаете интерфейс чистой строки команд, можно получить доступ к функциям
                apt напрямую благодаря команде <code>apt-get</code>.</p>
            <p> Как и при работе с dselect, надо сначала скачать текущие листинги
                имеющихся пакетов при помощи </p>
            <codeblock>sudo apt-get update</codeblock>
            <p> Подобно пункту меню "[U]pdate" в dselect, эта опция обновляет не
                реальные файлы на вашем компьютере, а только список имеющихся пакетов apt.
                Для инсталляции пакетов просто дайте имя apt-get,
                н-р:</p>
            <codeblock>sudo apt-get install lynx</codeblock>
            <p> Если apt-get определит, что пакеты требуют инсталляции других пакетов,
                вам будет предоставлен список и у вас запросят подтверждение.
                Затем запрошенные пакеты будут скачаны и инсталлированы.
                Удалить пакеты можно очень просто:</p>
            <codeblock>sudo apt-get remove lynx</codeblock>
            <p>
                <!-- [FIXME: using apt-cache to search for packages] -->
            </p>
        </section>
        <section name="bin-exceptions">
            <title>Инсталляция зависимых пакетов, недоступных при бинарной
                дистрибуции</title>
            <p>Иногда во время бинарной инсталляции вы можете получить сообщение о том, что
                взаимозависимость не может быть инсталлирована. Пример:</p>
            <codeblock>Sorry, but the following packages have unmet
                dependencies: foo: Depends: bar (&gt;= version) but it is
                not installable E: Sorry, broken packages</codeblock>
            <p>Дело в том, что пакет, который вы пытаетесь инсталлировать,
                зависит от другого пакета, который не подлежит бинарной дистрибуции из-за
                лицензионных требований. Вам надо инсталлировать взаимозависимость от исходного кода
                (см. следующий раздел).</p>
        </section>
        <section name="src">
            <title>Инсталляция бинарных пакетов и пакетов на основе исходного кода при помощи fink</title>
            <p> Инструмент <code>fink</code> позволяет инсталлировать пакеты, которые
                еще не доступны в <xref chapter="intro"
                    section="src-vs-bin">бинарной дистрибуции</xref>. </p>
            <p>Прежде всего вам нужна соответствующая версия инструментов разработки
                (Development Tools) для системы. Их можно бесплатно скачать после регистрации
                на сайте <link url="http://connect.apple.com">http://connect.apple.com</link>.</p>
            <p> Для получения списка пакетов, готовых к инсталляции на основе исходного кода,
                надо попросить инструмент <code>fink</code>:</p>
            <codeblock>fink list</codeblock>
            <p> Первая колонка отражает в списке статус инсталляции (незаполненный в случае
                неинсталированной версии, <code>i</code> при инсталлированной и <code>(i)</code> при
                инсталлированной, но не последней версии), после чего указывается
                имя пакета, последняя версия и краткое описание.Можно
                запросить больше информации об отдельном пакете при помощи команды </p>
            <codeblock>fink describe xmms</codeblock>
            <p> После нахождения пакета, который вы хотите инсталлировать, примените команду
                "install":</p>
            <codeblock>fink install wget-ssl</codeblock>
            <p> Команда <code>fink</code> сначала проверит наличие всех необходимых
                предварительных условий ("взаимозависимостей") и спросит вашего разрешения
                на их инсталляцию в случае отсутствия некоторых из них. Затем
                продолжит выполнение действий и скачает исходный код, распакует его, сделает патчи,
                компиляцию и инсталлирует результаты в вашей системе.Это может
                занять много времени. Если в течение этого процесса возникнут ошибки,
                сначала обратитесь к <link
                url="http://fink.sourceforge.net/faq/">Ч.З.В.</link>. </p>
            <p> Для версий <code>fink</code> начиная с 0.23.0 можно попытаться
                скачать предварительно компилированные бинарные пакеты, если они есть в наличии,
                вместо того чтобы строить их. Просто перенесите <xref chapter="usage"
                    section="options">--use-binary-dist (or -b) option</xref> в
                <code>fink</code>. Это может сэкономить много времени. Н-р, при обращении к </p>
            <codeblock>fink --use-binary-dist install wget-ssl</codeblock>
            <p>или</p>
            <codeblock>fink -b install wget-ssl</codeblock>
            <p> сначала скачиваются все зависимости для wget-ssl, которые
                обеспечиваются бинарной дистрибуцией, и только
                остальное строится на основе исходного кода. Данная опция также может быть постоянно активированной
                в <xref chapter="conf">Fink configuration
                file</xref> (fink.conf) или благодаря команде <code>fink
                configure</code>. </p>
            <p> Более подробную информацию об инструментах  <code>fink</code> см. в
                главе <xref chapter="usage">"Использование инструмента fink при помощи
                    строки команд"</xref>. </p>
        </section>
        <section name="fink-commander">
            <title>Fink Commander</title>
            <p>Fink Commander является интерфейсом Aqua и для <code>apt-get</code>,
                и для инструмента <code>fink</code>. Бинарное меню позволяет осуществлять
                операции бинарной дистрибуции, а меню исходного кода -
                операции дистрибуции на основе исходного кода.</p>
            <p>Fink Commander входит в бинарный инсталлятор Fink. Если вы хотите скачать его
                отдельно (н-р, если вы загрузили Fink от
                исходного кода) или получить дополнительные сведения, посетите сайт<link
                    url="http://finkcommander.sourceforge.net">Fink Commander</link>.</p>
        </section>
        <section name="available-versions">
            <title>Имеющиеся версии</title>
            <p>Если вы хотите инсталлировать пакет, сначала надо проверить
                    <link
                    url="http://fink.sourceforge.net/pdb/index.php">базу данных
                по пакетам</link> и посмотреть, можно ли это сделать через Fink.
                Имеющиеся версии пакета отражены в нескольких
                строках таблицы. А именно:</p>
            <ul>
                <li>
                    <p>
                        <em>0.4.1:</em> версия, которую можно инсталлировать
                        на основе бинарных файлов для OS 10.1.</p>
                </li>
                <li>
                    <em>0.6.3:</em> версия, которую можно инсталлировать
                        на основе бинарных файлов для OS 10.2.</li>
                <li>
                    <p>
                        <em>&fink_version;:</em> базовая версия,
                        которую можно инсталлировать на основе бинарных файлов для OS 10.3,
                        в рамках текущего выпуска Fink. Если вы делаете <xref
                        chapter="upgrade">upgrade</xref> Fink, возможно наличие
                        более поздней версии специально для OS, которая здесь не отражена.</p>
                </li>
                <li>
                    <p>
                        <em>current-10.2-gcc3.3 stable:</em> последняя
                        стабильная версия, которую можно инсталлировать на основе
                        исходного кода для OS 10.2 с обновлением <code>gcc 3.3</code> для
                        Developer Tools. Для инсталляции этой версии вам
                        возможно понадобится активировать доступ <link
                        url="http://fink.sourceforge.net/doc/cvsaccess/index.php">CVS</link>
                        или rsync. Если вы не примените обновление <code>gcc
                        3.3</code>, то можете не увидеть эту версию (или
                        даже сам пакет).</p>
                    <p>Прим.: В отличие от других проектов, Fink
                        распространяет наиболее свежие стабильные версии пакетов
                        через CVS, а также версии, нуждающиеся в проверке (см.
                        далее раздел о нестабильных пакетах). Активация опции обновления CVS или rsync
                        дает доступ к новым стабильным версиям пакетов еще до того,
                        как обновляется бинарная дистрибуция.</p>
                </li>
                <li>
                    <p>
                        <em>current-10.3 stable:</em> последняя версия,
                        которую можно инсталлировать от исходного кода в OS 10.3.
                        Опять же, может потребоваться доступ к данной версии через CVS или rsync.</p>
                </li>
                <li>
                    <p>
                        <em>current-10.2-gcc3.3 unstable:</em> последняя
                        нестабильная версия, которую можно инсталлировать от
                        исходного кода в OS 10.2 с <code>gcc 3.3</code>. Для ее инсталляции
                        следуйте <link
                        url="http://fink.sourceforge.net/faq/usage-fink.php#unstable">инструкциям</link>
                        о том, как инсталлировать нестабильные пакеты.</p>
                    <p>Прим.: нестабильность не обязательно значит, что их нельзя использовать, но
                        инсталляция таких пакетов будет на ваш риск.</p>
                </li>
                <li>
                    <em>current-10.3 unstable:</em> последняя нестабильная версия,
                    которую можно инсталлировать от исходного кода в OS 10.3.
                    Надо активировать нестабильное дерево указанным выше образом.</li>
            </ul>
        </section>
        <section name="x11">
            <title>Сортировка X11</title>
            <p>Многие пакеты, доступные через Fink, требуют инсталляции
                определенной формы X11. По этой причине одно из первых действий,
                которое обычно выполняется - выбор вида реализации X11.</p>
            <p> Т.к. есть несколько видов реализации X11 для Mac OS
                X (XFree86, Tenon Xtools, eXodus) и несколько способов их инсталляции
                (вручную или через Fink), есть несколько альтернативных пакетов -
                один для каждой настройки. Fink не может угадывать, что у вас есть,
                значит, очень важно сделать правильный выбор пакета и инсталлировать его
                до инсталляции приложений X11. Далее приведен список
                имеющихся пакетов и способов инсталляции X11:</p>
            <ul>
                <li>
                    <p>
                        <em>xfree86-base:</em> (только 10.1 или 10.2) Это реальный пакет.
                        Он инсталлирует всю загрузку XFree86
                        4.2.1.1 как пакет Fink. Для максимальной гибкости он не
                        содержит реальный сервер XDarwin. Для получения данного пакета
                        надо инсталлировать пакет xfree86-rootless.</p>
                </li>
                <li>
                    <p>
                        <em>xfree86:</em> Это одинарный пакет (в который входит
                        сервер дисплея) для инсталляции XFree86 4.3.0 (только 10.2
                        ) или 4.3.99 (только 10.3). Данная версия быстрее, чем
                        4.2.1.1, но не проверена в такой же степени.</p>
                </li>
                <li>
                    <p> system-xfree86: Данный пакет автоматически появляется
                        (в случае Fink 0.6.2 и более поздних версий), если вы инсталлируете XFree86
                        вручную от исходного кода или на основе официальной (или неофициальной) бинарной
                        дистрибуции, либо если вы инсталлируете
                        Apple X11. Затем он действует как заполнитель зависимости.</p>
                </li>
                <li>
                    <p> system-xtools: Инсталлирует этот пакет, если у вас инсталлирован продукт Tenon
                        Xtools. Как и system-xfree86, он просто производит
                        проверку на чистоту и не трогает реальные файлы.</p>
                </li>
            </ul>
            <p> Для получения более подробной информации об инсталляции и выполнении X11 см.
                    документ <link url="http://fink.sourceforge.net/doc/x11/">X11 в
                    Darwin и Mac OS X</link>.</p>
        </section>
    </chapter>
    <chapter filename="upgrade">
        <title>Обновление Fink</title>
        <shorttitle>Обновление</shorttitle>
        <preface>
            <p> Данная глава отражает процедуры обновления вашей инсталляции Fink
                до последних улучшенных версий.</p>
        </preface>
        <section name="bin">
            <title>Обновление при использовании бинарных пакетов</title>
            <p> Если вы используете только бинарную дистрибуцию, нет
                отдельной процедуры обновления. Надо просто сделать запрос инструменту, который вы выберите,
                о получении списка последних пакетов через сервер и обновлении
                всех пакетов.</p>
            <p> В случае использования dselect достаточно использовать "[U]pdate", затем
                "[I]nstall". Конечно, вы можете выполнить между ними "[S]elect"
                для проверки выбранного и получения информации о новых
                пакетах.</p>
            <p> В случае использования apt, примените <code>apt-get update</code> для получения списка
                последних пакетов, затем <code>apt-get upgrade</code> для обновления всех пакетов,
                чтобы получить все имеющиеся версии.</p>
            <p>В случае использования Fink Commander, выберите описание Binary-&gt;Update для обновления
                списка пакетов, затем пакеты Binary-&gt;Dist-Upgrade
                для обновления до новых версий.</p>
            <p> Для получения более подробной информации, особенно об обновлениях более ранних версий Fink,
                  чем 0.3.0, см. матрицу обновления - <link
                    url="http://fink.sourceforge.net/download/upgrade.php">Upgrade Matrix</link>.</p>
        </section>
        <section name="src">
            <title>Обновление при дистрибуции на основе исходного кода</title>
            <p> Если вы используете дистрибуцию на основе исходного кода, процедура
                включает два действия. Первое: вы скачиваете описание последнего
                пакета на свой компьютер. Второе: используете описание
                пакетов для компиляции новых пакетов; реальный исходный код скачивается
                в случае необходимости.</p>
            <p> Если у вас Fink 0.2.5 или более поздня версия, первое действие может быть
                выполнено при помощи <code>fink selfupdate</code>. Эта
                команда запустит проверку веб-сайта Fink, чтобы выяснить наличие нового
                выпуска, и в этом случае автоматически скачает и инсталлирует
                описание пакетов. В последних версиях команды
                 <code>fink</code> есть опция получения описания
                пакетов непосредственно от CVS или через rsync. CVS является хранилищем,
                управляемым версией, в котором осуществляется хранение описания пакетов
                и управление ими. Преимущество использования CVS в постоянном
                обновлении, но недостаток в том, что имеется один сервер
                CVS для Fink, который может быть ненадежен в случае
                большого трафика. По этой причине обычным пользователям рекомендуется
                использовать rsync. Для rsync имеется много зеркал
                и единственным недостатком является то, что такое описание пакетов
                занимает час или около того для миграции к зеркалам rsync после
                того, как они добавлены к CVS.</p>
            <p>(Если у вас возникли проблемы при обновлении инсталляции на основе
                    исходного кода, см. <link
                    url="http://fink.sourceforge.net/download/fix-upgrade.php">Особые инструкции
                    </link>.)</p>
            <p> Если у вас более ранняя версия Fink, чем 0.2.5, надо скачать
                описание пакетов вручную. Посетите <link
                    url="http://sourceforge.net/project/showfiles.php?group_id=17203">зону скачивания
                </link> и найдите тарбол последних пакетов - 0.x.x.tar.gz
                в модуле "distribution". Скачайте его, затем инсталлируйте следующим образом:
                </p>
            <codeblock>tar -xzf packages-0.x.x.tar.gz cd packages-0.x.x ./inject.pl</codeblock>
            <p> После обновления описания пакетов (любым образом)
                надо обновить все пакеты одновременно при помощи
                    <code>fink update-all</code>.</p>
            <p>Для обновления при дистрибуции на основе исходного кода при помощи Fink Commander, выберите
                Source-&gt;Selfupdate для скачивания информационных файлов
                о новых пакетах, затем примените Source-&gt;Update-all для обновления всех
                устаревших пакетов.</p>
        </section>
        <section name="mix">
            <title>Комбинирование бинарных файлов и файлов исходного кода</title>
            <p> Если для некоторых пакетов вы используете предварительно скомпилированные бинарные пакеты, а
                другие строите на основе исходного кода, для обновления инсталляции Fink надо следовать обоим видам инструкций,
                изложенных выше. Т.е. сначала надо использовать
                <code>dselect</code> или <code>apt-get</code> для получения
                последних версий пакетов, имеющихся в бинарном виде, затем
                <code>fink selfupdate</code> и <code>fink
                update-all</code> для получения описания текущих пакетов и обновления
                остальных пакетов. </p>
            <p> Начиная с fink 0.23.0 использование опции UseBinaryDist
                (настраиваемой через <xref chapter="usage"
                    section="options">--use-binary-dist (or -b) option</xref> или
                в <xref chapter="conf">Fink configuration file</xref>) оба вида описания как
                для исходного кода, так и для и бинарных  файлов будут обновлены, если вы примените
                    <code>fink selfupdate</code>. В данном случае вам уже не нужно 
                использовать отдельно <code>apt-get</code>. </p>
            <p> Если вы используете Fink Commander, выберите описание Binary-&gt;Update
                descriptions для обновления списка пакетов, затем
                Binary-&gt;Dist-Upgrade packages для обновления до новых версий.
                После этого примените Source-&gt;Selfupdate для скачивания информационных файлов
                о новых пакетах, а затем Source-&gt;Update-all (см.
                предыдущий раздел, содержащий более подробную информацию). </p>
        </section>
    </chapter>
    <chapter filename="conf">
        <title>Конфигурационный файл Fink</title>
        <shorttitle>fink.conf</shorttitle>
        <preface>
            <p> Данная глава объясняет настройки, имеющиеся в конфигурационном файле Fink
                (fink.conf), а также как они влияют на поведение
                Fink, особенно инструмент строки команд <code>fink</code>
                (т.е. работу с дистрибуцией на основе исходного кода).</p>
        </preface>
        <section name="about">
            <title>Информация о fink.conf</title>
            <p> При первоначальной инсталляции Fink появляются вопросы с опциями относительно
               настройки вашего конфигурационного файла, н-р,
                какие <xref section="mirrors">зеркала</xref> вы хотите использовать для скачивания
                файлов и как приобрести права суперпользователя.  Вы можете вновь начать этот процесс
                при помощи команды <code>fink configure</code>.
                Возможно, для настройки некоторых опций надо будет сделать ручное редактирование файла
                <em>fink.conf</em>. В целом эти опции предназначены только для
                продвинутых пользователей.</p>
            <p> Файл <em>fink.conf</em> находится на
                <code>/sw/etc/fink.conf</code> и его можно редактировать в своем любимом
                текстовом редакторе. Длят его редактирования вам понадобятся права суперпользователя.</p>
        </section>
        <section name="syntax">
            <title>Синтаксис fink.conf</title>
            <p> Ваш файл fink.conf состоит из множества строк в формате</p>
            <codeblock>OptionName: Value</codeblock>
            <p>Опции представлены по одной на строку, а название опции отделено
                от ее величины двоеточием и одинарным пробелом. Содержание значения
                зависит от опции, но обычно это логическая переменная
                ("правда" или "ложь"), строка или список строк, отделенные
                пробелом. Н-р:</p>
            <codeblock> BooleanOption: True StringOption: Something ListOption:
                Option1 Option2 Option3</codeblock>
        </section>
        <section name="required">
            <title>Необходимые настройки</title>
            <p> Некоторые из настроек в <em>fink.conf</em> обязательны.
               Без них Fink не может работать соответствующим образом. К этой категории относятся следующие настройки:
                </p>
            <ul>
                <li>
                    <p>
                        <em>Basepath:</em> маршрут (path)</p>
                    <p> Собщите Fink, где маршрут инсталлирован.  По умолчанию это
                        <em>/sw</em>, если вы не сделали  изменений в процессе первоначальной
                        инсталляции Fink. Вы <em>не</em> должны менять это значение
                        после инсталляции, иначе Fink запутается.</p>
                </li>
            </ul>
        </section>
        <section name="optional">
            <title>Опциональные настройки пользователя</title>
            <p> Существуют  различные опциональные настройки пользователя, которые пользователи могут
                варьировать по своему желанию для изменения поведения Fink.</p>
            <ul>
                <li>
                    <p>
                        <em>RootMethod:</em> su / sudo / none</p>
                    <p>Для некоторых операций Fink необходимы права суперпользователя.
                        Признанные значения: <em>sudo</em> или <em>su</em>. Также можно
                        сделать настройку <em>none</em>, в этом случае вам надо будет запускать и
                        выполнять Fink самому в качестве суперпользователя. Значение по умолчанию:
                        <em>sudo</em>, которое в большинстве случаев должно быть неизменным.</p>
                </li>
                <li>
                    <p>
                        <em>Trees:</em> список деревьев</p>
                    <p>Имеющиеся деревья:</p>
                    <codeblock> local/main - любые локальные пакеты, которые вы хотите
                        инсталлировать local/bootstrap - пакеты, использованные при
                        инсталляции Fink stable/crypto - стабильные
                        криптографические пакеты stable/main - другие стабильные
                        пакеты unstable/crypto - нестабильные криптографические
                        пакеты unstable/main - другие нестабильные пакеты</codeblock>
                    <p> Также вы можете добавить собственные деревья в каталог
                        <code>/sw/fink/dists</code> для личных целей, но
                        в большинстве случаев это не
                        требуется. Деревьями по умолчанию являются "local/main
                        local/bootstrap stable/main". Это список должен сохраняться
                        в sync вместе с файлом <code>/sw/etc/apt/sources.list</code>.
                        (Начиная с fink 0.21.0, fink делает это за вас автоматически.)</p>
                </li>
                <li>
                    <p>
                        <em>Distribution:</em> 10.1, 10.2, 10.2-gcc3.3 или 10.3</p>
                    <p>Fink нужно знать, какую версию Mac OS X вы
                        используете. Не поддерживаются Mac OS X 10.0 и более ранние версии,
                        а текущая версия fink больше не поддерживает 10.1.
                        Все еще поддерживается только Mac OS X 10.2, если инсталлировано обновление
                        Developer Tools за август 2003 г. Данная область настраивается
                        при помощи скрипта <code>/sw/lib/fink/postinstall.pl</code>.
                        Вам не надо изменять это значение вручную.</p>
                </li>
                <li>
                    <p>
                        <em>FetchAltDir:</em> маршрут (path)</p>
                    <p>обычно fink хранит исходные коды, которые он извлекает, в
                        <code>/sw/src</code>. Вы можете указать альтернативный каталог
                        для поиска скачанного исходного кода при использовании
                        этой опции. Н-р:</p>
                    <codeblock>FetchAltDir: /usr/src</codeblock>
                </li>
                <li>
                    <p>
                        <em>Verbose:</em> число от 0 до 3</p>
                    <p> Данная опция устанавливает объем информации, которую Fink вам предоставляет
                        о том, что он делает. Значения:<em>0</em>
                        <tt>Quiet</tt> (не показывает статус скачивания)<em>1</em>
                        <tt>Low</tt> (не показывает расширяемые тарболы)<em>2</em>
                        <tt>Medium</tt> (показывает почти все)<em>3</em>
                        <tt>High</tt> (показывает все) Значение по умолчанию: 1.</p>
                </li>
                <li>
                    <p>
                        <em>NoAutoIndex:</em> булево значение</p>
                    <p>Fink кэширует свои файлы описания пакетов в
                        /sw/var/db/fink.db для сохранения в целях их чтения и синтаксического анализа
                        при каждом выполнении. Fink проверяет, нуждается ли указатель пакетов в 
                        обновлении, если не выбрана опция "правда"
                        ( "True"). По умолчанию это опция "ложь" ( "False") и не 
                        рекомендуется ее изменять. Если вы это сделаете, может
                        потребоваться ручное выполнение команды <code>fink index</code> для
                        обновления указателя.</p>
                </li>
                <li>
                    <p>
                        <em>SelfUpdateNoCVS:</em> булево значение</p>
                    <p>Команда<code>fink selfupdate</code> обновляет менеджер пакетов Fink
                        до последних версий. Благодаря данной опции
                        CVS для этого не используется при настройке
                        <tt>True</tt>. Настройка устанавливается автоматически
                        командой <code>fink selfupdate-cvs</code>
                        и вам не надо делать изменение вручную.</p>
                </li>
                <li>
                    <p>
                        <em>Buildpath:</em> маршрут</p>
                    <p>Fink необходимо создать несколько временных каталогов для
                        каждого пакета, который он компилирует от исходного кода. По умолчанию
                        они размещаются в <filename>/sw/src</filename>, но если вы
                        хотите, чтобы они были где-то в другом месте, укажите маршрут.
                        См. описание областей <code>KeepRootDir</code> и
                        <code>KeepBuildDir</code> далее в данном документе для
                        получения более подробной информации об этих временных каталогах </p>
                </li>
            </ul>
        </section>
        <section name="downloading">
            <title>Настройки для скачивания</title>
            <p>Есть разные настройки, влияющие на то, как Fink скачивает
                данные по пакетам.</p>
            <ul>
                <li>
                    <p>
                        <em>ProxyPassiveFTP:</em> булево значение</p>
                    <p>При этой опции Fink использует "пассивный" режим для скачивания FTP.
                        Некоторые конфигурации сервера или сети FTP
                        требуют настройки данной опции как <tt>True</tt>. 
                        Рекомендуем оставлять ее все время активированной, т.к.
                        значение активного FTP уменьшилось.</p>
                </li>
                <li>
                    <p>
                        <em>ProxyFTP:</em> url</p>
                    <p>Если вы используете прокси FTP, в этой области надо указать его адрес,
                        н-р:</p>
                    <codeblock>ProxyFTP: ftp://yourhost.com:2121/</codeblock>
                    <p>Если вы не используете прокси FTP, не указывайте ничего.</p>
                </li>
                <li>
                    <p>
                        <em>ProxyHTTP:</em> url</p>
                    <p>Если вы используете прокси HTTP, в этой области надо указать его адрес,
                        н-р:</p>
                    <codeblock>ProxyHTTP: http://yourhost.com:3128/</codeblock>
                    <p>Если вы не используете прокси HTTP, не указывайте ничего.</p>
                </li>
                <li>
                    <p>
                        <em>DownloadMethod:</em> wget / curl / axel / axelautomirror</p>
                    <p>Fink может использовать три разные приложения для скачивания
                        файлов из Internet - <em>wget</em>, <em>curl</em>
                        или <em>axel</em>. Значение<em>axelautomirror</em> использует
                        экспериментальный режим приложения <em>axel</em>, который
                        пытается определить ближайший сервер, имеющий определенный файл.
                        В данный момент использование <em>axel</em> и
                        <em>axelautomirror</em> не рекомендуется.
                        Значение по умолчанию: <em>curl</em>.<em>Приложение,
                            выбранное вами в качестве DownloadMethod, ОБЯЗАТЕЛЬНО должно быть инсталлировано!</em>
                    </p>
                </li>
                <li>
                    <p>
                        <em>SelfUpdateMethod:</em> point, rsync или cvs</p>
                    <p> Fink может использовать разные способы  для обновления
                        информационных файлов пакетов.<em>rsync</em> - рекомендуемая настройка,
                        когда rsync используется для скачивания только модифицированных файлов
                        на активированных вами деревьях. Имейте в виду, что если вы
                        изменили или добавили файлы на стабильных или нестабильных деревьях,
                        использование rsync приведет к их удалению. Сначала сделайте резервную копию.
                         <em>cvs</em> произведет скачивание с использованием анонимного доступа или доступа
                        :ext: cvs из хранилища fink. Недостатком при этом является то,
                        что cvs не может переключать зеркала и если
                        сервер недоступен, вы не сможете сделать обновление.
                        <em>point</em> произведет скачивание только последней выпущенной версии
                        пакетов. Мы не рекомендуем это делать, т.к. ваши пакеты могут быть
                        быть устаревшими. </p>
                </li>
                <li>
                    <p>
                        <em>UseBinaryDist:</em> булево значение</p>
                    <p> Инициирует попытку fink скачать предварительно скомпилированные
                        бинарные пакеты из бинарной дистрибуции, если они есть и если
                        бинарного пакета еще нет в системе. Это может
                        сэкономить массу времени при инсталляции и таким образом
                        рекомендуется настройка данной опции. Если передать fink <xref
                            chapter="usage">--use-binary-dist option</xref>, будет такой же эффект,
                        но опция будет работать только при одной активации fink.
                            .<em>Поддерживается только для версий начиная с
                        0.23.0</em>. </p>
                </li>
            </ul>
        </section>
        <section name="mirrors">
            <title>Настройки зеркал</title>
            <p>Получение ПО из Internet может быть скучным занятием и зачастую
                скачивание происходит не так быстро, как нам хотелось бы. Серверы зеркал
                хранят копии файлов, которые есть на других серверах, но могут быстрее подсоединяться к
                 Internet или быть ближе к вам географически,
                позволяя таким образом быстрее скачивать файлы. Они также
                помогают снизить нагрузку на загруженные основные серверы, н-р
                <em>ftp.gnu.org</em>, и являются альтернативой в случае недосягаемости
                какого-либо сервера.</p>
            <p>Чтобы Fink выбрал наилучшее для вас зеркало, надо ему сообщить,
                на каком континенте и в какой стране вы живете. Если скачивание с одного сервера
                не получится, вам будут предложены опции опять попробовать сделать это через это же зеркало,
                другое зеркало в этой же стране или на континенте, либо
                другое зеркало в мире.</p>
            <p>Файл <em>fink.conf</em> содержит настройки с информацией, какие зеркала вы хотели бы использовать.
                </p>
            <ul>
                <li>
                    <p>
                        <em>MirrorContinent:</em> трехбуквенный код</p>
                    <p>Вы должны изменить это значение при помощи <code>fink
                    configure</code>. Трехбуквенный код -
                        это код, который можной найти в <code>/sw/lib/fink/mirror/_keys</code>.
                        Н-р, если вы живете в Европе:</p>
                    <codeblock>MirrorContinent: eur</codeblock>
                </li>
                <li>
                    <p>
                        <em>MirrorCountry:</em> шестибуквенный код</p>
                    <p>Надо изменить это значение при помощи <code>fink
                        configure</code>. Этот код можно
                        найти в <code>/sw/lib/fink/mirror/_keys</code>.
                        Н-р, если вы живете в Австрии:</p>
                    <codeblock>MirrorCountry: eur-AT</codeblock>
                </li>
                <li>
                    <p>
                        <em>MirrorOrder:</em> MasterFirst / MasterLast /
                        MasterNever / ClosestFirst</p>
                    <p> Fink поддерживает зеркала 'Master', являющиеся отраженными
                        хранилищами тарболов исходного кода для всех пакетов Fink.
                        Преимущество использования комплекта зеркал Master в том, что
                        URL скачивания исходного кода никогда не прерываются. Пользователи могут
                        выбрать либо использование таких зеркал, поддерживаемых
                        рабочей группой Fink, либо только URL оригинальных исходных кодов
                        и сайты внешних зеркал - gnome, KDE и сайты зеркал
                        debian. Дополнительно пользователи могут выбрать комбинацию двух
                        комплектов, которые впоследствии будут определяться при поиске
                        в порядке приближения, как указано выше. При использовании опций
                        MasterFirst и MasterLast пользователь не может "перепрыгнуть"
                        к комплекту Master (или не Master), если скачивание не
                        получилось. Опции:</p>
                    <codeblock> MasterFirst - Находит зеркала исходного кода "Master" в первую очередь.
                        first. MasterLast - Находит зеркала исходного кода "Master" в последнюю очередь.
                        MasterNever - Никогда не использует  зеркала исходного кода "Master".
                        ClosestFirst - Находит ближайшие зеркала исходного кода в первую очередь
                        (совмещает все зеркала в одном комплекте).</codeblock>
                </li>
            </ul>
        </section>
        <section name="developer">
            <title>Настройки разработчика</title>
            <p>Некоторые опции в <em>fink.conf</em> полезны только для
                разработчиков. Мы не рекомендуем обычным пользователям Fink
                их модифицировать. К данной категории относятся следующие опции.</p>
            <ul>
                <li>
                    <p>
                        <em>KeepRootDir:</em> булево значение</p>
                    <p>Благодая этому значению Fink не удаляет каталог
                        /sw/src/root-[name]-[version]-[revision] после
                        построения пакета. Значение по умолчанию:  false. <em>Будьте осторожны,
                            эта опция может  быстро заполнить ваш жесткий диск!</em>
                        Применение в <em>fink</em> флага <em>-K</em> дает такой же результат,
                        но действиует только для одной активации <em>fink</em>.
                        </p>
                </li>
                <li>
                    <p>
                        <em>KeepBuildDir:</em> булево значение</p>
                    <p>Благодая этому значению Fink не удаляет каталог
                        /sw/src/[name]-[version]-[revision] после
                        построения пакета. Значение по умолчанию:  false. <em>Будьте осторожны,
                            эта опция может  быстро заполнить ваш жесткий диск!</em>
                         Применение в <em>fink</em> флага <em>-k</em> дает такой же результат,
                        но действиует только для одной активации <em>fink</em>.
                         </p>
                </li>
            </ul>
        </section>
        <section name="advanced">
            <title>Усовершенствованные настройки</title>
            <p>Есть некоторые другие опции, которые могут быть полезны, но они требуют определенных
                знаний.</p>
            <ul>
                <li>
                    <p>
                        <em>MatchPackageRegEx:</em>
                    </p>
                    <p>При применении этого значения fink не спрашивает, какой пакет надо инсталлировать, если один 
                        (только один) из вариантов выбора соответствует указанному здесь perl Regular
                        Expression. Н-р:</p>
                    <codeblock>MatchPackageRegEx: (.*-ssl$|^xfree86$|^xfree86-shlibs$)</codeblock>
                    <p>будет соответствовать пакетам, заканчивающимся на '-ssl', и полностью будет соответствовать
                        'xfree86' и 'xfree86-shlibs'.</p>
                </li>
                <li>
                    <p>
                        <em>CCacheDir:</em> маршрут</p>
                    <p>Если инсталлирован пакет Fink ccache-default, кэш-файлы,
                        создаваемые им при построении пакетов Fink, будут размещены здесь.
                        Значение по умолчанию:
                        <filename>/sw/var/ccache</filename>. При настройке
                        <code>none</code> fink не настраивает переменную величину среды CCACHE_DIR
                        и ccache будет использовать
                        <filename>$HOME/.ccache</filename>, потенциально размещая
                         файлы суперпользователя в вашем исходном каталоге.<em>Данная опция возможна
                            только в версиях fink, выпущенных после 0.21.0</em>. </p>
                </li>
            </ul>
        </section>
        <section name="sourceslist">
            <title>Управление файлом apt's sources.list</title>
            <p>Начиная с 0.21.0, fink активно управляет
                файлом<code>/sw/etc/apt/sources.list</code>, который используется apt
                для нахождения бинарных файлов для инсталляции. Файл по умолчанию
                sources.list выглядит примерно так, для соответствия вашей дистрибуции и деревьям:</p>
            <codeblock># Local modifications should either go above this line,
                or at the end. # # Default APT sources configuration for Fink,
                written by the fink program # Local package trees - packages
                built from source locally # NOTE: this is automatically kept in
                sync with the Trees: line in # /sw/etc/fink.conf # NOTE: run
                'fink scanpackages' to update the corresponding Packages.gz
                files deb file:/sw/fink local main deb file:/sw/fink stable main
                crypto # Official binary distribution: download location for
                packages # from the latest release deb
                http://us.dl.sourceforge.net/fink/direct_download 10.3/release
                main crypto # Official binary distribution: download location
                for updated # packages built between releases deb
                http://us.dl.sourceforge.net/fink/direct_download 10.3/current
                main crypto # Put local modifications to this file below this
                line, or at the top.</codeblock>
            <p>С этим файлом по умолчанию, apt-get сначала просматривает вашу имеющуюся
                инсталляцию уже скомпилированных бинарных файлов, а затем
                официальную бинарную дистрибуцию. Можно изменить этот порядок путем ввода данных
                в начале файла (поиск будет производиться в первую очередь)
                или в его конце (поиск будет производиться в последнюю очередь).</p>
            <p>Если вы меняете строку ваших деревьев или дистрибуцию, которые используете,
                fink автоматически модифицирует часть файла "по умолчанию" для
                соответствия новым значениям. При этом Fink сохранит
                все ваши модификации, которые вы внесли в файл, при условии, что
                вы ограничите свои модификации верхней частью файла (выше
                первой строки по умолчанию) и его нижней частью (ниже последней строки
                по умолчанию).</p>
            <p> Прим.: Если вы модифицировали <code>/sw/etc/apt/sources.list</code>
                перед обновлением до fink 0.21.0, вы найдете свои предыдущие файлы, сохраненные в
                 <code>/sw/etc/apt/sources.list.finkbak</code> .</p>
        </section>
    </chapter>
    <chapter filename="usage">
        <title>Использование инструмента fink на строке команд</title>
        <shorttitle>Инструмент fink</shorttitle>
        <section name="using">
            <title>Использование инструмента fink</title>
            <p>Инструмент <code>fink</code> использует несколько суффиксных команд для работы
                над пакетами дистрибуции на основе исходного кода. Некоторым из них нужно не менее одного
                имени пакета, но они могут обрабатывать несколько имен пакета одновременно.
                Можно указать только одно имя пакета (н-р gimp), полностью уточненное  имя
                с номером версии (н-р gimp-1.2.1) или
                с номерами и версии, и модификации (н-р gimp-1.2.1-3). Fink
                автоматически выберет последнюю имеющуюся версию и модификацию, если они не указаны.
                У других команд другие опции.</p>
            <p>Далее следует список команд для инструмента <code>fink</code>:</p>
        </section>
        <section name="options">
            <title>Глобальные опции</title>
            <p> Некоторые опции относятся ко всем командам fink. Если вы напечатаете
                 <code>fink --help</code>, то получите список опций: </p>
            <codeblock> -h, --help - отражает данный текст помощи -q, --quiet - делает
                fink менее многословным, в противоположность --verbose -V, --version -
                отражает информацию о версии -v, --verbose - делает
                fink более многословным, в противоположность --quiet -y, --yes - допускает ответ по умолчанию
                на все интерактивные вопросы -b, --use-binary-dist -
                скачивает предварительно скомпилированные пакеты бинарной дистрибуции, если они имеются
                 </codeblock>
            <p> Большинство данных опций говорят сами за себя. Их также можно настроить
                в <xref chapter="conf">Fink configuration file</xref>
                (fink.conf), если вы хотите иметь их с постоянной настройкой, а не только при обращении к
                 <code>fink</code>. </p>
            <p> При опции <code>--use-binary-dist</code>
                <code>fink</code> пытается скачать предварительно скомпилированные бинарные пакеты
                бинарной дистрибуции, если они имеются и если их
                еще нет в системе. (Данная опция возможна только начиная с
                версии <code>fink</code> 0.23.0) </p>
        </section>
        <section name="install">
            <title>install</title>
            <p>Команда install используется для инсталляции пакетов. Она запускает скачивание,
                конфигурирование, построение и инсталляцию указанных вами пакетов. Она также
                автоматически инсталлирует необходимые зависимости, не перед этим запросит
                ваше подтверждение. Пример:</p>
            <codeblock>fink install nedit Reading package info... Information
                about 131 packages read. The following additional package will
                be installed: lesstif Do you want to continue? [Y/n]</codeblock>
            <p> Если вы добавите <xref section="options">--use-binary-dist option</xref>,
                <code>fink</code> попытается скачать имеющиеся бинарные пакеты вместо
                их построения. Это может сэкономить массу времени при
                инсталляции. </p>
            <p>Алиасы для команды install: update, enable, activate, use
                (в основном по историческим причинам).</p>
        </section>
        <section name="remove">
            <title>remove</title>
            <p>Команда remove удаляет пакеты из системы в форме вызова
                    '<code>dpkg --remove</code>'. Текущая реализация
                имеет недостаток: она сама не проверяет зависимости, а полностью предоставляет это
                инструменту dpkg (хотя обычно
                это не вызывает проблем).</p>
            <p>Команда remove удаляет только файл виртуальных пакетов
                (кроме файлов конфигурации), но оставляет нетронутым сжатый файл пакета .deb.
                Это значит, что вы можете реинсталлировать пакет позднее
                без повторного прохождения всего процесса компиляции.
                Если вам нужно место на диске, можно удалить .deb с дерева
                <filename>/sw/fink/dists</filename>.</p>
            <p>Алиасы: disable, deactivate, unuse, delete.</p>
        </section>
        <section name="purge">
            <title>purge</title>
            <p>Команда purge предназначена для очистки системы от пакетов. Она действует также, как
                команда remove, за исключением того, что также удаляет файл
                конфигурации.</p>
        </section>
        <section name="update-all">
            <title>update-all</title>
            <p>Данная команда обновляет все инсталлированные пакеты до последней
                версии. Ей не нужен список пакетов, т.е. вы можете просто напечатать:</p>
            <codeblock>fink update-all</codeblock>
            <p> Команда <xref section="options">--use-binary-dist option</xref>
                здесь также применяется. </p>
        </section>
        <section name="list">
            <title>list</title>
            <p> Данная команда вызывает список имеющихся пакетов, статус инсталляции листинга,
                последнюю версию и краткое описание.
                Если вы обратились к этой команде без параметров, она просто даст список имеющихся
                пакетов. Можно также дать образец имени или оболочки, и fink
                предоставит список соответствующих наименований.</p>
            <p> Первая колонка отражает статус инсталляции со следующими
                значениями:</p>
            <codeblock> not installed i latest version is installed (i)
                installed, but a newer version is available</codeblock>
            <p> Есть также флаги для команды <code>fink list</code></p>
            <codeblock> -h,--help Отражает имеющиеся опции. -t,--tab
                Выводит список в формате ограничения табуляцией, полезного для выполнения
                вывода через скрипт. -i,--installed Отражает только текущие инсталлированные
                пакеты. -o,--outdated Отражает только устаревшие пакеты.
                 -u,--uptodate Отражает только
                только последние пакеты. -n,--notinstalled Отражает пакеты,
                не инсталлированные на данный момент. -s=expr,--section=expr Отражает
                только те пакеты в разделах, которые соответствуют регулярному выражению
                expr. -w=xyz,--width=xyz Устанавливает ширину дисплея, которую вы хотите для формата
                вывода. xyz является либо числовым, либо автоматическим значением
                (auto). auto устанавливает ширину на основании ширины терминала. Значение по умолчанию:
                auto.</codeblock>
            <p> Несколько примеров использования:</p>
            <codeblock> fink list - список всех пакетов fink list bash - проверка, есть ли
                bash и какой версии fink list --outdated - список
                устаревших пакетов fink list --section=kde - список пакетов
                в разделе kde fink list "gnome*" - список пакетов,
                начинающихся с 'gnome'</codeblock>
            <p> Кавычки в последнем примере необходимы для того, чтобы оболочка
                сама не начала интерпретировать образец. </p>
        </section>
        <section name="apropos">
            <title>apropos</title>
            <p> Данная команда ведет себя почти также, как <code>fink list</code>.
                Основное отличие в том, что <code>fink apropos</code>
                также находит и описание пакетов с целью нахождения пакетов. Второе отличие в том, что
                искомая строка должна предоставляться и не является опциональной. 
                </p>
            <codeblock> fink apropos irc - список всех пакетов, для которых 'irc'
                появляется в имени или описании fink apropos -s=kde irc - то же, что и выше,
                но установлено ограничение до пакетов раздела kde </codeblock>
        </section>
        <section name="describe">
            <title>describe</title>
            <p> Данная команда вызывает описание пакета, имя которого вы указываете на строке команд.
                Надо учитывать, что только некоторые пакеты на данный момент
                имеют описание.</p>
            <p> Алиасы: desc, description, info</p>
        </section>
        <section name="fetch">
            <title>fetch</title>
            <p>Скачивает указанные по именам пакеты, но не инсталлирует их. Эта команда
                скачивает тарболы, даже если они были скачаны до этого.</p>
        </section>
        <section name="fetch-all">
            <title>fetch-all</title>
            <p>Скачивает <em>все</em> файлы исходного кода пакета. Подобно fetch, она
                скачивает тарболы, даже если они были скачаны до этого.</p>
        </section>
        <section name="fetch-missing">
            <title>fetch-missing</title>
            <p>Скачивает <em>все</em> недостающие файлы исходного кода пакета. Данная команда
                скачивает только те файлы, которые не представлены в системе.</p>
        </section>
        <section name="build">
            <title>build</title>
            <p>Строит пакет, но не инсталлирует его. Как правило, тарболы исходного кода
                скачиваются, если их нельзя найти. Результат этой команды -
                инсталлируемый файл пакета .deb, который вы можете быстро инсталлировать
                после этого, при помощи команды install. Этой команде нечего делать, если
                уже существует файл .deb. Надо иметь в виду, что
                зависимости все еще<em>инсталлированы</em>, а не просто построены.</p>
            <p> The <xref section="options">--use-binary-dist option</xref> is
                applicable here. </p>
        </section>
        <section name="rebuild">
            <title>rebuild</title>
            <p>Выполняет построение пакетов (lподобно команде build), но игнорирует и перезаписывает
                существующий файл .deb. Если пакет инсталлирован,
                вновь созданный файл .deb также будет инсталлирован в системе
                через <code>dpkg</code>. Это весьма полезно в процессе разработки пакета.</p>
            <p> Здесь применима опция <xref section="options">--use-binary-dist option</xref>.
                 </p>
        </section>
        <section name="reinstall">
            <title>reinstall</title>
            <p>Действует также, как install, но инсталлирует пакет через
                <code>dpkg</code>, даже если он уже инсталлирован. Можно использовать
                эту команду, если вы случайно удалили файлы пакета или изменили
                файлы конфигурации и хотите опять иметь настройки по умолчанию.</p>
        </section>
        <section name="configure">
            <title>configure</title>
            <p> Запускает повторное выполнение конфигурации Fink. Это позволяет, в числе прочего, изменять
                ваши сайты зеркал и настройки прокси.</p>
        </section>
        <section name="selfupdate">
            <title>selfupdate</title>
            <p> Данная команда автоматизирует процесс обновления до новых выпусков версий Fink.
                Она проверяет веб-сайт Fink на наличие новой версии,
                затем скачивает описание пакетов и обновляет базовые пакеты,
                в т.ч. сам <code>fink</code>.
                Эта команда может запускать обновление до постоянных версий, но также
                может настроить ваше дерево каталогов <filename>/sw/fink/dists</filename> для
                прямого обновления через CVS. Это значит, что вы затем сможете иметь доступ
                к самым последним модификациям всех пакетов.</p>
            <p> Если активирована <xref section="options">--use-binary-dist option</xref>,
                список пакетов, имеющихся в бинарной дистрибуции, также
                обновляется. </p>
        </section>
        <section name="index">
            <title>index</title>
            <p> Перестраивает кэш пакета. Обычно вам не надо выполнять это вручную,
                так как <code>fink</code> автоматически определяет,
                когда он нуждается в обновлении.</p>
        </section>
        <section name="validate">
            <title>validate</title>
            <p> Данная команда выполняет различные проверки в файлах .info and .deb.
                Координаторы пакетов должны это делать в описании своих пакетов
                и соответствующих построенных пакетах перед их предоставлением.</p>
            <p>Алиас: check</p>
        </section>
        <section name="scanpackages">
            <title>scanpackages</title>
            <p> Делает вызов dpkg-scanpackages(8) с указанными деревьями.</p>
        </section>
        <section name="cleanup">
            <title>cleanup</title>
            <p> Удаляет файлы устаревшиех пакетов (.info, .patch, .deb), если есть более свежие
                версии. Это может потребовать много места на диске.</p>
            <p> Если активирована <xref section="options">--use-binary-dist option</xref>,
                устаревшие скачанные бинарные пакеты также удаляются. </p>
        </section>
        <section name="dumpinfo">
            <title>dumpinfo</title>
            <p> Действует только в версиях после <code>fink</code> 0.21.0 </p>
            <p> Отражает, как Fink синтаксически анализирует части файла .info в пакете Разные области
                и процентные расширения отражаются в соответствии со следующими
                <em>опциями</em>: </p>
            <codeblock> -h, --help - Отражают данные имеющиеся опции. -a,
                --all - Отражают все области на основании описания пакетов. Это режим
                по умолчанию, в котором нет флагов --field или --percent.
                -f fieldname, - Отражают имена областей,
                --field=fieldname в указанном в списке порядке. -p key, - Отражают клавиши данного
                процентного расширения, --percent=key в указанном в списке порядке.
                 </codeblock>
        </section>
    </chapter>
</document>

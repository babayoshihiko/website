<?xml version = '1.0' encoding = 'UTF-8'?>
<!DOCTYPE document SYSTEM "../finkfaq.dtd">
<document filename="index" lang="ja" >
<title>The Fink F.A.Q.</title>
<shorttitle>F.A.Q.</shorttitle>
<cvsid>$Id: faq.ja.xml,v 1.26 2005/01/25 03:05:54 babayoshihiko Exp $</cvsid>
<preface>
<p>このページは Fink の FAQ です。
質問は、他の FAQ と同様に実際に質問されたものと、あらかじめ予想して作られたものがあります。
質問と回答の形をとった仮のドキュメントとなっています。</p>
<p>FAQは節毎にページがわかれています。
下記の目次にすべての質問があります。
それぞれリンクされていますので、辿っていってください。</p>
</preface>
<chapter filename="general" >
<title>一般的な質問</title>
<shorttitle>一般</shorttitle>
<faqentry name="what" >
<question>
<p>Fink とは何ですか?</p>
</question>
<answer>
<p>Fink は、多くの Unix ソフトウェアを Mac OS X で使えるようにするものです。
このために、次の二つのゴールを設定しています。</p>
<p>一つ目のゴールは、ソフトウェアを Mac OS X に移植することです。
これは、 役に立つ Open Source の Unix ソフトウェアを、 Mac OS X でコンパイルと実行できるよう、必要な修正を行ないます。
この作業は簡単なこともありますが、非常に困難な場合や、パッケージによっては不可能な場合もあります。
我々は、この作業を簡単にするためにツールやドキュメントを提供するよう努めています。</p>
<p>二つ目のゴールは、成果を普通のユーザーが使える形にすることです。
このために我々は、 Linux で使われている <code>dpkg</code> と、 <code>fink</code> という パッケージ管理ツールを使ったディストリビューションを構築しました。
後者は、  <link url="http://www.debian.org/" >Debian GNU/Linux</link> プロジェクトが独自で作成したものです。
バイナリディストリビューションは <code>.deb</code> パッケージ形式を使います。
ソースからパッケージをビルドするには、我々の独自のツールである <code>fink</code> を使い、 <code>.deb</code>  パッケージのファイルを作成します。</p>
</answer>
</faqentry>
<faqentry name="naming" >
<question>
<p>Fink とはどういう意味ですか?</p>
</question>
<answer>
<p>意味はありません。ただの名称です。なにかの頭文字でもありません。</p>
<p>実際は、ドイツ語でフィンチという鳥のことです。
このプロジェクトに名称を考えていた時、 OS の名称である Darwin から、チャールズ＝ダーウィン、ガラパゴス諸島、進化を連想しました。
それで、ダーウィン・フィンチのことを思い出しました。
まぁ、それだけです...</p>
</answer>
</faqentry>
<faqentry name="bsd-ports" >
<question>
<p>
Fink と BSD の port メカニズムはどう違うのですか (OpenPackages や GNU-Darwin も含めて)?
</p>
</question>
<answer>
<p>利点:</p>
<ul>
<li>
<p>Perl で書かれています。 make/shell ではありません。
このため、 BSD make だけにある特殊な機能に依存せず、ビルドするために GNU make が必要かどうかフラグを立てる必要がありません。</p>
</li>
<li>
<p>
dpkg のバイナリパッケージ管理は洗練されています。
スムーズなアップデート、設定ファイルの扱い、バーチャルパッケージ、高度の依存性などの機能があります。。
</p>
</li>
<li>
<p>Fink は指定しない限りは /usr/local にインストールすることはなく、 /usr/bin/make や他のシステム依存のコマンドをいじる必要がありません。
こうすることで、より安全に使用することができ、 Mac OS X や他のサードパーティーのソフトウェアとのインターフェイスを最小限に減らすことができます。</p>
</li>
</ul>
</answer>
</faqentry>
<faqentry name="usr-local" >
<question>
<p>なぜ Fink は /usr/local にインストールしないのですか?</p>
</question>
<answer>
<p>いくつか理由はありますが、共通しているのは、「いつか壊れるから」です。</p>
<p>理由1: サードパーティー・ソフトウェア。
/usr/local は、システムの一部ではないソフトウェアを入れる場所として確立されています。
このため、いろいろなものを入れるには格好の場所ですが、同様に他の人もこの場所にいろいろなものを入れる可能性があります。
ほとんどのインストール・ルーチンはすでにあるものを上書きしてしまいますし、 dpkg もそうします。
もちろん、サードパーティー・ソフトウェアを /usr/local にインストールしないように選択をすることは可能です。
しかし、ほとんどのインストーラは事前に何を何処にインストールするか知らせてくれません。</p>
<p>理由2: /usr/local/bin は、デフォルトの PATH に入っています。
このため、シェルが自動的にインストール・プログラムを見つけてしまいます。
逆にいうと、このプログラムを使いたくない場合は何かしなければなりません。
極端な場合、これはシステム全体に影響します。
多くのパーツはシェルスクリプトに依存しているからです。</p>
<p>理由3: コンパイラ・ツール・チェーンはデフォルトで /usr/local を検索します。
コンパイラは、 /usr/local/include 内でヘッダファイルを検索し、リンカは /usr/local/lib 内でライブラリを検索します。
これがうまくいくときもありますが、そうしたくない時にしないのが非常に難しいです。
コンパイラは、 /usr/local/include に <code>stdio.h</code> という名前のゴミファイルを追加すれば無効化することができます。</p>
<p>以上のことから、 Fink を /usr/local にインストールするのは不可能です。
インストール・スクリプトは警告メッセージを出しますが、これを無視することもできます。
この場合は自己責任で行なって下さい。</p>
</answer>
</faqentry>
<faqentry name="why-sw" >
<question>
<p>ではなぜ /sw を選んだのですか?</p>
</question>
<answer>
<p>
この選択にあまり意味はありませんが、実用上の（アップグレードの）問題と、他のパッケージング・システムとのコンフリクト問題を避けるため、近い将来に変更することはないと思われます。</p>
</answer>
</faqentry>
</chapter>
<chapter filename="relations" >
<title>他のプロジェクトとの関係</title>
<shorttitle>関係</shorttitle>
<faqentry name="upstream" >
<question>
<p>パッチを送るなど、本家のメンテナに貢献していますか?</p>
</question>
<answer>
<p>努力しています。
パッチを送り返すのは簡単で、次のパッケージで皆が満足することもありますが、ほとんどの場合そう簡単にはいきません。
共通の問題:</p>
<ul>
<li>Fink のパッケージメンテナは多忙で、パッチとその説明を本家のメンテナに送る時間がない。</li>
<li>本家のメンテナは、クリーンなコード、クリーンな configure  チェック、他のプラットフォームとの互換性を理由に拒否することがある。</li>
<li>本家のメンテナはパッチを受け入たが、次のバージョンがリリースされるまでに数週間から数カ月かかる。</li>
<li>パッケージのメンテナンスが終了し、これ以上リリースされないためパッチがマージされない。</li>
</ul>
</answer>
</faqentry>
<faqentry name="debian" >
<question>
<p>Debian プロジェクトとは関係がありますか。 Debian Linux を Mac OS X に移植しようとしているのですか?</p>
</question>
<answer>
<p>Fink と <link url="http://www.debian.org" >Debian</link> には公式の関係はありません。
Fink は Debian GNU/Linux ディストリビューションの移植では<em>ありません</em>。
Debian パッケージ管理ツール (dpkg, dselect, apt-get) を移植し、 .deb バイナリパッケージ形式を使ってはいますが、実際のパッケージは Mac OS X / Darwin 専用のものです。</p>
</answer>
</faqentry>
<faqentry name="apple" >
<question>
<p>Apple とは関係がありますか?</p>
</question>
<answer>
<p><link url="http://www.apple.com/" >Apple</link> は Fink を認知していて、オープンソース関連の活動の一環としてサポートしています。
2001年の夏と秋には、 Fink パッケージの修正がリリースに間に合うように、新しい Mac OS X バージョンのプレリリースを提供してくれました。
引用:
<em>
「多くの人が、我々は提供したくないのではと疑ってかかっているので、このことでオープンソースへの貢献を強調できるでしょうか。
我々はオープンソースというゲームに強くなると思います。」
</em>
Apple ありがとう!</p>
</answer>
</faqentry>
<faqentry name="openosx" >
<question>
<p>OpenOSX.com とは関係がありますか?</p>
</question>
<answer>
<p>彼らは Fink を使って GIMP CD のリリースをビルドしましたが、そのことを正しく認めなかった経緯があります。
<link url="http://fink.sourceforge.net/pr/openosx.php" >公式声明</link>に詳細があります。</p>
</answer>
</faqentry>
<faqentry name="forked" >
<question>
<p>macosx.forked.net とは関係がありますか?</p>
</question>
<answer>
<p>このサイトでは、いくつかの Fink パッケージをそのまま Installer.app パッケージとして再配布していますが、Fink については何も書かれていません。
<link url="http://fink.sourceforge.net/pr/forked.php" >公式声明</link>に詳細があります。</p>
</answer>
</faqentry>
<faqentry name="darwinports" >
<question>
<p>Darwinports とは関係がありますか?</p>
</question>
<answer>
<p>Darwinports と Fink は補間的なプロジェクトです。
両者は重なる部分があり、 Fink と OpenDarwin プロジェクトの両方に貢献している人もいま。
例えば、 Benjamin Reed は双方の KDE パッケージを担当しています。
Darwinports/OpenDarwin は Fink からのパッチを利用していて、両者は現在新しいディペンダンシー・エンジンの協働を検討しています。</p>
<p>
OpenDarwin は独自のパッケージ・システムを開発しています。
<link url="http://www.opendarwin.org/projects/darwinports/en/faq.php" >OpenDarwin.org</link>  に詳細があります。</p>
</answer>
</faqentry>
</chapter>
<chapter filename="mirrors">
<title>Fink ミラー</title>
<shorttitle>ミラー</shorttitle>
<faqentry name="when-use">
<question>
<p>Fink ミラーとは何ですか?</p>
</question>
<answer>
<p>Fink ミラーは、パッケージをソースからビルドする際に使う current と stable の詳細ファイルをミラーしている rsync サーバーです。</p>
</answer>
</faqentry>
<faqentry name="why">
<question>
<p>なぜ rsync ミラーを使わないといけないのですか?</p>
</question>
<answer>
<p>
rsync は高速なプロトコルで、古い CVS アップデートによる方法よりも速く詳細ファイルを更新します。
また、 CVS アップデートは常に sourceforge.net から行われるのに対し、 rsync アップデートは近いミラーから行われます。
</p>
</answer>
</faqentry>
<faqentry name="where">
<question>
<p>Fink ミラーの情報はどこにありますか?</p>
</question>
<answer>
<p>Fink ミラーは全て、 finkmirrors.net ドメインに参加しています。
もっと詳しく知りたい方は、ウェブサイト http://finkmirrors.net/ を参照して下さい。</p>
</answer>
</faqentry>
<faqentry name="when-not">
<question>
<p>rsync サーバーに接続できません。どうしたら良いですか?</p>
</question>
<answer>
<p>ファイヤーウォールによっては、 rsync サービスへの接続を許可していない場合もあります。
この場合は CVS 方式を使って下さい。</p>
</answer>
</faqentry>
<faqentry name="otherinfogone">
<question>
<p>rsync 方式に変えたら、unused ツリーの info ファイルが全て消えてしまいました。</p>
</question>
<answer>
<p>これが正しい動作なのです。
rsync アップデート方式はアクティブなツリーだけ更新します。
また、 CVS サブディレクトリの削除も行います。</p>
</answer>
</faqentry>
<faqentry name="howswitch">
<question>
<p>どのように方式を切り替えるのですか?</p>
</question>
<answer>
<p> fink selfupdate-rsync または fink selfupdate-cvs コマンドで、 rsync と CVS を切り替えます。</p>
</answer>
</faqentry>
<faqentry name="status">
<question>
<p>rsync ミラーの現在の状態は見ることが出来ますか?</p>
</question>
<answer><p>http://finkmirrors.net/status.html から見ることが出来ます。</p></answer>
</faqentry>
<faqentry name="Master">
<question>
<p>Distfiles ミラーとは何ですか?</p>
</question>
<answer>
<p>
時としてインターネットから特定バージョンのソースを取得することが困難な場合があります。
Distfiles ミラーはソースパッケージをビルドする際に必要なソースパッケージを保存し、ミラーしています。</p>
</answer>
</faqentry>
</chapter>
<chapter filename="upgrade-fink" >
<title>Fink のアップグレード (バージョン固有の問題対処法)</title>
<shorttitle>Fink のアップグレード</shorttitle>
<faqentry name="gcc-0.16.0">
<question>
<p>バージョン0.16.0にアップグレードして "Your version of the
gcc 3.3 compiler is out of date." と言われました。どうしたらいいですか?</p>
</question>
<answer>
<p>Panther のリリースにともない、 Fink は新しい gcc 3.3 コンパイラに対応するようアップデートされました。
10.2 (Jaguar) と 10.3 (Panther) の両方をサポートするため、すべてのユーザーは最新の gcc 3.3 update (August 2003 Updater または
Panther XCode tools) をインストールする必要があります。
Mac OS X 10.2 の December 2002 developer tools 用 XCode ベータ・アップデータをインストールした場合、この警告が出ます。もし 10.2 であれば、コマンド:</p>
<codeblock>gcc --version</codeblock>
<p>で現在のバージョンがわかります。
2003年10月24日時点で build 1493 かそれ以上が必要です。</p>
<p>10.2 ユーザーは、 August 2003 Updater を <link url="http://developer.apple.com/">Apple Developer Connection</link> からダウンロードできます (無料登録が必要)。</p>
<p>10.3 ユーザーは、 Panther 互換のディベロッパーツール (Xcode など) にアップグレードする必要があります。
XCode の入った CD が Panther に同梱されているはずです。</p>
</answer>
</faqentry>
<faqentry name="fink-0220">
	<question>
		<p>長いこと Fink からのパッケージ更新がありませんでしたが</p>
	</question>
	<answer>
		<p>バージョンを確認してください:</p>
		<codeblock>fink --version</codeblock>
		<p>
			rsync selfupdate が動作しないという既知の問題が <code>fink-0.22.0</code> にあります。
			これを直すために、 CVS selfupdate を行います
		</p>
		<codeblock>fink selfupdate-cvs  </codeblock>
		<p>
			これにより <code>fink</code> が新しくなります。
			この語、 rsync selfupdate に戻すようおすすめします。
		</p>
		<codeblock>fink selfupdate-rsync</codeblock>
	</answer>
</faqentry>
</chapter>
<chapter filename="usage-fink" >
<title>Fink のインストール、使用、メンテナンス</title>
<shorttitle>Fink の使用方法</shorttitle>
<faqentry name="what-packages" >
<question>
<p>Fink がサポートしているパッケージはどのように探せますか?</p>
</question>
<answer>
<p>Fink 0.2.3 以降は、 <code>list</code> コマンドがあります。
このコマンドは、あなたの Fink 環境の管理している全てのパッケージのリストを作成します。
例:
</p>
<codeblock>fink list</codeblock>
<p>バイナリ・ディストリビューションを使っている場合、 <code>dselect</code> でパッケージリストを閲覧することができます。
dselect からパッケージを選択してインストールする場合、 root 権限が必要ですので注意して下さい。</p>
<p>または、本サイトに <link url="http://fink.sourceforge.net/pdb/" >パッケージ・データベース</link> もあります。
</p>
</answer>
</faqentry>
<faqentry name="proxy" >
<question>
<p>ファイヤーウォールの内側にいます。どう設定したら Fink で HTTP プロキシが使えますか?</p>
</question>
<answer>
<p>
<code>fink</code> コマンドは、明示的にプロキシを設定できます。
この設定は <code>wget</code>/<code>curl</code> に渡されます。
新規インストール時に聞かれなかった場合、または設定し直したい場合、 <code>fink configure</code> を実行することができます。
もしインストールガイドを読み、 <filename>/sw/bin/init.csh</filename> (または <filename>/sw/bin/init.sh</filename>) を使ったなら、次のようにプロキシの前にプロトコルをつけるようにして下さい。</p>
<codeblock>ftp://proxy.yoursite.somewhere</codeblock>
<p>もしこれでも問題があるようなら、システム環境設定からネットワークを選択し、プロキシのタブをクリックし、 &quot;Use Passive FTP Mode (PASV)&quot; がチェックされているか確認して下さい。</p>
</answer>
</faqentry>
<faqentry name="firewalled-cvs" >
<question>
<p>ファイヤーウォールの内側から CVS でパッケージをアップデートするにはどうしたらいいですか?</p>
</question>
<answer>
<p>パッケージ <em>cvs-proxy</em> は HTTP プロキシを介して通ります。</p>
<ul>
<li>
<p>
まず、 <link url="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/fink/dists/10.2/unstable/main/finkinfo/devel/" >cvs-proxy</link> 
ファイル (.info と a .patch) をダウンロードし、ローカルツリー ( /sw/fink/dists/local/main/finkinfo/) に入れる。
</p>
</li>
<li>
<p><em>cvs-proxy</em> パッケージを、次のコマンドでインストールする:</p>
<p>
<code>fink install <em>cvs-proxy</em>
</code>
</p>
</li>
<li>
<p>パッケージを次のコマンドでアップデートする:</p>
<p>
<code>fink selfupdate-cvs</code>
</p>
<p>
<code>fink update-all</code>
</p>
</li>
</ul>
<p>fink がプロキシを使うように設定されていなかったら、設定を行ないます:</p>
<p>
<code>fink configure</code></p>
</answer>
</faqentry>
<faqentry name="moving" >
<question>
<p>インストール後に Fink を他の場所に移動できますか?</p>
</question>
<answer>
<p>
できません。
もちろん、 mv やファインダからファイルを動かすことはできますが、 99% の確率で動かなくなるプログラムがでてきます。
これは、全ての Unix ソフトウェアはファイルやライブラリなどを検索するのに、ハードコードのパスに依存しているからである。
</p>
</answer>
</faqentry>
<faqentry name="moving-symlink" >
<question>
<p>Fink をインストール後、他の場所に移動してシンボリックリンクを張ったら、動きますか?</p>
</question>
<answer>
<p>
動くかも知れない。
動くと予想されますが、どこに落し穴があるかわかったものじゃありません。
</p>
</answer>
</faqentry>
<faqentry name="removing" >
<question>
<p>Fink を全てアンインストールするには?</p>
</question>
<answer>
<p>Fink でインストールしたファイルはほとんど /sw (あるいはインストール時に選択した場所) にあります。
なので、 Fink を削除するには、通常このコマンドを入力します:</p>
<codeblock>sudo rm -rf /sw</codeblock>
<p>唯一の例外は XFree86 または X.org です。もし X サーバを Fink でインストールした (<code>xfree86</code> 、
<code>xfree86-rootless</code> または <code>xorg</code> パッケージ) なら、次のコマンドも必要です:
</p>
<codeblock>sudo rm -rf /usr/X11R6 /etc/X11 /Applications/XDarwin.app</codeblock>
<p>Fink をインストールし直すことがないのでしたら、テキストエディタを使い、 <filename>.cshrc</filename> ファイルの中の &quot;<code>source /sw/bin/init.csh</code>&quot; と書かれている行、あるいは <filename>.bashrc</filename> ファイルの中の &quot;<code>source /sw/bin/init.sh</code>&quot; と書かれている行を削除して下さい。</p>
</answer>
</faqentry>
<faqentry name="bindist" >
<question>
<p>ウェブのパッケージデータベースは、パッケージ xxx を表示しているのに、 apt-get と dselect は何もしない。どっちが嘘をついてるのですか?
</p>
</question>
<answer>
<p>
どちらも正しいです。
パッケージデータベースは unstable セクションにあるものも含め、全てのパッケージを管理します。
<code>dselect</code> と <code>apt-get</code> は、コンパイル済みバイナリパッケージしか関与しません。
パッケージがコンパイルされないのは様々な理由があります。
パッケージがコンパイルするかどうかを判定するには、まず最新リリースの &quot;stable&quot; セクションになければなりません。 更にポリシーに合っているか、ライセンスや知的所有権を侵していないかチェックされます。</p>
<p><code>dselect</code> / <code>apt-get</code> が対応していないパッケージをインストールする場合、 <code>fink install <em>packagename</em></code> を使ってソースからコンパイルします。
このコマンドを実行する前に、 Developer Tools がインストールされているか確認して下さい。
(Developer Tools インストーラがない場合、 <link url="http://connect.apple.com/" >Apple Developer Connection</link> で登録後、入手して下さい)
下記の unstable に関する質問も合わせて参照して下さい。
</p>
</answer>
</faqentry>
<faqentry name="unstable" >
<question>
<p>unstable にあるパッケージをインストールしようとすると、 fink が 'no package found' といいます。どうしたらインストールできるのですか?</p>
</question>
<answer>
<p>まず、 'unstable' の意味を理解して下さい。
unstable ツリーにあるパッケージは通常一人以上にはテストされていません。
このため、 Fink はデフォルトでは unstable ツリーを検索するようにはなっていません。
unstable を使用する場合、何か上手くいったら（上手くいかなかっても）メンテナにメールを送るのを忘れないで下さい。
あなたのようなユーザーからのフィードバックが、 stable にするかどうかの判定材料なのです!
メンテナの情報は <code>fink info &lt;packagename&gt;</code> で取得できます。</p>
<p>パッケージには依存性があり、 unstable にあるパッケージは unstable にある他のパッケージに依存していることも多いのです。
このため、全ての unstable を更新するのが最適です。</p>
<p>Fink が unstable を使うようにするには、 <filename>/sw/etc/fink.conf</filename> ファイルの <code>Trees:</code> の行に <code>unstable/main</code> と <code>unstable/crypto</code> を追加します。
この後、 <code>fink selfupdate; fink index</code> を実行します。
</p>
<p>unstable のパッケージのうち、一つか小数だけ使用したいのであれば、 CVS アップデート (<code>fink selfupdate-cvs</code>) に切替えます。デフォルトの rsync は <filename>fink.conf</filename> にあるツリーしかアップデートしないからです。
次に、<filename>/sw/etc/fink.conf</filename> ファイルの <code>Trees:</code> の行に <code>local/main</code> を追加します。
次に、 <code>.info</code> ファイルと <code>.patch</code> ファイルを <filename>/sw/fink/dists/unstable/main/finkinfo</filename> (または <filename>/sw/fink/dists/unstable/crypto/finkinfo</filename>) から、 <filename>/sw/fink/dists/local/main/finkinfo</filename> にコピーします。
注意すべきことは、依存しているパッケージ (または特定のバージョン) も unstable にある可能性があり、これらのパッケージの <code>.info</code> と <code>.patch</code> もコピーしなければなりません。
すべてのファイルをコピーしたら、 <code>fink index</code> を実行します。
これで Fink のパッケージリストがアップデートされます。
この後、 rsync に戻したい場合、 <code>fink selfupdate-rsync</code> を実行します。</p>
</answer>
</faqentry>
<faqentry name="sudo" >
<question>
<p>sudo でパスワードを何度も何度も入力するのは疲れます。何か良い方法はありませんか?</p>
</question>
<answer>
<p>sudo がパスワードを聞いてこないように設定することができます。
root 権限で <code>visudo</code> を開き、次の行を追加します:</p>
<codeblock>username ALL = NOPASSWD: ALL</codeblock>
<p>もちろん、 <code>username</code> は実際のユーザー名に変えて下さい。</p>
</answer>
</faqentry>
<faqentry name="exec-init-csh" >
<question>
<p>init.csh or init.sh を実行しようとすると、 &quot;Permission denied&quot; エラーが出ます。
何がおかしいのですか?</p>
</question>
<answer>
<p>init.csh と init.sh は通常のコマンドのように実行するものではありません。
これらのファイルは環境変数の PATH や MANPATH を設定するものです。
これをシェルに保持させるには、csh/tcsh では <code>source</code> コマンド、bash/zsh では <code>.</code> コマンドを使い:</p>
<p> csh/tcsh の場合:</p>
<codeblock>source /sw/bin/init.csh</codeblock>
<p> bash の場合:</p>
<codeblock>. /sw/bin/init.sh</codeblock>
<p>と入力します。</p>
</answer>
</faqentry>
<faqentry name="dselect-access" >
<question>
<p>うぎゃ! dselect で &quot;[A]ccess&quot; メニューを使ったら、パッケージをダウンロードできなくなった!</p>
</question>
<answer>
<p>
おそらく、 apt を Debian ミラーを指定したのでしょう。
当然、 Debian ミラーには Fink ファイルはありません。
これを直す方法には、手動と dselect を通す二通りがあります。
手動では、 root 権限で <code>/sw/etc/apt/sources.list</code> ファイルを開き、 debian.org の行を削除して:
</p>
<codeblock>deb http://us.dl.sourceforge.net/fink/direct_download release main crypto
deb http://us.dl.sourceforge.net/fink/direct_download current main crypto</codeblock>
<p>に置き換えます (日本では <code>jp.dl.sourceforge.net</code>) 。</p>
<p>dselect を通すには、再度 &quot;[A]ccess&quot; を実行し、 &quot;apt&quot; を選択して:</p>
<p>
URL: http://us.dl.sourceforge.net/fink/direct_download -
Distribution: release -
Components: main crypto
</p>
<p>と入力します。
他の source を追加するならば、  &quot;release&quot; の部分を &quot;current&quot; と変えて繰り返して下さい。
</p>
<p>現在、 apt パッケージの修正版 (設定スクリプトが dselect のプラグインとして付随) が CVS から入手できます。</p>
</answer>
</faqentry>
<faqentry name="cvs-busy" >
<question>
<p><quote>fink selfupdate</quote> か &quot;fink selfupdate-cvs&quot; を実行しようとした時、  &quot;<code>Updating using CVS failed. Check the error messages above.</code>&quot; エラーが出ました。</p>
</question>
<answer>
<p>メッセージが、</p>
<codeblock>Can't exec &quot;cvs&quot;: No such file or directory at
/sw/lib/perl5/Fink/Services.pm line 216, &lt;STDIN> line 3.
### execution of cvs failed, exit code -1</codeblock>
<p>であれば、 Developer Tools をインストールする必要があります。</p>
<p>もし最後の行が、</p>
<codeblock>### execution of su failed, exit code 1</codeblock>
<p>であれば、エラーを詳細に見る必要があります。
もし接続が拒否されたとあれば:</p>
<codeblock>(Logging in to anonymous@cvs.sourceforge.net)
CVS password:
cvs [login aborted]: connect to cvs.sourceforge.net:2401 failed:
Connection refused
### execution of su failed, exit code 1
Failed: Logging into the CVS server for anonymous read-only access failed.</codeblock>
<p>あるいは</p>
<codeblock>cvs [update aborted]: recv() from server cvs.sourceforge.net:
Connection reset by peer
### execution of su failed, exit code 1
Failed: Updating using CVS failed. Check the error messages above.</codeblock>
<p>あるいは</p>
<codeblock>cvs [update aborted]: End of file received from server</codeblock>
<p>あるいは</p>
<codeblock>cvs [update aborted]: received broken pipe signal</codeblock>
<p>であれば、 cvs サーバが過負荷になっていると思われますので、時間をおいてアップデートを試してみて下さい。</p>
<p>この他、パーミッションをもっていない可能性もあります。
この場合は &quot;Permission denied&quot; メッセージ:</p>
<codeblock>cvs update: in directory 10.2/stable/main:
cvs update: cannot open CVS/Entries for reading: No such file or directory
cvs server: Updating 10.2/stable/main
cvs update: cannot write 10.2/stable/main/.cvsignore: Permission denied
cvs [update aborted]: cannot make directory 10.2/stable/main/finkinfo: No 
such file or directory
### execution of su failed, exit code 1
Failed: Updating using CVS failed. Check the error messages above.
</codeblock>
<p>が出ます。この場合は cvs ディレクトリをリセットする必要があります。コマンド:</p>
<codeblock>sudo find /sw/fink -type d -name 'CVS' -exec rm -rf {} \;
fink selfupdate-cvs</codeblock>
<p>を入力して下さい。</p>
<p>以上のいずれのメッセージとも異なる場合、おそらく /sw/fink/dists 内のファイルを、あなたとメンテナの双方が書き換えたためです。
selfupdate-cvs の出力で、 &quot;C&quot; から始まる行で:</p>
<codeblock>C 10.2/unstable/main/finkinfo/libs/db31-3.1.17-6.info
...
(other info and patch files)
...
### execution of su failed, exit code 1
Failed: Updating using CVS failed. Check the error messages above.</codeblock>
<p>のようになっている箇所を探して下さい。
&quot;C&quot; というのは CVS で最新版へ更新時にコンフリクトがあったことを意味しています。</p>
<p>これを修正するには、 selfupdate-cvs の出力にでてきたファイルを一つずつ削除して、コマンドを再実行します。</p>
<codeblock>sudo rm /sw/fink/10.2/unstable/main/finkinfo/libs/db31-3.1.17-6.info
fink selfupdate-cvs</codeblock>
</answer>
</faqentry>
<faqentry name="kernel-panics" >
<question>
<p>Fink を使うと、マシンがフリーズする/カーネルパニックする/固まる。助けて!</p>
</question>
<answer>
<p>最近の
<link url="http://sourceforge.net/mailarchive/forum.php?forum=fink-users" >fink-users mailing list</link>
の報告によると、こういった問題 (カーネルパニックやパッチ当て中の無限ループを含む) が発生するのはアンチウィルスソフトウェアがインストールされている時です。
Fink を使う際はアンチウィルスソフトウェアを終了する必要があるかもしれません。</p>
</answer>
</faqentry>
<faqentry name="not-found" >
<question>
<p>パッケージをインストールしようとすると、 Fink がダウンロードできません。
ダウンロードサイトとは Fink よりも新しいバージョンを示しています。
何をしたらいいですか?</p>
</question>
<answer>
<p>新しいバージョンのリリースにともない、本家サイトでのパッケージソースが移動しました。</p>
<p>最初にまず  <code>fink selfupdate</code> を実行して下さい。
メンテナが既に修正している場合、新しいバージョンか別のダウンロード URL のパッケージ詳細を取得できます。</p>
<p>もしこれでも問題が残るなら、ほとんどのソースは
<link url="http://distfiles.master.finkmirrors.net/">http://distfiles.master.finkmirrors.net/</link>
にある (Rob Braun 氏に感謝) ので、 <code>fink configure</code> を実行して &quot;Master&quot; ソースミラー を検索して下さい。
Fink が自動的にここを探しにいきます。
</p>
<p>これでも問題が残るなら、パッケージメンテナ
(&quot;<code>fink describe <em>packagename</em></code>&quot; からわかります)
に URL が壊れている旨を知らせて下さい。
メンテナがいつでもメーリングリストを読んでいるとは限りません。</p>
<p>使えるソースを入手するには、まずは他のディレクトリ (&quot;old&quot; ディレクトリなど)  にあるリモートサイトの中で必要なバージョンを探して見て下さい。
もし公式サイトになければ、ウェブを検索してみて下さい。
非公式サイトに必要なバージョンの tarball が見つかることがあります。
他には <link url="http://us.dl.sourceforge.net/fink/direct_download/source/" >http://us.dl.sourceforge.net/fink/direct_download/source/</link> があります。
ここは Fink がバイナリとしてリリースされたパッケージのソースファイルを保存する場所です。
いずれも駄目な場合、
<link url="http://sourceforge.net/mailarchive/forum.php?forum=fink-users" >fink-users mailing list</link>
で古いソースをもっている人を探してみて下さい。
</p>
<p>Once you locate the proper source tarball, download it manually, and then move the file into your Fink source location (i.e. for a default Fink install,
もしソースの tarball が見つかったら、手動でダウンロードし、 Fink ソース保存先に移して下さい:
&quot;<code>sudo mv <em>package-source.tar.gz</em> /sw/src/</code>&quot;
この後、通常通り '<code>fink install <em>packagename</em></code>' して下さい。</p>
<p>ソースファイルが見つからない場合、メンテナが問題に対処するまで待つしかありません。
古いソースか、新しいバージョン用の .info と .patch ファイルへのリンクが投稿されることでしょう。</p>
</answer>
</faqentry>
<faqentry name="fink-not-found" >
<question>
<p>Fink や Fink でインストールしたものを実行しようとすると
&quot;command not found&quot; エラーが出ます。</p>
</question>
<answer>
<p>常にこのエラーが出るようでしたら、誤ってスタートアップスクリプトを書き換えてしまったと思われます。
<filename>/sw/bin/pathsetup.command</filename> スクリプトを実行
(ファインダからダブルクリックするか、ターミナルから実行)
すると、初期の設定を検出しようとします。
この後、新規ターミナルを開いて環境変数が読み込まれているか確認して下さい。
<em>注記:</em>
<code>fink-0.18.3</code> と <code>fink-0.19.2</code> では、スクリプトは
<filename>/sw/bin/pathsetup.sh</filename>
になりました。
必ずターミナル上で実行して下さい。
</p> 
<p>このエラーが Apple X11 ターミナルでのみ出る場合，
<link url=" http://fink.sourceforge.net/doc/x11/run-xfree86.php#xinitrc ">.xinitrc</link> 
というファイルを作成し、</p>
<codeblock>. /sw/bin/init.sh</codeblock> 
<p>の一行を最初の方
(他のプログラムが実行される前)
に追加します。
X11 が立ち上がっている場合、リスタートします。</p> 
<codeblock>source ~/.cshrc</codeblock>
</answer>
</faqentry>
<faqentry name="invisible-sw" >
<question>
<p>Finder で /sw を隠して、ユーザーが Fink の構成を壊すのを防ぎたい。</p>
</question>
<answer>
<p>できます。
Development Tools がインストールされていれば、次のコマンドを実行してください:</p>
<codeblock>sudo /Developer/Tools/SetFile -a V /sw</codeblock>
<p>これで /sw が標準的なシステムのフォルダ (/usr など) のように不可視になります。
Developer Tools がない場合はサードパーティー製のアプリケーションで /sw が不可視になるよう、属性値を変更してください。</p>
</answer>
</faqentry>
<faqentry name="install-info-bad" >
<question>
<p>何もインストールできません。
&quot;install-info: unrecognized option `--infodir=/sw/share/info'&quot;
のエラーが出るだけです。</p>
</question>
<answer>
<p>これは普通、 PATH の問題です。ターミナルで:</p>
<codeblock>printenv PATH</codeblock>
<p>と入力し、 <filename>/sw/sbin</filename> が出てこないなら、環境変数を
<link url="http://fink.sourceforge.net/doc/users-guide/install.php#setup" >instructions</link>
内の Users Guide を参照してください。
<filename>/sw/sbin</filename> があるが、他のディレクトリ (例えば /usr/local/bin) 
がそれより前にある場合、 PATH の順序を変えて先頭近くに移動してください。
どうしても順序を変えられない理由があるならば、 Fink を使う時に Fink ではない方の <filename>install-info</filename> のディレクトリ名を一時的に変える必要があります。</p>
</answer>
</faqentry>
<faqentry name="bad-list-file" >
<question>
<p>何もインストールできないし、削除もできません。 &quot;files list file&quot; と出るだけです。</p>
</question>
<answer>
<p>通常、このエラーはこういう形で出ます:</p>
<codeblock>files list file for package <em>packagename</em> contains empty filename</codeblock>
<p>または</p>
<codeblock>files list file for package <em>packagename</em> is missing final newline</codeblock>
<p>This can be fixed, with a little work. If you have the .deb file for the offending package currently available on your system, then check its integrity by running
これは直すことができます。
エラーメッセージ中のパッケージの .deb ファイルがシステム上にあれば、その状態を確認します:
</p>
<codeblock>dpkg --contents <em>full-path-to-debfile</em>
</codeblock>
<p>例えば</p>
        <codeblock>dpkg --contents
        /sw/fink/debs/libgnomeui2-dev_2.0.6-2_darwin-powerpc.deb</codeblock>
<p>ディレクトリやファイルの一覧が表示されたら、 .deb ファイルは大丈夫です。
もし出力されたのがファイルやディレクトリ以外であるか、 .deb ファイルがなくても、このエラーはビルドに影響しないので、次に進んでください。
</p>
<p>バイナリインストールを試みている場合、あるいはインストールしたバージョンと現在のバイナリバージョンが一致する場合
(例えば、 <link url="http://fink.sourceforge.net/pdb/index.php" >パッケージデータベース</link> で調べたなら)、
.deb ファイルを取得することができます:
<code>sudo apt-get install --reinstall --download-only <em>packagename</em></code>
。あるいは、自分でビルドすることもできます:
<code>fink rebuild <em>packagename</em></code>
。この時点ではまだインストールはされていません。</p>
<p>.deb ファイルを作成したら、ファイルを再構築することができます。
まず、 root になるために <code>sudo -s</code> と入力します (必要があれば管理ユーザーパスワードを入力する) 。
次に、このコマンドを入力します (一行で - 画面上では複数行になっていますが)
</p>
<codeblock>dpkg -c <em>full-path-to-debfile</em>  | awk '{if ($6 == &quot;./&quot;){ print &quot;/.&quot;; } \
else if (substr($6, length($6), 1) == &quot;/&quot;) \
{print substr($6, 2, length($6) - 2); } \
else { print substr($6, 2, length($6) - 1);}}' \
&gt; /sw/var/lib/dpkg/info/<em>packagename</em>.list</codeblock>
<p>例えば、</p>
<codeblock>dpkg -c /sw/fink/debs/libgnomeui2-dev_2.0.6-2_darwin-powerpc.deb | awk \
'{if ($6 == &quot;./&quot;) { print &quot;/.&quot;; } \
else if (substr($6, length($6), 1) == &quot;/&quot;) \
{print substr($6, 2, length($6) - 2); } \
else { print substr($6, 2, length($6) - 1);}}' \
&gt; /sw/var/lib/dpkg/info/libgnomeui2-dev.list</codeblock>
<p>このコマンドは、 .deb ファイルの中身を解凍して、ファイル名以外を除いて .list ファイルに書き込んでいます。</p>
</answer>
</faqentry>
<faqentry name="error-nineteen" >
<question>
<p>Fink バイナリインストーラを使うと、ウィンドウ中に大きく &quot;19&quot; と出て、何もインストールできません。</p>
</question>
<answer>
<p>19 という数字は、 OS X システムのシステム言語が英語以外になっている時に出ることがあります。
(これは Apple のインストーラのバグで、英語でエラーメッセージを出さないだけです。)</p>
<p>この19番のメッセージは、英語ではこうなっています。</p>
<p>&quot;A root directory /sw exists. Please see the Read Me file for update instructions, or for information on installing Fink on a separate volume.&quot;</p>
<p>このエラーは、以前 Fink を使っていて、 <filename>/sw</filename> を削除していないと発生します。
もし Fink をインストールしたことがなければ、 いちばん可能性が高いのは Virex プログラムをインストールしたためです。
これは .Mac ユーザーには無料で、 Fink のウェブサイトにあるとおり Fink とは互換性がありません。
(Virex 側の独自方式が原因です)
</p>
</answer>
</faqentry>
<faqentry name="dselect-garbage" >
<question>
<p><filename>dselect</filename> でパッケージを選択すると、大量のゴミがでてきます。
これはどうやったら使えますか?</p>
</question>
<answer>
<p><filename>dselect</filename> と <filename>Terminal.app</filename> の関係に問題があります。
どうにかするには、 <filename>dselect</filename> を実行する前に次のコマンドを入力してください:
</p>
<p>tcsh の場合:</p>
<codeblock>setenv TERM xterm-color</codeblock>
<p>before you run <filename>dselect</filename>.</p>
<p>bash の場合:</p>
<codeblock>export TERM=xterm-color</codeblock>
<p>このコマンドをログイン時に自動的に実行するには、起動ファイル (例 <code>.cshrc</code> | <code>.profile</code>) に記述して下さい。</p>
</answer>
</faqentry>
<faqentry name="perl-undefined-symbol" >
<question>
<p>なぜ Fink コマンドを実行すると &quot;dyld: perl undefined symbols&quot; エラーが大量にでるのですか?</p>
</question>
<answer>
<p>古すぎる情報</p>
<p>このようなエラー:</p>
<codeblock>dyld: perl Undefined symbols: 
_Perl_safefree
_Perl_safemalloc
_Perl_saferealloc
_Perl_sv_2pv
_perl_call_sv
_perl_eval_sv
_perl_get_sv</codeblock>
<p>がでる場合、 Perl を アップデートしていて、 <filename>storable-pm</filename> をアップグレードする必要があります。
Fink をアップグレードしてください。
インストール時に、 <filename>perl-core</filename> と <filename>system-perl</filename> のどちらをインストールするか聞かれるので、後者を選択してください。
さらに、 <filename>storable-pm</filename> もアップデートしてください。</p>
<p>OS 10.1.x では、次のコマンドを実行します (Developer Tools が必要です):</p>
<codeblock>sudo mv /sw/lib/perl5/darwin/Storable.pm /tmp
sudo mv /sw/lib/perl5/darwin/auto/Storable /tmp
fink rebuild storable-pm
fink selfupdate-cvs</codeblock>
</answer>
</faqentry>
<faqentry name="cant-upgrade" >
<question>
<p>Fink のバージョンをアップデートできないようです。</p>
</question>
<answer>
<p>この状況専用の <link url="http://fink.sourceforge.net/download/fix-upgrade.php" >special instructions</link> に従ってください。</p>
</answer>
</faqentry>
<faqentry name="spaces-in-directory" >
<question>
<p>名前に空白が入っているボリュームやディレクトリに Fink を入れることはできますか?</p>
</question>
<answer>
<p>名前に空白が入っているディレクトリに Fink を入れるないよう薦めます。</p>
</answer>
</faqentry>
<faqentry name="packages-gz">
<question>
<p>バイナリアップデートをしようとすると、 &quot;File not found&quot; というメッセージが大量に出ます。</p>
</question>
<answer><p>もし次のようであれば:</p>
<codeblock>
Err file: local/main Packages
File not found
Ign file: local/main Release
Err file: stable/main Packages
File not found
Ign file: stable/main Release
Err file: stable/crypto Packages
File not found
Ign file: stable/crypto Release
Hit http://us.dl.sourceforge.net 10.3/release/main Packages
Hit http://us.dl.sourceforge.net 10.3/release/main Release
Hit http://us.dl.sourceforge.net 10.3/release/crypto Packages
Hit http://us.dl.sourceforge.net 10.3/release/crypto Release
Hit http://us.dl.sourceforge.net 10.3/current/main Packages
Hit http://us.dl.sourceforge.net 10.3/current/main Release
Hit http://us.dl.sourceforge.net 10.3/current/crypto Packages
Hit http://us.dl.sourceforge.net 10.3/current/crypto Release
Failed to fetch
file:/sw/fink/dists/local/main/binary-darwin-powerpc/Packages
File not found
Failed to fetch
file:/sw/fink/dists/stable/main/binary-darwin-powerpc/Packages
File not found
Failed to fetch
file:/sw/fink/dists/stable/crypto/binary-darwin-powerpc/Packages
File not found
Reading Package Lists... Done
Building Dependency Tree... Done
E: Some index files failed to download, they have been ignored, or old
ones used instead.

update available list script returned error exit status 1.
</codeblock>
<p><code>fink scanpackages</code> をするだけです。
これによって見つからなかったファイルを作成します。</p>
</answer>
</faqentry>
<faqentry name="wrong-tree"> 
<question> 
<p>OS | Developer Tools を変えたら、 Fink が認識してくれません。</p> 
</question> 
<answer> 
<p>Fink ディストリビューション（ソースとバイナリはそのサブセットです）を変更するには、 Fink に指示する必要があります。
これは Fink の新規インストール時に実行するスクリプトを実行します:
</p> 
<codeblock>/sw/lib/fink/postinstall.pl</codeblock> 
<p>これにより、 Fink は正しく場所を指示されます。</p> 
</answer> 
</faqentry> 
<faqentry name="seg-fault"> 
<question> 
<p>何かをインストールしようとしたら <code>gzip</code> | <code>dpkg-deb</code> のエラーが出る! 助けて!</p> 
</question> 
<answer> 
<p>以下の形式のエラー:</p> 
<codeblock>gzip -dc /sw/src/dpkg-1.10.9.tar.gz | /sw/bin/tar -xf - 
### execution of gzip failed, exit code 139</codeblock> 
<p>あるいは</p> 
<codeblock>gzip -dc /sw/src/aquaterm-0.3.0a.tar.gz | /sw/bin/tar -xf - 
gzip: stdout: Broken pipe 
### execution of gzip failed, exit code 138</codeblock> 
<p>あるいは</p> 
<codeblock>dpkg-deb -b root-base-files-1.9.0-1 
/sw/fink/dists/unstable/main/binary-darwin-powerpc/base 
### execution of dpkg-deb failed, exit code 10 
Failed: can't create package base-files_1.9.0-1_darwin-powerpc.deb</codeblock> 
<p>であれば、バイナリにおけるプリバインドのエラーです。修正するには:</p> 
<codeblock>sudo /sw/var/lib/fink/prebound/update-package-prebinding.pl -f</codeblock> 
<p>と実行します。</p> 
</answer> 
</faqentry> 
<faqentry name="pathsetup-keeps-running"> 
<question> 
<p>ターミナルウィンドウを開くと、
&quot;Your environment seems to be correctly set up for Fink already.&quot;
というメッセージが出てログアウトします。</p> 
</question> 
<answer> 
<p>
これは、何らかの理由で OSX ターミナルがログインする度に
<code>/sw/bin/pathsetup.command</code>
 を実行するように設定されているからです。
修正するには、 初期設定ファイル <code>~/Library/Preferences/com.apple.Terminal.plist</code> を削除します。</p> 
<p>他の設定を失いたくない場合、削除する代わりにテキストエディタでこのファイルを開き、
<code>/sw/bin/pathsetup.command</code>
と書かれている部分を削除します。</p> 
</answer> 
</faqentry>
<faqentry name="ext-drive">
<question>
	<p>
	メインパーティション以外に Fink をインストールしていますが、
	ソースからの更新ができません。
	<quote>chowname</quote> を含んだエラーが出ます。
	</p>
</question>
<answer>
<p>このようなエラーであれば:</p>
<codeblock>This first test is designed to die, so please ignore the error
 message on the next line.
 # Looks like your test died before it could output anything.
 ./00compile............................ok
 ./Base/initialize......................ok
 ./Base/param...........................ok
 ./Base/param_boolean...................ok
 ./Command/cat..........................ok
 ./Command/chowname.....................#
 Failed test (./Command/chowname.t at line 27)
 #          got: 'root'
 #     expected: 'nobody'</codeblock>
<p>
、Fink がインストールされているドライブ/パーティションを
「<em>情報を見る</em>」し、 &quot;所有権を無視する&quot; を外します。
</p>
</answer>
</faqentry>
<faqentry name="mirror-gnu">
<question>
	<p>
	Fink がパッケージを更新しません。
	'gnu' ミラーが見つからないと言っています。
	</p>
</question>
<answer>
	<p>
	エラーの最後が、
	</p>
	<codeblock>Failed: No mirror site list file found for mirror 'gnu'.</codeblock>
	<p>
	である場合、 <code>fink-mirrors</code> を以下のように更新します:
	</p>
	<codeblock>fink install fink-mirrors</codeblock>
</answer>
</faqentry>
<faqentry name="cant-move-fink">
<question>
	<p>
	Fink を更新できません。
	/sw/fink を移動できないからです。
	</p>
</question>
<answer>
	<p>このエラー:</p>
	<codeblock>Failed: Can't move "/sw/fink" out of the way.</codeblock>
	<p>
	は通常、エラーメッセージと異なり、パーミッションの問題で、
	<code>selfupdate</code> の作成した仮フォルダのひとつにあります。
	これを削除するには:
	</p>
	<codeblock>sudo rm -rf /sw/fink.tmp /sw/fink.old</codeblock>
	</answer>
</faqentry>
</chapter>
<chapter filename="comp-general" >
<title>コンパイルの問題 - 一般</title>
<shorttitle>コンパイル (1)</shorttitle>
<faqentry name="compiler" >
<question>
<p>configure スクリプトが &quot;acceptable cc&quot; が見つからないといってきます。
これは何ですか?</p>
</question>
<answer>
<p>ドキュメンテーションを読んでください。
パッケージをソースからコンパイルするには、 Developer Tools が必要です。
これには、 C コンパイラ <code>cc</code> など必要なものが入っています。
</p>
</answer>
</faqentry>
<faqentry name="cvs" >
<question>
<p>&quot;fink selfupdate-cvs&quot; をしようとしたら、このメッセージが出てきました: &quot;cvs: Command not found.&quot;
</p>
</question>
<answer>
<p>Developer Tools をインストールする必要があります。</p>
</answer>
</faqentry>
<faqentry name="missing-make">
<question>
<p><code>make</code> に関連したエラーがでました。</p>
</question>
<answer>
<p>もしメッセージが以下のようであれば</p>
<codeblock>make: command not found</codeblock>
<p>あるいは</p>
<codeblock>Can't exec &quot;make&quot;: No such file or directory at /sw/lib/perl5/Fink/Services.pm line 190.</codeblock>
<p>Developer Tools をインストールする必要があります。</p>
<p>もしメッセージが以下のようであれば</p>
<codeblock>make: illegal option -- C</codeblock>
<p>
Developer Tools に入っていた GNU 版の <code>make</code> ユーティリティーを、 BSD 版の make に換えてしまったようです。
パッケージの中には GNU 版の make でのみサポートされている特殊機能に依存しているものも多いので、 
<code>/usr/bin/make</code> が <code>gnumake</code> のシンボリックリンクであることを確認してください。
<code>bsdmake</code> ではありません。
さらに、 <code>/usr/local/bin/</code> に他の <code>make</code> がないことも確認してください。
</p>
</answer>
</faqentry>
<faqentry name="head" >
<question>
<p>head コマンドから変な使用方法メッセージが出ています。何がおかしいのですか?</p>
</question>
<answer>
<p>もしこれでしたら:</p>
<codeblock>Unknown option: 1
Usage: head [-options] &lt;url>...</codeblock>
<p>(後にオプションの説明リストが続く)
<code>head</code> が壊れています。
これは Perl libwww ライブラリを HFS+ システムボリュームにインストールすると起こります。
この時 <code>/usr/bin/HEAD</code> をインストールしようとするのですが、このファイルシステムは大文字と小文字を区別しないので、 <code>head</code> を上書きしてしまいます。
<code>head</code> の方はシェルスクリプトや Makefile で良く使われる標準的なコマンドです。
Fink を使うには、オリジナルの方の <code>head</code> に戻す必要があります。</p>
<p>ソースリリースのブートストラップスクリプトは、現在はこれを確認しますが、最初のインストールにバイナリリリースを使う場合、あるいは Fink をインストールした後で libwww をインストールする場合、まだこの問題に当たります。</p>
<p>この問題は、 <filename>/sw/bin/HEAD</filename> をインストールした場合も起こることが報告されています (Fink のパッケージではありません)。
これは簡単に解決できます: rename <filename>/sw/bin/HEAD</filename> </p>
</answer>
</faqentry>
<faqentry name="also_in" >
<question>
<p>あるパッケージをインストールしようとすると、他のパッケージのファイルを上書きしようとしているというエラーメッセージが出ました。
</p>
</question>
<answer>
<p>これはスプリットオフパッケージ (-dev, -shlibs などがついてるもの) において、ファイルが移動する時 (<code>foo</code> から <code>foo-shlibs</code> など) に発生することがあります。
両者は実質同じものなので、インストールしようとしているパッケージから上書きしてしまっても良いでしょう:
</p>
<codeblock>sudo dpkg -i --force-overwrite <em>filename</em>
</codeblock>
<p>ここで <em>filename</em> はインストールしようとしているパッケージ用の .deb ファイルです。</p>
</answer>
</faqentry>
<faqentry name="weak_lib" >
<question>
<p>December 2002 Development Tools をインストールしてから、このメッセージが出るようになった: &quot;weak libraries&quot;</p>
</question>
<answer>
<p>これは December 2002 Tools のものです。
次のようなメッセージが出ることがあります (libgdk-pixbuf を例に選んでいます):</p>
<p>
<code>ld: warning dynamic shared library: /sw/lib/libgdk-pixbuf.dylib not made a weak library in output with MACOSX_DEPLOYMENT_TARGET environment variable set to: 10.1</code>
</p>
<p>これは実害はないといえます。
興味があれば、開発用ドキュメンテーションディレクトリの、特に GCC とリンカの、リリースノートをお読みください。
本質的には、弱い参照を使用するアプリケーションが、起動時に実行時の存在しないシンボルを致命的エラーとみなすかどうかに関わってきます。</p>
</answer>
</faqentry>
<faqentry name="mv-failed" >
<question>
<p>パッケージをインストールしようとした時の &quot;execution of mv failed, exit code 1&quot; とはどういう意味ですか?</p>
</question>
<answer>
<p>StuffIt Pro がインストールされている場合、 &quot;Archive Via Real Name&quot; モードが設定されていると思われます。
システム環境設定の StuffIt 設定で "ArchiveViaRealName" を無効化してください。
これはいくつかの重要なシステムコールのバ再実装のバグで、この件のような不思議なエラーをたくさん出します。</p>
<p>この問題でない場合、 <filename>mv</filename> のエラーは通常、ビルドの前の方で発生した別のエラーを意味しています。
エラーは発生したもののビルドは続行したものです。
問題のあったファイルを追跡するには、ビルドの出力中の存在しないファイルを探します。
例えば:</p>
<codeblock>mv /sw/src/root-foo-0.1.2-3/sw/lib/libbar*.dylib \
 /sw/src/root-foo-shlibs-0.1.2-3/sw/lib/
 mv: cannot stat `/sw/src/root-foo-0.1.2-3/sw/lib/libbar*.dylib':
 No such file or directory
### execution of mv failed, exit code 1
Failed: installing foo-0.1.2-3 failed</codeblock>
<p>この場合、 <filename>libbar</filename> ファイルをビルド出力の前の方で探します。</p>
</answer>
</faqentry>
<faqentry name="node-exists" >
<question>
<p>'&quot;node&quot; already exists' というエラーメッセージが出て、インストール | アップデートができません。</p>
</question>
<answer>
<p>このようなエラーが出ます:</p>
<codeblock>Failed: Internal error: node for system-xfree86 already exists</codeblock>
<p>パッケージ info ファイルが変更されて依存性エンジンが混乱しているために出た問題です。
修正するには:</p>
<ul>
<li>
<p>問題のあるパッケージを強制削除する。上の例の場合は:</p>
<codeblock>sudo dpkg -r --force-all system-xfree86</codeblock>
</li>
<li>
<p>再びインストール | アップグレードする。
途中、削除したパッケージの &quot;virtual dependency&quot; のプロンプトが出てくるので、これを選択する。
こうするとビルド中に再インストールされる。</p>
</li>
</ul>
</answer>
</faqentry>
<faqentry name="usr-local-libs" >
<question>
	<p>/usr/local にインストールされているライブラリやヘッダが 
	Fink のビルドの問題を起こすことがあると聞いたけど、本当ですか?</p>
</question>
<answer>
<p>そういう場合もよくあります。
これは、パッケージの configure スクリプトは Fink のパスより先に <filename>/usr/local</filename> 
の中のライブラリとヘッダを検索するからです。
もし問題が発生して、他の FAQ で解決ができそうになければ、 
<filename>/usr/local/lib</filename> のライブラリと <filename>/usr/local/include</filename>
のヘッダを確認してください。
これが原因そうであれば、 <filename>/usr/local</filename> の名前を一時的に変えてください。
例えば:</p>
<codeblock>sudo mv /usr/local /usr/local.moved</codeblock>
<p>ビルド後、 <filename>/usr/local</filename> を元に戻しください:</p>
<codeblock>sudo mv /usr/local.moved /usr/local</codeblock>
</answer>
</faqentry>
<faqentry name="toc-out-of-date" >
<question>
<p>パッケージをビルドしようとしたら、 &quot;table of contents&quot; が古いというメッセージが出ました。何をしたらいいですか?
</p>
</question>
<answer>
<p>このメッセージは重要なヒントです。
メッセージはこのようなものだと思われます:</p>
<codeblock>ld: table of contents for archive: /sw/lib/libintl.a is out of date; 
rerun ranlib(1) (can't load from it)</codeblock>
<p>この問題を起こしているライブラリに (root で) ranlib を実行する必要があります。
例えば、この例では:</p>
<codeblock>sudo ranlib /sw/lib/libintl.a</codeblock>
</answer>
</faqentry>
<faqentry name="fc-atlas" >
<question>
<p>atlas をインストールしようとすると、 Fink Commander がハングアップします。</p>
</question>
<answer>
<p><code>atlas</code> のビルド中にユーザーにプロンプトを送るステップがあり Fink Commander がこれを表示しないからです。
代わりに <code>fink install atlas</code> とする必要があります。</p>
</answer>
</faqentry>
<faqentry name="basic-headers" >
<question>
<p><filename>stddef.h</filename> | <filename>wchar.h</filename> | <filename>crt1.o</filename> が見つからない、
あるいは、&quot;C compiler cannot create executables&quot; というメッセージが出ます。
これはどこにありますか?</p>
</question>
<answer>
<p>これらの問題は、いずれも Developer Tools の DevSDK によって提供されるヘッダファイルがないためです。
<filename>/Library/Receipts/DevSDK.pkg</filename> がシステムにあるか確認し、なければ  Dev Tools インストーラを起動してカスタムインストールを選択、 DevSDK パッケージをインストールして下さい。</p>
<p>&quot;cannot create executables&quot; エラーは、Developer Tools のバージョンが 以前のバージョンの OS 用である場合にも発生します。</p>
</answer>
</faqentry>
<faqentry name="multiple-dependencies" >
<question>
<p>Fink が &quot;unable to resolve version conflict on multiple dependencies&quot; と言って、アップデートできません。</p>
</question>
<answer>
<p>この問題を解決するには、パッケージを一つだけアップデートしてみてください。
次に、再度 &quot;fink update-all&quot; を試してみてください。
まだ問題が出るようなら、これを繰り返してください。
</p>
</answer>
</faqentry>
<faqentry name="dpkg-parse-error" >
<question>
<p>&quot;dpkg: parse error, in file `/sw/var/lib/dpkg/status'&quot;
というメッセージが出て、何もインストールできません!</p>
</question>
<answer>
<p>これは dpkg データベースが壊れてしまったか、クラッシュか他のリカバーできないエラーが原因です。
以前のバージョンのデータベースをコピーして直すことができます:</p>
<codeblock>sudo cp /sw/var/lib/dpkg/status-old /sw/var/lib/dpkg/status</codeblock>
<p>この問題が起きた最後の二つのパッケージを再インストールしたほうがよいでしょう。</p>
</answer>
</faqentry>
<faqentry name="freetype-problems"> 
<question> 
<p>freetype に関係したエラーが出ます。</p> 
</question> 
<answer> 
<p>freetype に関係したエラーにはいくつかありますが、もしこのようなものであれば:</p> 
<codeblock>/sw/include/pango-1.0/pango/pangoft2.h:52: error: parse error before '*' token 
/sw/include/pango-1.0/pango/pangoft2.h:57: error: parse error before '*' token 
/sw/include/pango-1.0/pango/pangoft2.h:61: error: parse error before '*' token 
/sw/include/pango-1.0/pango/pangoft2.h:86: error: parse error before &quot;pango_ft2_font_get_face&quot;
/sw/include/pango-1.0/pango/pangoft2.h:86: warning: data definition has no type or storage class 
make[2]: *** [rsvg-gz.lo] Error 1 
make[1]: *** [all-recursive] Error 1 
make: *** [all-recursive-am] Error 2 
### execution of make failed, exit code 2 
Failed: compiling librsvg2-2.4.0-3 failed</codeblock> 
<p>あるいは</p> 
<codeblock>In file included from vteft2.c:32: 
vteglyph.h:64: error: parse error before &quot;FT_Library&quot;
vteglyph.h:64: warning: no semicolon at end of struct or union 
vteft2.c: In function `_vte_ft2_get_text_width': 
vteft2.c:236: error: dereferencing pointer to incomplete type 
vteft2.c: In function `_vte_ft2_get_text_height': 
vteft2.c:244: error: dereferencing pointer to incomplete type 
vteft2.c: In function `_vte_ft2_get_text_ascent': 
vteft2.c:252: error: dereferencing pointer to incomplete type 
vteft2.c: In function `_vte_ft2_draw_text': 
vteft2.c:294: error: dereferencing pointer to incomplete type 
vteft2.c:295: error: dereferencing pointer to incomplete type 
make[2]: *** [vteft2.lo] Error 1 
make[1]: *** [all-recursive] Error 1 
make: *** [all] Error 2 
### execution of make failed, exit code 2 
Failed: compiling vte-0.11.10-3 failed</codeblock> 
<p>あるいは</p> 
<codeblock>checking for freetype-config... /usr/X11R6/bin/freetype-config 
checking For sufficiently new FreeType (at least 2.0.1)... no 
configure: error: pangoxft Pango backend found but did not find freetype libraries 
make: *** No targets specified and no makefile found.  Stop. 
### execution of LD_TWOLEVEL_NAMESPACE=1 failed, exit code 2 
Failed: compiling gtk+2-2.2.4-2 failed</codeblock> 
<p>問題は X11 | XFree86 に含まれている、 <code>freetype</code> | <code>freetype-hinting</code> パッケージ間のヘッダを混同していることだと思われます。</p> 
<codeblock>fink remove freetype freetype-hinting</codeblock> 
<p>で、両方のインストールを削除します。
もし問題が上記のようではなく、以下のようであれば:</p> 
<codeblock>ld: Undefined symbols: 
_FT_Access_Frame </codeblock> 
<p>おそらく X11 インストールの残りファイルが原因です。
X11 SDK を再インストールしてみて下さい。
エラーが以下のようであれば:</p> 
<codeblock>dyld: klines Undefined symbols: 
/sw/lib/libqt-mt.3.dylib undefined reference to _FT_Access_Frame </codeblock>
<p>おそらく Jaguar 上で<code>gcc3.3</code> でコンパイルしたバイナリが  Panther 上で動作しないためです。
この問題は既に修正されていますので、<code>sudo apt-get update ; sudo apt-get dist-upgrade</code> と更新するだけで直ります。</p> 
</answer> 
</faqentry> 
<faqentry name="dlfcn-from-oo"> 
<question> 
<p>`Dl_info' のエラーが出ます。</p> 
</question> 
<answer> 
<p>エラーが下記のようであれば:</p> 
<codeblock>unix_dl.c: In function `rep_open_dl_library': 
unix_dl.c:328: warning: assignment discards qualifiers from pointer target type 
unix_dl.c: In function `rep_find_c_symbol': 
unix_dl.c:466: error: `Dl_info' undeclared (first use in this function) 
unix_dl.c:466: error: (Each undeclared identifier is reported only once 
unix_dl.c:466: error: for each function it appears in.) 
unix_dl.c:466: error: parse error before &quot;info&quot;
unix_dl.c:467: error: `info' undeclared (first use in this function) 
make[1]: *** [unix_dl.lo] Error 1</codeblock> 
<p>おそらくヘッダファイル <code>/usr/local/include/dlfcn.h</code> が Panther と非互換だと思われます。
迷うことなく削除して下さい。</p> 
<p>このファイルは通常、 Open Office によってインストールされるようです。
この後、次のヘッダファイルとライブラリ
<code>/usr/local/lib/libdl.dylib</code> を Panther に付随するファイルへのシンボリックリンクに変更します。</p> 
<codeblock>sudo ln -s /usr/include/dlfcn.h /usr/local/include/dlfcn.h 
sudo ln -s /usr/lib/libdl.dylib /usr/local/lib/libdl.dylib</codeblock> 
</answer> 
</faqentry>
<faqentry name="gcc2"> 
<question>
<p>Fink が <filename>gcc2</filename> がないと言っていますが、インストールも出来ないようです。</p>
</question> 
<answer>
<p>
<filename>gcc2</filename> は gcc-2.95 のバーチャルパッケージです。
gcc2.95 を XCode Tools (古い OS バージョンは Developer Tools に gcc-2.95 が含まれていました) からインストールして下さい。</p>
<p><em>注記:</em> gcc2.95 and/or gcc3.1 は gcc3.3 とコンフリクトしません。両方インストールすることもできます。</p>
</answer>
</faqentry>
<faqentry name="system-java">
<question>
<p>Fink が <code>Failed: Can't resolve dependency &quot;system-java14-dev&quot;</code>
と言っていますが、そのようなパッケージはありません。
</p>
</question>
<answer>
<p>
バーチャルパッケージだからです。
このエラーは、 Java が Software Update によって更新された場合に発生します。
更新時にヘッダファイルが削除され、 -dev パッケージが作成されなくなるためです。
</p>
<p>
<link url="http://connect.apple.com">Apple</link> から、適切な <filename>Java Developer Tools</filename> パッケージをダウンロードする必要があります。
この問題の場合は、 <filename>Java 1.4.2 Developer Tools</filename> です。
</p>
</answer>
</faqentry>
<faqentry name="dpkg-split">
<question>
    <p>
    何をインストールしようとしても、
     <quote>dpkg (subprocess): failed to exec dpkg-split to see if it's part of a multiparter: No such file or directory</quote>
     というエラーが出ます。
     どうしたらいいですか?
    </p>
</question>
<answer>
    <p>
    通常、環境変数を正しく設定することで直ります。
    参照: <xref chapter="usage-fink" section="fink-not-found">この FAQ 項目</xref>
    </p>
</answer>
</faqentry>
<faqentry name="xml-parser">
<question>
	<p>
	次のメッセージが出ます:<quote>configure: error: XML::Parser perl module is required for intltool</quote>。
	どうしたら良いでしょうか?
	</p>
</question>
<answer>
	<p>
	自分のシステムにある Perl に合った、正しいバージョンの xml-parser-pm が必要です。
	例えば、 Panther では <code>xml-parser-pm581</code> が正しく、 <code>xml-parser-pm560</code> 
	ではありません
	( <code>xml-parser-pm</code> 代替パッケージでも可)。
	システムにあるのが、 <code>Perl-5.8.1</code> であり、 <code>Perl-5.6.0</code> ではないためです。
	Jaguar でデフォルトのシステム Perl バージョンを使っている場合、 <code>pm560</code> で、
	<code>Perl 5.8.0</code> をインストールしている場合は <code>pm580</code> でも構いません。
	</p>
</answer>
</faqentry>
<faqentry name="master-problems">
<question>
	<p>
		パッケージをダウンロードしようとすると、 Fink が変なサイトに行こうとするけれど、 <quote>distfiles</quote>
		と書いてあるだけで、しかもそのファイルはそこに存在しません。
	</p>
</question>
<answer>
	<p>
		これは、 Fink が <quote>マスター</quote> と呼ばれるものを使おうとしたために発生しています。
		上流サイトが移動しても Fink パッケージのソースが入手できるための仕組みです。
		この問題は、新しい上流バージョンのパッケージがリリースされたが、
		まだ Master ミラーに反映されていない場合によくおこります。
	</p>
	<p>これを直すには、 <code>fink configure</code> を実行し、マスターミラーを最後に検索するように設定を変更します。</p>
</answer>
</faqentry>
<faqentry name="compile-options">
	<question>
		<p>パッケージをビルドするときに、 Fink に違うオプションを使わせたい</p>
	</question>
	<answer>
		<p>
			まず最初に、バリエーションを作成するようにパッケージメンテナに伝えてみてください。
			これが比較的簡単な方法です。
			メンテナから反応がなかったり、新しいバージョンが出てしまったり、自分で違うオプションを試してみたい場合、
			<link url="http://fink.sourceforge.net/doc/quick-start-pkg/index.php">Packaging Tutorial</link> 
			と <link url="http://fink.sourceforge.net/doc/packaging/index.php">Packaging Manual</link> をお読みください。
		</p>
		<p><em>注記:</em>Fink は、ビルドされたマシンに依存しないよう、全ての公式パッケージにはG5 最適化などのことはされません。このようなことをしたい場合、各自でする必要があります。</p>
	</answer>
</faqentry>
</chapter>
<chapter filename="comp-packages" >
<title>コンパイルの問題 - 特定のバージョン</title>
<shorttitle>コンパイル (2)</shorttitle>
<faqentry name="libgtop" >
<question>
<p><code>sed</code> を使うパッケージビルドが失敗します。</p>
</question>
<answer>
<p>これはログインスクリプト (例 <code>~/.cshrc</code>) が &quot;<code>echo Hello</code>&quot; であるとか <code>xttitle</code> といったことをターミナルに書くと発生します。
いちばん簡単な解決方法は、問題の行をコメントアウトすることです。
</p>
<p>もし echo を残しておきたいなら、次のようにすることもできます:</p>
<codeblock>if ( $?prompt) then
       echo Hello
endif</codeblock>
</answer>
</faqentry>
<faqentry name="cant-install-xfree" >
<question>
<p>Fink の XFree86 パッケージに切替えたいけれど、 <code>system-xfree86</code>  とコンフリクトしているため <code>xfree86-base</code> | <code>xfree86</code> がインストールできません。</p>
</question>
<answer>
<p>どのような X11 でも、残念なことに、 /usr/X11R6 にインストールしなければなりません。
Fink の <code>xfree86-base</code> と <code>xfree86-rootless</code> もここにインストールします。
しかし、 Fink はデータベースに無いファイルは削除しないため、 Fink 以外の X11 を自動的に置き換えることはありません。
</p>
<p>という訳で、:</p>
<p><em>注記: 10.2.x と 最新版の Fink (>= 0.16.2) のユーザーと 10.3.x ユーザーはステップ 1 を飛ばしてください (実行しても何も起きませんが)。</em></p>
<p>1. <code>system-xfree86</code> を削除します。
X11 に依存するパッケージがない場合、これは単純です。
しかし、 X11 に依存するパッケージがインストールされていることの方が多いでしょう。
これを全てアンインストールする代わりに、次のコマンドをうちます:</p>
<codeblock>sudo dpkg --remove --force-depends system-xfree86</codeblock>
<p>これで、他のパッケージは触らずに削除します。
<code>system-xfree86</code> がなければステップ 3 に進みます。
</p>
<p>2. XFree86 を全て手動で削除する。これは:</p>
<codeblock>sudo rm -rf /Applications/XDarwin.app /usr/X11R6 /etc/X11</codeblock>
<p>Apple X11 から切替える場合、 X11 アプリケーションも削除します。</p>
<p>3. XFree86-4.2.1 を入れるには、 Fink の <code>xfree86-base</code> と 
<code>xfree86-rootless</code> をインストールします。
これは、ソースからなら &quot;<code>fink install</code>&quot; で、
バイナリからなら  &quot;<code>apt-get install</code>&quot; または <code>dselect</code> です。</p>
<p> -あるいは-</p>
<p>3a. XFree86-4.3.x 以降を入れるには、 Fink の <code>xfree86</code> パッケージを、
&quot;fink install xfree86&quot; でインストールします。
最新版 (2004年5月25日時点で XFree86-4.4.x) はまだバイナリ版がなく、 unstable ツリーのみなので、 
[<link url="http://fink.sourceforge.net/faq/usage-fink.php#unstable\">unstable パッケージのインストール</link> を参照]
</p>
</answer>
</faqentry>
<faqentry name="change-thread-nothread" >
<question>
<p>non-threaded 版の Fink XFree86 パッケージから threaded 版 (またはその逆) にはどうしたら切替えることができますか?</p>
</question>
<answer>
<p>Fink 版の xfree86 を使っていて、 threaded と non-threaded を切替えたいのなら、 手動で古いバージョンを削除する必要があります。
これは、コマンドラインで:</p>
<codeblock>sudo dpkg -r --force-depends xfree86-base
sudo dpkg -r --force-depends xfree86-shlibs
sudo dpkg -r --force-depends xfree86-rootless
sudo dpkg -r --force-depends xfree86-rootless-shlibs</codeblock>
<p>threaded 版の場合:</p>
<codeblock>sudo dpkg -r --force-depends xfree86-base-threaded
sudo dpkg -r --force-depends xfree86-shlibs-threaded
sudo dpkg -r --force-depends xfree86-rootless-threaded
sudo dpkg -r --force-depends xfree86-rootless-threaded-shlibs</codeblock>
<p>FinkCommander でもパッケージを削除することができます。
ソース画面で、パッケージを選択し、次に <code>Source Menu</code> で &quot;<code>Force Remove</code>.&quot; を選択します。
</p>
<p>system-xfree86 を使っている場合、 前の質問を参照して削除してください。</p>
<p>希望するバージョンの xfree86 をインストールします: </p>
<p>
<code>xfree86-base</code> と <code>xfree86-rootless</code>
</p>
<p>
<code>xfree86-base-threaded</code> と <code>xfree86-rootless-threaded</code>
</p>
<p>普通は、ソースインストールは: &quot;<code>fink install</code>&quot; で、バイナリインストールは: &quot;<code>apt-get install</code>&quot; または <code>dselect</code> です。</p>
</answer>
</faqentry>
<faqentry name="cctools" >
<question>
<p>KDE をインストール使用とすると、次のメッセージが出ます: 'Can't resolve dependency &quot;cctools (>= 446-1)&quot;'</p>
</question>
<answer>
<p>このなんとも暗号のようなメッセージは、 December 2002 Developer Tools をインストールしろという意味です。</p>
</answer>
</faqentry>
<faqentry name="libiconv-gettext">
<question>
	<p><code>libiconv</code> が更新できません。</p>
</question>
<answer>
	<p>下記の形式のエラーでしたら:</p>
	<codeblock>libtool: link: cannot find the library `/sw/lib/libiconv.la'</codeblock>
	<p>以下のように実行して直すことが出来ます</p>
	<codeblock>fink remove gettext-dev
fink install libiconv</codeblock>
</answer>
</faqentry>
</chapter>
<chapter filename="usage-general" >
<title>パッケージ使用上の問題 - 一般</title>
<shorttitle>使用法 (1)</shorttitle>
<faqentry name="xlocale" >
<question>
<p>このようなメッセージが大量に出ます。
&quot;locale not supported by C library&quot;
これはまずいことですか?</p>
</question>
<answer>
<p>まずいことという訳ではありません。
これはデフォルトの英語メッセージや日付フォーマットなどを使うという意味です。
これ以外はプログラムは普通に動作します。
X11 のドキュメントに、 <link url="http://fink.sourceforge.net/doc/x11/trouble.php#locale" >詳細</link> があります。</p>
</answer>
</faqentry>
<faqentry name="passwd" >
<question>
<p>いきなり変なユーザーがシステムに現れました。
ユーザー名は、 &quot;mysql&quot;, &quot;pgsql&quot;, &quot;games&quot; などです。
こいつらはどこから来たのですか?</p>
</question>
<answer>
<p>Fink を使って passwd というパッケージをインストールしたのでしょう。
passwd は、セキュリティー上の問題からいくつかのユーザーを追加します。
Unix システムでは、ファイルやプロセスの &quot;所有者&quot; を使ってパーミッションやセキュリティーをチューニングするのです。
Apache や MySQL のようなプログラムは、&quot;所有者&quot; が必要で、これらの daemon に root を割り当てると安全ではなくなります。
(Apache に、システム上の全てのファイルへいきなり書き込み権限が与えられたと思ってみてください)
このため、 passwd パッケージはユーザーを必要とするパッケージにユーザーを追加するのです。</p>
<p>急にユーザーが &quot;システム環境設定: ユーザー&quot; ペイン (10.2.x) あるいは
 &quot;システム環境設定: アカウント&quot; ペイン (10.3.x) 
に現れるのは不安ですが、削除したい気持ちを押えてください。</p>
<ul>
<li>第一に、あなたはユーザーを利用するパッケージをインストールする選択をしたのです。
 ユーザーを削除したら意味がありませんよね?</li>
<li>実際、 Mac OS X には既にユーザーが追加されていますが、気づいていないのです。
www, daemon, nobody などがそうです。
これらのユーザーは、ある種のサービスを行なう Unix 流のやり方なのです。
passwd パッケージは、 Apple が提供していないユーザーを追加するだけです。
Apple がインストールしたユーザーは、 NetInfo マネージャ.app で見ることができます:
<code>niutil -list . /users</code>
</li>
<li>このユーザーを削除することにした場合、十分気をつけてください。
&quot;システム環境設定: ユーザー&quot; ペイン (10.2.x) あるいは
 &quot;システム環境設定: アカウント&quot; ペイン (10.3.x) 
から追加したユーザーのファイルには、適当な管理者権限が割り振られます。
管理者アカウントのパーミッションが混乱するという報告があります。
これはシステム環境設定のバグで、 Apple には報告されています。
安全にユーザーを削除するには、 NetInfo マネージャ.app を使うか、ターミナルから <code>niutil</code> コマンドを入力します。
NetInfo の詳細については、 <code>niutil</code> の man ページを読んでください。
 </li>
</ul>
<p>passwd パッケージのインストール中に、Fink がユーザーを追加するか<em>尋ねます</em>ので、実際はいきなりではないはずです。</p>
</answer>
</faqentry>
<faqentry name="compile-myself" >
<question>
<p>Fink でインストールしたソフトウェアを使って、自分で何かをコンパイルするにはどうしたらいいのですか?</p>
</question>
<answer>
<!-- TODO: maybe change this to use LIBRARY_PATH / DYLD_LIBRARY_PATH ? -->
<p>外でコンパイルする時は、コンパイラとリンカに Fink がインストールしたライブラリとヘッダの場所を教える必要があります。
普通の configure/make を使うパッケージの場合、環境変数を設定する必要があります:</p>
<p>-tcsh-</p> 
<codeblock>setenv CFLAGS -I/sw/include 
setenv LDFLAGS -L/sw/lib
setenv CXXFLAGS $CFLAGS
setenv CPPFLAGS $CXXFLAGS
setenv ACLOCAL_FLAGS &quot;-I /sw/share/aclocal&quot;
setenv PKG_CONFIG_PATH &quot;/sw/lib/pkgconfig&quot;</codeblock>
<p>-bash-</p> 
<codeblock>export CFLAGS=-I/sw/include 
export LDFLAGS=-L/sw/lib 
export CXXFLAGS=$CFLAGS 
export CPPFLAGS=$CXXFLAGS 
export ACLOCAL_FLAGS=&quot;-I /sw/share/aclocal&quot;
export PKG_CONFIG_PATH=&quot;/sw/lib/pkgconfig&quot;</codeblock> 
<p>これを起動ファイル (.cshrc か .profile) に追加すると、自動的に設定されて便利です。
この環境変数を使わないパッケージの場合、
&quot;-I/sw/include&quot; (ヘッダ用) and &quot;-L/sw/lib&quot; (ライブラリ用)
をコンパイルの行に追加する必要があるでしょう。
パッケージの中には、 EXTRA_CFLAGS や --with-qt-dir= のような、非標準的な configure オプションを使うものもあります。
&quot;./configure --help&quot; で configure オプションの一覧がわかるでしょう。</p>
<p>さらに、あなたが使うライブラリの開発用ヘッダ (例 <em>foo-1.0-1-dev</em>) もインストールする必要があります。</p>
</answer>
</faqentry>
<faqentry name="apple-x11-applications-menu" >
<question>
<p>Apple X11 の Application メニューを使うと、 Fink からインストールしたアプリケーションの起動できません。</p>
</question>
<answer>
<p>Apple X11 は Fink の環境設定を認識しません。
このため、Applications メニューも PATH を認識せず、 Fink アプリケーションを探すことができません。
解決するには、 Fink からインストールしたアプリケーションに:
</p>
<codeblock>source /sw/bin/init.sh ; </codeblock>
<p>と追加します。例えば、 Fink からインストールした GIMP の場合、 GIMP の Command 欄に:</p>
<codeblock>source /sw/bin/init.sh ; gimp</codeblock>
<p>と入力します。</p>
<p>あるいは、 .xinitrc ファイル (自分のディレクトリ内の) の一行目に:</p>
<codeblock>source /sw/bin/init.sh</codeblock>
<p>と追加します。</p>
</answer>
</faqentry>
<faqentry name="x-options" >
<question>
	<p>X11 の種類が多くて迷っています。
	Apple X11, XFree86 などなど、どれをインストールしたら良いのですか?</p>
</question>
<answer>
	<p>
	いずれも (XFree86 のコードをベースとした) XFree86 の派生ですが、細かな違いがあります。
	Jaguar と Panther では選択肢も変わります。
	</p>
	<p>Panther では:</p>
	<ul>
		<li>
		<p>
		Apple X11 (3枚目のディスク):
		X11 関連のプログラムをコンパイルや Fink でソースインストールする場合、 
		X11SDK (XCode ディスク) も忘れずにインストールする
		</p>
		</li>
		<li>
		<p>4.4.x built via Fink: 
		<code>xfree86</code> と
		<code>xfree86-shlibs</code> のパッケージをインストールする
		</p>
		</li>
		<li>
			<p> X.org built via Fink: <code>xorg</code> と
			<code>xorg-shlibs</code> のパッケージをインストールする
			</p>
		</li>
	</ul>
	<p>Jaguar では、一番使われていて Fink パッケージが使えるのは:</p>
	<ul>
		<li>
		<p>Fink でビルドする 4.2.x: <code>xfree86-base</code> と 
		<code>xfree86-rootless</code> または <code>xfree86-base-threaded</code> 
		と <code>xfree86-rootless-threaded</code> (および、それぞれの <code>-shlibs</code>) をインストール
		</p>
		</li>
		<li>
		<p>Fink でビルドする 4.3.x: <code>xfree86</code> と <code>xfree86-shlibs</code> 
		パッケージをインストール
		</p>
		</li>
		<li>
		<p>
		Apple の 4.2.x (User+SDK パッケージがインストールされている場合): 
		<code>system-xfree86</code> パッケージが自動的にインストールされる。
		ユーザーはインストールを行わない
		(注記: Jaguar 用の Apple X11 Public Beta は既に入手不可能です。
		この方法は以前入手した人のみに有効です。)
		</p>
		</li>
	</ul>
	<p>
	これ以外の選択は、 <link url="http://fink.sourceforge.net/doc/x11/index.php" >Running X11 document</link> を参照してください。
	</p>
</answer>
</faqentry>
<faqentry name="no-display" >
<question>
<p>アプリケーションを実行しようとすると、
&quot;cannot open display:&quot;
というメッセージがでます。
どうしたら良いですか?</p>
</question>
<answer>
<p>このエラーは、システムが X ディスプレイと通信できていないことを意味します。
以下を確認してください:</p>
<p>1. X (Apple's X11, XFree86, ...) を起動。</p>
<p>2. DISPLAY 環境変数が設定されていることを確認する。デフォルトに設定された X では、 tcsh では:
</p>
<codeblock>setenv DISPLAY :0</codeblock>
<p>bash の場合:</p>
<codeblock>export DISPLAY=:0</codeblock>
<p>と入力します。</p>
</answer>
</faqentry>
<faqentry name="suggest-package" >
<question>
<p>自分の好きなプログラムが Fink にありません。
Fink に推薦したいのですが、どうしたら良いですか?</p>
</question>
<answer>
<p><link url="http://sourceforge.net/tracker/?atid=371315&amp;group_id=17203">Package Request Tracker</link>
の Fink プロジェクトページから推薦してください。</p>
<p>注記: SourceFourge の ID が必要です。</p>
</answer>
</faqentry>
<faqentry name="virtpackage">
<question>
	<p>
	  <code>system-*</code> &quot;virtual packages&quot; というのを時々見かけますが、
	  インストールも削除もできません。
	  これはいったいなんですか?
	</p>
</question>
<answer>
	<p>
	  <code>system-perl</code> のような名前のパッケージは代替パッケージです。
	  これは、実際にはファイル等を含んでいる訳ではなく、
	  fink 外で手動でインストールされたプログラムを fink に伝えるための仕組みとして存在します。
	</p>
	<p>
	  この仕組みは10.3 ディストリビューションから導入されました。
	  ほとんどの代替パッケージは自分でインストールや削除できるものではありません。
	  その代わりに、手動でインストールされたプログラム一覧を元に fink プログラム自体が作成する
	  &quot;Virtual Packages&quot; パッケージデータ構造となっています。
	  fink は、それぞれのパッケージについて特定の場所の特定のファイルを確認し、
	  見つかった場合はバーチャルパッケージがインストール済みと判断します。
	</p>
	<p>
	  fink が認識しているインストール済みの一覧は、
	  <code>fink-virtual-pkgs</code> を実行することで見ることができます。
	  <code>--debug</code> フラグを追加すると、具体的にどのファイルを見ているのかという診断情報も確認できます。
	</p>
	<p>
	  任意のプログラムを (fink 外で) インストールし、 fink にこれを認識させる仕組みは残念ながらありません。
	  configure やコンパイルフラグ、パス名などを確認するのは非常に困難なためです。
	</p>
	<p>
	  以下は、 fink が定義するバーチャルパッケージのうち最も重要なものです (fink-0.19.2 時点) :
	</p>
	<ul>
	  <li>system-perl: [virtual package representing perl]
	    <p>
		  これの実体は <filename>/usr/bin/perl</filename> で、デフォルトの OS X インストールの一部になっています。
		  このパッケージは、 perl インタープリータのバージョン X.X.X である
		  <code>system-perlXXX</code> と <code>perlXXX-core</code> も提供します。
	    </p>
	  </li>
	  <li>system-javaXXX: [virtual package representing Java X.X.X]
	    <p>
		  これの実体は Java Runtime Environment で、 OS X (および Apple Software Update) の一部です。
		  詳細は、 <link url="http://www.apple.co.jp/java">Apple の Java のページ</link> をご覧ください。
	    </p>
	  </li>
	  <li>system-javaXXX-dev: [virtual package representing Java X.X.X development headers]
	    <p>
		  これの実体は Java SDK で、 <link url="http://connect.apple.com">connect.apple.com</link>
		  (登録が必要) からダウンロードし、インストールする必要があります。
		  Java Runtime Environment を更新した場合、 SDK は自動的に更新されません (削除されることもあります!) 。
		  Runtime Environment をインストールや更新した場合、 SDK を確認 (し、必要に応じてダウンロード、インストール)
		  してください。
		  <xref chapter="comp-general" section="system-java">この FAQ</xref> も合わせてお読みください。
	    </p>
	  </li>
	  <li>system-java3d: [virtual package representing Java3D]</li>
	  <li>system-javaai: [virtual package representing Java Advanced Imaging]
	    <p>
		  これの実体は、 Java の 3D 画像処理の機能拡張です。
		  Apple からダウンロードし、インストールします。
		  <link url="http://docs.info.apple.com/article.html?artnum=120289">Apple のページ</link>
		  をお読みください。
	    </p>
	  </li>
	  <li>system-xfree86: [placeholder for user installed x11]</li>
	  <li>system-xfree86-shlibs: [placeholder for user installed x11 shared libraries]
	    <p>
		  これの実体は Apple X11/XDarwin で、  OS X のオプション (X11User.pkg) です。
		  二つのパッケージは、それぞれ <code>x11</code> と <code>x11-shlibs</code>
		  になります。
		  <xref chapter="comp-packages" section="cant-install-xfree">この FAQ</xref> も合わせてお読みください。
	    </p>
	  </li>
	  <li>system-xfree86-dev [placeholder for user installed x11 development tools]
	    <p>
		  これの実体は Apple X11/XDarwin SDK で、  OS X のオプション (X11SDK.pkg) です。
		  <xref chapter="comp-packages" section="cant-install-xfree">この FAQ</xref> も合わせてお読みください。
	    </p>
	  </li>
	</ul>
</answer>
</faqentry>
</chapter>
<chapter filename="usage-packages" >
<title>パッケージ使用上の問題 - 特定のパッケージ</title>
<shorttitle>使用法 (2)</shorttitle>
<faqentry name="xmms-quiet" >
<question>
<p>XMMS から音がでません。</p>
</question>
<answer>
<p>XMMS設定で &quot;eSound Output Plugin&quot; を選択しているか確認してください。
おかしなことに、デフォルトでは disk writer プラグインが選択されています。
</p>
<p>これでも音がでないか、 XMMS がサウンドカードを見つけられないといっているなら:</p>
<ul>
<li>Mac OS X で無音にしていないか確認。</li>
<li><code>esdcat /usr/libexec/config.guess</code> を実行 (あるいは他の小さいファイル)。
何か音が聞こえたら、 eSound が動作しているので、正しく設定されていれば XMMS でも動作するはずです。
何も聞こえなければ、 esd が何らかの理由で動作していません。
<code>esd &amp;</code> を起動してみて、メッセージを監視してください。</li>
<li>まだ動作しないなら、 <code>/tmp/.esd</code> と <code>/tmp/.esd/socket</code> のパーミッションを確認してください。
あなたのアカウントが所有者として設定されているはずですが、そうでなければ、 esd が動作していれば kill して、 root 権限でディレクトリを削除してください (<code>sudo rm -rf /tmp/.esd</code>)。
この後、 esd を再起動してください (root ではなく、一般ユーザーとして)。
</li>
</ul>
<p>esd は root ではなく一般ユーザーで実行されるよう設計されていることに注意してください。
通常、ファイルシステムソケット <code>/tmp/.esd/socket</code> を経由して通信します。
esd クライアントを別のマシンでネットワーク経由で実行する場合、 <code>-tcp</code> と <code>-port</code> の切替えのみが必要です。
</p>
<p>この他に、 10.1 で XMMS がクラッシュするという報告があります。
この件に関しては、まだ分析も修正もしていません。</p>
</answer>
</faqentry>
<faqentry name="nedit-window-locks" >
<question>
<p>nedit でファイルを編集していると、他のファイルを開く時にウィンドウが出ますが、反応がありません。</p>
</question>
<answer>
<p>これは最近のバージョンの <filename>nedit</filename> と <filename>lesstif</filename> の既知の問題で、他のシステムでも同様です。
File-->New でウィンドウを開き、次のファイルを開くと問題を回避できます。</p>
<p>この問題は <filename>nedit-5.3-6</filename> で <filename>lesstif</filename> から <filename>openmotif3</filename> に依存するようになり、解決されました。</p>
</answer>
</faqentry>
<faqentry name="xdarwin-start" >
<question>
<p>助けて!
XDarwin を起動してもすぐ終了しちゃう!</p>
</question>
<answer>
<p>
慌てない、慌てない。
Running X11 ドキュメントには、この問題の <link url="http://fink.sourceforge.net/doc/x11/trouble.php#immediate-quit" >問題対処法の節</link> (英語版) があります。</p>
</answer>
</faqentry>
<faqentry name="no-server" >
<question>
<p>XDarwin を起動しようとすると、このメッセージがでます
&quot;xinit: No such file or directory (errno 2): no server &quot;/usr/X11R6/bin/X&quot; in PATH&quot;。
</p>
</question>
<answer>
<p>まず、X の起動スクリプト <code>~/.xinitrc</code> が init.sh を読み込んでいるか確認してください。</p>
<p>Jaguar では、全ての <code>xfree86</code> パッケージがビルドされるが、実際には <code>xfree86-base</code> と <code>xfree86-base-shlibs</code> だけがインストールされていることがあります。
<code>xfree86-rootless</code> と <code>xfree86-rootless-shlibs</code> がインストールされているかを確認し、なければ <code>fink install xfree86-rootless</code> で解決です。</p>
<p>もしインストールされているなら、 <code>fink rebuild xfree86-rootless</code> を試してください。
これがうまくいかない場合、 <code>/usr/bin/X11R6</code> が PATH に含まれているか確認してください。</p>
</answer>
</faqentry>
<faqentry name="xterm-error" >
<question>
<p>xterm が &quot;dyld: xterm Undefined symbols: xterm undefined reference to _tgetent expected to be defined in /usr/lib/libSystem.B.dylib&quot; といって終了します。</p>
</question>
<answer>
<p>10.1 版の XFree86 を 10.2 で使用するとこの問題が発生します。
10.2 版にアップグレードしてください。</p>
<p>Fink <code>xfree86</code> パッケージを使っている場合、通常の方法でアップグレードできます
(ソースからの場合、
&quot;<code>fink selfupdate-cvs ; fink update-all</code>&quot;、バイナリからの場合、
&quot;<code>fink selfupdate ; ; sudo apt-get update; sudo apt-get dist-upgrade</code>&quot;)。</p>
<p>XFree86 を他の手段でインストールした場合、最新版パッチが
<link url="http://mrcla.com/XonX" >XonX web site</link>
から入手できます。</p>
</answer>
</faqentry>
<faqentry name="libXmuu" >
<question>
<p>XFree86 を起動しようとすると、下記のエラーのひとつがでます。
&quot;dyld: xinit can't open library: /usr/X11R6/lib/libXmuu.1.dylib&quot;
または &quot;dyld: xinit can't open library: /usr/X11R6/lib/libXext.6.dylib&quot;</p>
</question>
<answer>
<p>これは、 <code>xfree86-base-(threaded)-shlibs</code> からインストールされたはずのファイルが見つからないことが原因です。
ソースの場合、<code>fink reinstall xfree86-base-shlibs</code> (threaded 版の XFree86 パッケージ場合、<code>fink reinstall xfree86-base-threaded-shlibs</code>)、
バイナリの場合、 <code>sudo apt-get install --reinstall xfree86-base-shlibs</code> を再インストールする必要があります。</p>
</answer>
</faqentry>
<faqentry name="apple-x-bugs" >
<question>
<p>Fink の XFree86 を Apple X11 に置き換えたのですが、なんでもかんでもクラッシュするようになりました!</p>
</question>
<answer>
<p>まず、以前 threaded 版の Fink XFree86 があったのなら、クラッシュしたアプリケーションを再ビルドする必要があります。
プログラムによっては、ビルド時に thread の対応を確認し、以降は thread があるものと仮定されます。</p>
<p>これが原因でなければ、次の可能性としては Apple X11 のバグに当たったのかも知れません。
これを書いている時点でも Apple チームはバグを認識していて作業中です。
</p>
<p>Apple X11 に関する一般的な質問で Fink に直接関係が無いものは、
<link url="http://www.lists.apple.com/x11-users" >Apple 公式 X11 ディスカッションリスト</link>
を確認してみてはいかがでしょうか。
このサイトで<link url="http://developer.apple.com/bugreporter" >Apple へバグレポートを送る</link>よう薦めています。</p>
</answer>
</faqentry>
<faqentry name="apple-x-delete" >
<question>
<p>Apple X11 の delete キーを、 XDarwin のように使いたいのです。</p>
</question>
<answer>
<p>XDarwin と Apple X11 で <code>delete</code> キーの挙動が違うという報告がありますが、これは X の起動ファイルに以下を追加することで調整できます:</p>
<p>
<em>.Xmodmap:</em>
</p>
<codeblock>keycode 59 = Delete</codeblock>
<p>
<em>.Xresources:</em>
</p>
<codeblock>
xterm*.deleteIsDEL: true
xterm*.backarrowKey: false
xterm*.ttyModes: erase ^?
</codeblock>
<p>
<em>.xinitrc</em>
</p>
<codeblock>xrdb -load $HOME/.Xresources
xmodmap $HOME/.Xmodmap</codeblock>
<p/>
</answer>
</faqentry>
<faqentry name="gnome-two" >
<question>
<p>GNOME 1.x から GNOME 2.x にアップグレードしたら、 <code>gnome-session</code> がウィンドウマネージャーを開かなくなりました。</p>
</question>
<answer>
<p>GNOME 1.x <code>gnome-session</code> は自動的に <code>sawfish</code> ウィンドウマネージャーを呼出していましたが、 GNOEM 2.x では <code>~/.xinitrc</code>  で <code>gnome-session</code> の前に呼び出さなくてはなりません。</p>
<codeblock>...
exec metacity &amp;
exec gnome-session</codeblock>
<p>
注記: この問題は <em>GNOME 2.4</em> では発生しません。
<filename>gnome-session</filename> を実行することでウィンドウマネージャーを呼び出すようになりました。
</p>
</answer>
</faqentry>
<faqentry name="apple-x11-no-windowbar" >
<question>
<p>Panther で Apple X11 にアップグレードしたら、ウィンドウのタイトルバーが消えました。</p>
</question>
<answer>
<p>あなたは X11 を Panther に付属する &quot;X11 1.0 - XFree86 4.3.0&quot; にアップグレードしなかったようです。
Disk 3 の X11.pkg から X11 をインストールできます。</p>
</answer>
</faqentry>
<faqentry name="apple-x11-wants-xfree86" >
<question>
	<p>Apple X11 をインストールしたけれども、 Fink が XFree86 か X.org をインストールしろといい続けます。</p>
</question>
<answer>
	<p>二つの可能性があります。</p>
	<ul>
		<li><em>バイナリからのインストール:</em> 
		<p>
		<code>fink</code> が最新 (&gt;=0.18.3-1) であれば、通常は X11User 
		パッケージを再インストールする必要があります。
		</p>
		<p>
		これは、インストーラがしばしばファイルをインストールをし忘れることがあるためです。
		インストールは何回かする必要があるかもしれません。
		</p>
		<codeblock>fink list -i system-xfree86</codeblock> 
		<p>を実行することで、
		<code>system-xfree86</code> と <code>system-xfree86-shlibs</code> 
		がインストールされたかが分かります。
		</p>
		<p>
		X11User パッケージを再インストールしても問題がある場合、下記の
		<xref section="special-x11-debug">特殊なデバグ</xref> の手順を試してみてください。
		</p>
		<p>
		古い<code>fink</code> を使っている場合、 <code>fink</code> を更新することで直ります。
		</p>
<codeblock>sudo apt-get update
sudo apt-get install fink</codeblock>
		</li>
		<li><em>ソースからのインストール: </em>
		<p>
		<code>fink</code> が最新であれば、 X11SDK を(再)インストールする必要があります。
		これは、パッケージをソースからビルドする際に必須です。
		X11SDK は Xcode CD にありますが、XCode をインストールしても、デフォルトではインストール<em>されません</em>。
		インストール時にカスタムを選択してパッケージを選択するか、
		XCode の CD 内の <filename>Packages</filename> フォルダから X11SDK pkg をダブルクリックします。
		</p>
		<p>
		これでも問題がある場合、
		</p>
		<codeblock>fink list -i system-xfree86</codeblock> 
		<p>を実行をし、
		<code>system-xfree86</code> と <code>system-xfree86-shlibs</code> と <code>system-xfree86-dev</code>
		がインストールされているか確認します。
		<code>-dev</code> が無い場合は X11SDK を再インストールします。
		Apple のインストーラはファイルをインストールし忘れることがあるようです。
		他の二つのうちどちらかが無い場合、 X11User パッケージをインストールします (理由は同じ)。
		</p>
		<p><em>Jaguar (X11 beta 3) の利用者への注記</em>:
		Jaguar では XCode は使用していないため、ダウンロード済みの X11SDK が必要になります。
		X11 beta 3 は既に期限が切れているため、X11SDK パッケージ (および X11User パッケージ)
		はダウンロードできません。
		X11 アプリケーションをインストールするには、バイナリ配布を利用するか、 XFree86  または X.org
		をインストールするか、 Panther にアップグレードするしかありません。
		</p>
		<p>
		<code>fink</code> 0.17 以前を使っている場合、更新します。
		</p>
		<codeblock>fink selfupdate</codeblock>
		<p>
		(ポイントリリースではなく、CVS または rsync 更新ができる場合)
		</p>
		<p>
		これでも問題が発生する場合、下記の
		<xref section="special-x11-debug">特殊なデバグ</xref> の手順を試してみてください。
		</p>
		</li>
	</ul>
</answer>
</faqentry>
<faqentry name="wants-xfree86-on-upgrade">
<question>
    <p>
    10.2 Fink バージョンから 10.2-gcc3.3 あるいは 10.3 に切り替えたら、 Apple X11 があるのに XFree86 または X.org をインストールしろと言われます。
    </p>
</question>
<answer>
    <p>
    以下の古い代替パッケージのうちいずれかを削除する必要があります:
    <filename>system-xfree86</filename>, <filename>system-xfree86-42</filename>, 
    <filename>system-xfree86-43</filename> 。
    自分でインストールした X11 の設定を Fink が行ない、バーチャルパッケージを作成します。
    他のパッケージが <filename>system-xfree86</filename> に依存しているため、以下のコマンドを使い
    </p>
    <codeblock>sudo dpkg -r --force-all system-xfree86 system-xfree86-42 system-xfree86-43</codeblock>
    <p>
    古いバージョンを削除します。
    インストールの確認は、
    </p>
    <codeblock>fink list -i system-xfree86</codeblock>
    <p>
    とし、 <code>system-xfree86</code> と <code>system-xfree86-shlibs</code>
    があるか確認します。
    X11SDK もインストールされている場合、 <code>system-xfree86-dev</code> も確認します。
    </p>
    <p>
    これでも問題が解決されない場合、上の
    <xref section="apple-x11-wants-xfree86">Fink wants XFree86 or X.org</xref>
    を参照してください。
    </p>
</answer>
</faqentry>
<faqentry name="special-x11-debug">
<question>
	<p>まだ X11 と Fink の問題が解決されません。</p>
</question>
<answer>
        <p>
		<xref section="apples-x11-wants-xfree86">Fink tries to install XFree86 or X.org</xref> や
		<xref section="wants-xfree86-on-upgrade">X11 and upgrade from 10.2</xref> 
		のヒントで問題が解決されないか、自分の問題と異なる場合、
		X11 をきれいに削除し、代替パッケージと X11 関連パッケージを削除します:
		<xref section="apples-x11-wants-xfree86">Fink tries to install XFree86</xref>
		</p>
        <codeblock>sudo dpkg -r --force-all system-xfree86 system-xfree86-42 system-xfree86-43 \
xorg xorg-shlibs xfree86 xfree86-shilbs \
xfree86-base xfree86-base-shlibs xfree86-rootless xfree86-rootless-shlibs \
xfree86-base-threaded xfree86-base-threaded-shlibs \
xfree86-rootless-threaded xfree86-rootless-threaded-shlibs
rm -rf /Library/Receipts/X11SDK.pkg /Library/Receipts/X11User.pkg
fink selfupdate; fink index</codeblock>
        <p>
		(最初の行で存在しないパッケージを削除しようとしているという警告が出ます)
		次に、Apple X11 (および必要に応じて X11SDK) または XFree86 や X.org のようなX互換パッケージを再インストールします。
		</p>
        <p>
		これでも問題があり、 <code>fink-0.19.0</code> 以降を使っている場合、
		</p>
        <codeblock>fink-virtual-pkgs --debug</codeblock>
        <p>で何が不足しているかの情報が得られます。</p>
        <p>
		古いバージョンの  <code>fink</code> を使っている場合、Perl スクリプト
		(Martin Costabel 作成)　で同様の情報が得られます。
		</p>
        <ul>
          <li>入手先: <link url="http://perso.wanadoo.fr/costabel/fink-x11-debug">http://perso.wanadoo.fr/costabel/fink-x11-debug</link>
          </li>
          <li>好きな場所に保存</li>
          <li>ターミナルウィンドウから実行: <codeblock>perl fink-x11-debug</codeblock>
          </li>
        </ul>
</answer>
</faqentry>
</chapter>
</document>

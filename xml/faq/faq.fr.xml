<?xml version = '1.0' encoding = 'utf-8'?>
<!DOCTYPE document SYSTEM "../finkfaq.dtd">
<document filename="index" lang="fr" >
<title>Fink - Q.F.P.</title>
<shorttitle>Q.F.P.</shorttitle>
<cvsid>$Id: faq.fr.xml,v 1.13 2004/03/31 02:13:19 michga Exp $</cvsid>
<preface>
<p><em>En cours de traduction</em></p>
<p>Voici la liste des questions fréquemment posées sur Fink. Comme la plupart des QFP, une partie correspond à des questions réelles, d'autres ont été élaborées spécialement pour ces QFP. Il s'agit en fait d'un document écrit dans le style question-réponse.</p>
<p>Ces QFP comprennent plusieurs pages, une par chapitre. Le sommaire ci-dessous donne la liste de toutes les questions ainsi qu'un lien pour chacune d'elles.</p>
</preface>

<chapter filename="general" >
<title>Questions générales</title>
<shorttitle>Généralités</shorttitle>
<faqentry name="what" >
<question>
<p>Qu'est-ce que Fink ?</p>
</question>
<answer>
<p>
La raison d'être de Fink est d'offrir un maximum de logiciels UNIX sur Mac OS X, ce qui  se traduit par deux objectifs principaux :  
</p>
<p>
L'objectif principal est de porter des logiciels sur Mac OS X. Cela signifie que nous prenons des logiciels Open Source Unix et corrigeons ce qui est nécessaire pour qu'ils compilent et tournent sur Mac OS X. Parfois la tâche est simple, mais elle peut être très difficile, voire impossible, pour certains paquets. Nous essayons de fournir des outils et des documents pour la simplifier.
</p>
<p>
L'objectif secondaire est de mettre le résultat à disposition d'utilisateurs occasionnels.  Pour ce faire, nous créons une distribution en utilisant des outils de gestion de paquets portés depuis Linux, à savoir <code>dpkg</code> et
<code>apt-get</code>, écrit par et pour le projet <link url="http://www.debian.org/" >Debian GNU/Linux</link>. La distribution binaire utilise le format de paquet <code>.deb</code>. Pour construire les paquets à partir du source, nous utilisons notre propre outil, nommé <code>fink</code>, qui construit ces fichiers de paquet <code>.deb</code>.
</p>
</answer>
</faqentry>
<faqentry name="naming" >
<question>
<p>Que signifie Fink ?</p>
</question>
<answer>
<p>Rien en particulier, ce n'est qu'un nom, même pas un acronyme.</p>
<p>En fait, Fink est le mot allemand désignant un fringillidé, une espèce d'oiseau. Je cherchais un nom pour le projet et le nom du système opératoire, Darwin, m'a fait penser à Charles Darwin, aux îles Galápagos et à l'évolution des espèces. Je me suis souvenu, qu'à l'école, nous avions étudié un passage sur les fringillidés pseudo-darwiniens et leurs becs, d'où le nom...</p>
</answer>
</faqentry>
<faqentry name="bsd-ports" >
<question>
<p>En quoi Fink se différencie-t-il du mécanisme de portage BSD (qui comprend OpenPackages et GNU-Darwin) ?</p>
</question>
<answer>
<p>Avantages principaux de Fink :</p>
<ul>
<li>
<p>
Il est écrit en Perl, pas en make/shell. Il ne repose donc pas sur des fonctionnalités inhérentes à BSD make. Il n'y a donc pas besoin de marquer les paquets qui doivent utiliser GNU make à la construction.
</p>
</li>
<li>
<p>
dpkg fournit une gestion sophistiquée des paquets binaires : mise à jour facile, gestion spéciale des fichiers de configuration, paquets virtuels et autres fonctions avancées.
</p>
</li>
<li>
<p>
Fink n'installe rien dans /usr/local à moins d'une requête explicite et ne nécessite pas de jongler avec /usr/bin/make ou d'autres commandes fournis par le système. Cela rend son utilisation plus sûre et réduit au minimum les interférences avec Mac OS X et les paquets de tierce partie.
</p>
</li>
</ul>
</answer>
</faqentry>
<faqentry name="usr-local" >
<question>
<p>Pourquoi Fink n'installe rien dans /usr/local ?</p>
</question>
<answer>
<p>Il y a plusieurs raisons à cela, mais toutes reposent sur le fait  que &quot;cela occasionnerait des failles dans le système&quot;.</p>
<p>Première raison : les logiciels de tierce partie. /usr/local est réservé à l'installation des logiciels qui ne font pas partie du système fourni par le vendeur initial. C'est donc l'endroit idéal pour installer quelque chose. Mais, c'est aussi là que d'autres vendeurs installeront leurs logiciels. La plupart des routines d'installation viendront écraser ce qui y est déjà - cela est vrai aussi pour dpkg. On peut, bien sûr, choisir de ne pas installer de logiciels de tierce partie dans /usr/local. Malheureusement, la plupart des routines d'installation ne signalent pas à l'avance ce qu'elles installent ni où elles l'installent.</p>
<p>Deuxième raison : /usr/local/bin est dans le PATH par défaut. Il s'ensuit que votre shell trouve les programmes installés sans que vous ayez à intervenir. A contrario, vous devrez intervenir si vous ne souhaitez pas utiliser ces programmes. Au pire, cela affecte le système lui-même -  de nombreuses parties du système reposent sur des scripts shell.</p>
<p>Troisième raison : l'ensemble des outils de compilation effectuent leurs recherches dans /usr/local par défaut. Le compilateur cherche les headers dans /usr/local/include et l'éditeur de liens cherche les librairies dans /usr/local/lib. C'est quelquefois très pratique, mais très difficile à désactiver si le besoin s'en fait sentir. On peut facilement désactiver le compilateur en mettant dans /usr/local/include un fichier parasite auquel on donne le nom de <code>stdio.h</code>.</p>
<p>Ceci dit, il est possible d'installer Fink dans  /usr/local. Le script d'installation vous avertira que, si vous le faites, ce sera à vos risques et périls, mais continuera l'installation après votre accord.</p>
</answer>
</faqentry>
<faqentry name="why-sw" >
<question>
<p>Pourquoi avoir choisi /sw ?</p>
</question>
<answer>
<p>Ce choix est tout-à-fait arbitraire, mais il est vraisemblable qu'il demeure le même, au moins dans un avenir prévisible, tant pour des raisons pratiques (mise à niveau) que par le fait qu'il n'entre en conflit avec aucun autre système de paquets.</p>
</answer>
</faqentry>
</chapter>
<chapter filename="relations" >
<title>Relations avec d'autres projets</title>
<shorttitle>Relations</shorttitle>
<faqentry name="upstream" >
<question>
<p>Envoyez-vous aux mainteneurs situés en amont de vous les rustines que vous faites ?</p>
</question>
<answer>
<p>
Nous essayons. Parfois, c'est facile et tout le monde en profite à la prochaine version du paquet. Malheureusement, ce n'est pas toujours si simple avec la plupart des paquets. Quelques problèmes courants :
</p>
<ul>
<li>Le mainteneur du paquet Fink est très occupé et n'a pas le temps de renvoyer la rustine et des explications détaillées aux mainteneurs situés en amont.</li>
<li>Les mainteneurs situés en amont rejette la rustine. Il peut y avoir de très bonnes raisons à cela. La plupart des mainteneurs situés en amont ont fortement intérêt à conserver un code source pur, des contrôles de configuration clairs et à maintenir la compatibilité avec les autres plates-formes.</li>
<li>Les mainteneurs situés en amont acceptent la rustine, mais cela peut prendre des semaines ou   des mois avant qu'ils ne produisent une nouvelle version de leur paquet.</li>
<li>Le paquet a été abandonné par ses auteurs et il n'existe pas de nouvelle version dans laquelle la rustine peut être intégrée.</li>
</ul>
</answer>
</faqentry>
<faqentry name="debian" >
<question>
<p>Quelles sont vos relations avec le projet Debian ? Portez-vous Debian Linux sur Mac OS X ?</p>
</question>
<answer>
<p>
Il n'y a pas de relation officielle entre Fink et <link url="http://www.debian.org" >Debian</link>.
Fink <em>n'est pas</em> un port de la distribution Debian GNU/Linux .
Mais, nous avons porté les outils de gestion de paquet de Debian (dpkg, dselect, apt-get) et nous les utilisons ainsi que le format de paquet binaire .deb. Nos paquets sont faits sur mesure pour Mac OS X / Darwin et n'utilise pas le format de paquet source Debian.
</p>
</answer>
</faqentry>
<faqentry name="apple" >
<question>
<p>Quelles sont vos relations avec Apple ?</p>
</question>
<answer>
<p>
<link url="http://www.apple.com/" >Apple</link> sait que Fink existe et nous a apporté son soutien dans le cadre de ses relations avec les projets Open Source. Durant l'été et l'automne 2001, Apple nous a fourni les sources des pré-versions  de Mac OS X dans l'espoir que les paquets Fink puissent être adaptés à temps pour la version officielle. Citation : <em>&quot;Nous espérons que cela mettra en évidence notre engagement, que d'aucuns mettent en doute. Nous nous affirmerons dans les projets open source au fil du temps.&quot;</em>
Merci Apple !
</p>
</answer>
</faqentry>
<faqentry name="openosx" >
<question>
<p>Quelles sont vos relations avec OpenOSX.com ?</p>
</question>
<answer>
<p>
Ils ont utilisé Fink pour compiler la première version de leur CD GIMP et refusent de le reconnaître. Lire le <link url="http://fink.sourceforge.net/pr/openosx.php" >communiqué officiel</link> pour de plus amples informations.
</p>
</answer>
</faqentry>
<faqentry name="forked" >
<question>
<p>Quelles sont vos relations avec macosx.forked.net ?</p>
</question>
<answer>
<p>
Ce site redistribue certains paquets Fink en tant que paquets avec installeur, identiques à ceux de Fink, mais avec leur propres textes, dans lesquels Fink n'est pas mentionné. Lire le <link url="http://fink.sourceforge.net/pr/forked.php" >communiqué officiel</link> pour de plus amples informations.
</p>
</answer>
</faqentry>
<faqentry name="darwinports" >
<question>
<p>Quelles sont vos relations avec Darwinports ?</p>
</question>
<answer>
<p>
Darwinports et Fink sont des projets complémentaires. Certaines parties se recouvrent et plusieurs personnes contribuent à la fois au projet Fink et au projet OpenDarwin. Benjamin Reed, par exemple, fait les paquets KDE pour les deux. Darwinports/OpenDarwin utilise des rustines de Fink, et nous envisageons une collaboration sur un nouveau moteur de dépendances.
</p>
<p>
OpenDarwin est parti de rien pour tenter une nouvelle approche d'un système de construction de paquets. Lire le communiqué sur <link url="http://www.opendarwin.org/projects/darwinports/en/faq.php" >OpenDarwin.org</link> pour de plus amples informations.
</p>
</answer>
</faqentry>
</chapter>

<chapter filename="mirrors">
    <title>Miroirs de Fink</title>
    <shorttitle>Miroirs</shorttitle>
    <faqentry name="when-use">
        <question>
            <p>Qu'est-ce qu'un miroir Fink ?</p>
        </question>
        <answer>
        <p>
Un miroir Fink est un serveur rsync qui reflète les fichiers de description actuels et stables que Fink utilisent pour construire les paquets à partir du source.
       </p>
	 </answer>
    </faqentry>
<faqentry name="why">
    <question>
        <p>Pourquoi utiliser des miroirs rsync ?</p>
    </question>
    <answer>
    <p>Rsync est un protocole très rapide. Il met à jour les fichiers de description plus vite que l'ancienne méthode de mise à jour via CVS. De plus, les mises à jour via CVS sont toujours faites à partir de sourceforge.net, tandis que les mises à jour via rsync peuvent être faites à partir d'un miroir proche de votre lieu de téléchargement.</p>
    </answer>
</faqentry>
<faqentry name="where">
    <question>
        <p>Où trouver de plus amples informations sur les miroirs Fink ?</p>
    </question>
    <answer>
    <p>Tous les miroirs Fink sont fusionnés sous le nom de domaine finkmirrors.net. Vous trouverez de plus amples informations sur le site web http://finkmirrors.net/.
</p>
</answer>
</faqentry>
<faqentry name="when-not">
    <question>
        <p>Impossible de se connecter au serveur rsync. Que faire ?</p>
    </question>
    <answer>
<p>Il arrive que certains murs pare-feu particulièrement efficaces vous empêchent de vous connecter à des services rsync. Dans ce cas, continuez à utiliser la méthode CVS.
</p>
</answer>
</faqentry>
<faqentry name="otherinfogone">
    <question>
        <p>Après passage à la méthode rsync, tous les fichiers info des arborescences inutilisées ont disparu.</p>
    </question>
    <answer>
<p>C'est normal. La méthode rsync ne met à jour que l'arborescence active, par exemple 10.3, et supprime tous les répertoires CVS.
</p></answer>
</faqentry>
<faqentry name="howswitch">
    <question>
        <p>Comment passer d'une méthode à une autre à volonté ?</p>
    </question>
    <answer>
<p>En utilisant fink selfupdate-rsync pour passer à la méthode rsync ou fink selfupdate-cvs pour passer à la méthode CVS.</p></answer>
</faqentry>
<faqentry name="status">
    <question>
        <p>Comment connaître l'état actuel des miroirs rsync ?</p>
    </question>
    <answer><p>Allez sur http://finkmirrors.net/status.html</p>
    </answer>
</faqentry>
<faqentry name="Master">
    <question>
        <p>Qu'est-ce qu'un miroir Distfiles ?</p>
    </question>
    <answer>
    <p>Il est parfois difficile de trouver une version précise d'un source sur Internet. Les miroirs Distfiles stockent les paquets source nécessaires à fink pour construire ses paquets source. Ils font aussi office de miroir.</p>
    </answer>
</faqentry>
</chapter>

  <chapter filename="upgrade-fink">
    <title>Mise à jour de Fink (Résolution de problèmes spécifiques à une version donnée)</title>
    <shorttitle>Mise à jour de Fink</shorttitle>
    <faqentry name="gcc-0.16.0">
      <question>
        <p>Après passage à la version 0.16.0, fink considère la version du compilateur gcc 3.3 installée sur le système comme obsolète. Que faire ?</p>
      </question>
      <answer>
        <p>À partir de Panther, Fink a été mis à jour pour fonctionner avec le nouveau compilateur gcc 3.3. Pour pouvoir gérer à la fois 10.2 (Jaguar) et 10.3 (Panther), il faut que tous les utilisateurs installent la dernière mise à jour de gcc 3.3 (mise à jour d'août 2003 pour les utilisateurs de Jaguar, outils XCode de Panther pour les utilisateurs de Panther). Ce message d'alerte apparaîtra si vous avez installé la béta précédente de XCode correspondant aux Developer Tools de décembre 2002 pour Max OS X 10.2. Si vous utilisez 10.2, la commande :</p>
        <codeblock>gcc --version</codeblock>
        <p>vous dira quelle version est installée sur votre système. À partir du 24 octobre 2003, il faut avoir le build 1493 ou supérieur.</p>
        <p>Les utilisateurs de 10.2 peuvent télécharger la mise à jour d'août 2003 sur <link url="http://developer.apple.com/">Apple Developer Connection</link>
(enregistrement gratuit obligatoire).</p>
        <p>Les utilisateurs de 10.3 doivent installer les outils de développement compatibles avec Panther (c'est-à-dire XCode). Vous devez trouver un CD contenant XCode parmi ceux reçus avec Panther.</p>
      </answer>
    </faqentry>
  </chapter>

   <chapter filename="usage-fink">
    <title>Installer, Utiliser et Entretenir Fink</title>
    <shorttitle>Utilisation de Fink</shorttitle>
    <faqentry name="what-packages">
      <question>
        <p>Comment savoir quels sont les paquets gérés par Fink ?</p>
      </question>
      <answer>
        <p>Depuis Fink 0.2.3, il y a la commande list.  Elle produit une liste
	de tous les paquets connus de votre installation de Fink.
	Exemple:</p>
        <codeblock>fink list</codeblock>
        <p>Si vous utilisez la distribution binaire, <code>dselect</code> vous donne une liste des paquets disponibles dans laquelle vous pouvez naviguer. Remarque : vous devez utiliser la commande sudo si vous voulez sélectionner et installer des paquets avec dselect.</p>
        <p>Il y a aussi la <link url="http://fink.sourceforge.net/pdb/">base de données de paquets</link> sur le site web. </p>
      </answer>
    </faqentry>
    <faqentry name="proxy">
      <question>
        <p>Comment configurer fink pour utiliser un proxy HTTP quand on est derrière un mur pare-feu ?</p>
      </question>
      <answer>
        <p>La commande <code>fink</code> permet de prendre en compte des réglages de proxy qui seront utilisés par  <code>wget</code>/<code>curl</code>. Si on ne vous a pas posé de question sur vos réglages de proxies lors de la première installation, vous pouvez taper <code>fink configure</code> pour les régler. Vous pouvez aussi utiliser cette commande à n'importe quel moment pour reconfigurer la commande <code>fink</code>. Si vous avez suivi les instructions du guide d'installation et utilisé <filename>/sw/bin/init.csh</filename> (ou <filename>/sw/bin/init.sh </filename>), alors <code>apt-get</code> et <code>dselect</code> utiliseront aussi ces réglages de proxies. Assurez-vous d'avoir bien indiqué le protocole utilisé, par exemple :</p>
<codeblock>ftp://proxy.yoursite.somewhere</codeblock>
        <p>Si vous avez toujours des problèmes, allez dans Préférences système, cliquez sur Réseaux, sélectionnez l'onglet proxies et vérifiez que la case "Utiliser le mode FTP passif (PASV)" est cochée.</p>
      </answer>
    </faqentry>
    <faqentry name="firewalled-cvs">
      <question>
        <p>Comment mettre à jour les paquets disponibles sur CVS lorsqu'on utilise un firewall ?</p>
      </question>
      <answer>
        <p>Le paquet<em> cvs-proxy</em> peut créer un tunnel à travers les proxies HTTP.</p>
        <ul>
          <li><p>Tout d'abord, téléchargez les fichiers <link url="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/fink/dists/10.2/unstable/main/
finkinfo/devel/">cvs-proxy</link> (un fichier .info et un fichier .patch) et placez-les dans votre arborescence locale. (c'est-à-dire /sw/fink/dists/local/main/finkinfo/).</p></li>
          <li><p>Installez le paquet <em>cvs-proxy</em> avec la commande :</p>
	  <p><code>fink install <em>cvs-proxy</em></code></p></li>
          <li><p>Les paquets sont alors mis à jour avec les commandes :</p>
	  <p><code>fink selfupdate-cvs</code></p>
	  <p><code>fink update-all</code></p></li>
        </ul>
        <p>Si Fink n'est pas configuré pour utiliser un proxy, changez les
	réglages en utilisant :</p>
        <p><code>fink configure</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="moving">
      <question>
        <p>Est-il possible de déplacer Fink vers un autre dossier après
	l'installation ?</p>
      </question>
      <answer>
        <p>Non. Vous pouvez bien sûr déplacer les fichiers en utilisant
	mv ou le Finder, mais 99% des programmes ne fonctionneront plus si vous faites cela. En effet, la majorité des programmes Unix utilisent des chemins d'accès directement inclus dans le fichier binaire pour accéder,entre autres, à des données et des librairies.</p>
      </answer>
    </faqentry>
    <faqentry name="moving-symlink">
      <question>
        <p>Est-ce que Fink fonctionnera correctement si on le déplace après installation et que l'on crée un lien symbolique vers l'ancien emplacement ?</p>
      </question>
      <answer>
        <p>Peut-être. On peut supposer que le fonctionnement sera correct dans l'ensemble, mais il y aura certainement des problèmes ici ou là.</p>
      </answer>
    </faqentry>
    <faqentry name="removing">
      <question>
        <p>Comment désinstaller la totalité de Fink ?</p>
      </question>
      <answer>
        <p>Presque tous les fichiers installés par fink se trouvent dans le répertoire /sw (ou bien l'endroit où vous avez choisi de faire l'installation). Donc, pour supprimer Fink, entrez cette commande :</p>
        <codeblock>sudo rm -rf /sw</codeblock>
        <p>La seule exception concerne XFRee86. Si vous avez installé XFree86 via Fink (vous avez, par exemple,  installé le paquet <code>xfree86</code> ou <code>xfree86-rootless</code>, au lieu d'utiliser <code>system-xfree86</code>) et que vous voulez le supprimer, vous devrez aussi saisir ceci :</p>
        <codeblock>sudo rm -rf /usr/X11R6 /etc/X11 /Applications/XDarwin.app</codeblock>
        <p>Si vous ne pensez pas réinstaller Fink, vous pourrez aussi
	supprimer la ligne "<code>source /sw/bin/init.csh</code>" que
	vous aviez ajoutée dans le fichier <filename>.cshrc</filename> ou la ligne "<code>source /sw/bin/init.sh</code>" que vous aviez ajoutée dans le fichier <filename>.bashrc</filename>, suivant vos réglages, en utilisant un éditeur de texte.</p>
      </answer>
    </faqentry>
    <faqentry name="bindist">
      <question>
        <p>La base de données des paquets sur le site web mentionne le paquet xxx, mais apt-get ou dselect eux ne le mentionnent pas. Qui a raison ?</p>
      </question>
      <answer>
        <p>Ils ont tous raison. La <link url="http://fink.sourceforge.net/pdb/">base de données des paquets</link> donne la liste de tous les paquets, même ceux qui sont encore dans la section instable.  Les outils <code>dselect</code> et <code>apt-get</code>, de leur côté, donnent la liste des paquets disponibles en tant que binaires précompilés. De nombreux paquets ne sont pas disponibles sous forme précompilée via ces outils pour diverses raisons. Un paquet doit être dans la section "stable" de la dernière mise à jour de Fink pour être pris en compte, et il doit, de plus, passer avec succès un certain nombre de tests relatifs aux règles de fink et aux restrictions de licences et brevets.</p>
        <p>Si vous voulez installer un paquet qui n'est pas disponible via <code>dselect</code> / <code>apt-get</code>, vous devez le compiler à partir du code source en utilisant <code>fink install <em>nom_du_paquet</em></code>. Vérifiez que vous avez installé les Developer Tools avant d'essayer ceci. (S'il n'y a pas d'installeur pour les Developer Tools dans votre répertoire <code>/Applications</code> , vous pouvez les télécharger gratuitement sur <link url="http://connect.apple.com/">Apple Developer Connection</link> après enregistrement). Voir aussi la question à propos des instables ci-dessous.</p>
	</answer>
	</faqentry>
    <faqentry name="unstable">
      <question>
        <p>Comment installer un paquet instable quand la commande fink ne le trouve pas ('no package found') ?</p>
      </question>
      <answer>
        <p>Assurez-vous d'abord de savoir ce que signifie 'instable'. Peu de
	personnes ont testés les paquets instables. C'est pourquoi Fink
	ne recherche pas dans cette arborescence par défaut. Si vous décidez
	d'activer l'arborescence instable, pensez à envoyer un courriel au responsable du paquet si quelque chose fonctionne (ou ne fonctionne pas). Ce sont vos réactions qui nous permettent de décider si un paquet peut entrer dans l'arborescence stable ! Pour connaître le mainteneur du paquet, lancez la commande <code>fink info &lt;nom_du_paquet&gt;</code>.</p>
        <p>Les paquets ont souvent des dépendances, et les paquets dans l'arborescence instable dépendent souvent d'autres paquets de cette même arborescence. Il est donc conseillé d'activer la totalité de l'arborescence instable.</p>
        <p>Si vous voulez que Fink utilise toute l'arborescence instable, modifiez le fichier <filename>/sw/etc/fink.conf</filename> : ajoutez <code>unstable/main</code> et <code>unstable/crypto</code> à la ligne <code>Trees:</code>, puis exécutez <code>fink selfupdate; fink index</code>.</p>
        <p>Si vous ne voulez qu'un ou deux paquets instables spécifiques, vous devez changer vos réglages pour utiliser la mise à jour CVS (c'est-à-dire utiliser <code>fink selfupdate-cvs</code>), car rsync met seulement à jour les arborescences activées dans le fichier <filename>fink.conf</filename>. Éditez <filename>/sw/etc/fink.conf</filename> et ajoutez <code>local/main</code> à la ligne <code>Trees:</code>, si elle n'y figure pas déjà. Vous devrez alors exécuter <code>fink selfupdate</code> pour télécharger les fichiers de description des paquets. Copiez ensuite les fichiers <code>.info</code> qui vous intéressent (et leurs fichiers <code>.patch</code> associés, s'ils existent) à partir de  <filename>/sw/fink/dists/unstable/main/finkinfo</filename> (ou  <filename>/sw/fink/dists/unstable/crypto/finkinfo</filename>) dans <filename>/sw/fink/dists/local/main/finkinfo</filename>. Notez cependant que votre paquet peut dépendre d'autres paquets (ou de versions particulières) qui sont uniquement présents dans l'arborescence instable. Vous devrez alors déplacer aussi leurs fichiers <code>.info</code> et <code>.patch</code> associés. Après avoir déplacé tous les fichiers, lancez la commande <code>fink index</code> pour que l'index des paquets disponibles de Fink soit mis à jour. Vous pourrez ensuite utiliser rsync à nouveau (<code>fink selfupdate-rsync</code>) si vous le désirez.</p>
      </answer>
    </faqentry>
   <faqentry name="sudo">
      <question>
        <p>Comment ne plus avoir à saisir mon mot de passe après la
	commande sudo ?</p>
      </question>
      <answer>
        <p>Si vous n'êtes pas paranoïaque, vous pouvez configurer sudo pour qu'il ne vous demande pas votre mot de passe. Pour cela, modifiez
	<filename>/etc/sudoers</filename> en tant que super-utilisateur et ajoutez la ligne suivante :</p>
        <codeblock>username ALL = NOPASSWD: ALL</codeblock>
        <p>Remplacez bien sûr <code>username</code> par votre nom
	d'utilisateur. Cette ligne vous permet d'exécuter n'importe quelle
	commande avec sudo sans saisir votre mot de passe.</p>
</answer>
</faqentry>
    <faqentry name="exec-init-csh">
      <question>
        <p>À l'exécution de init.csh ou init.sh, un message d'erreur "Permission denied" apparaît. Que se passe-t-il ?</p>
      </question>
      <answer>
        <p>init.csh et init.sh ne doivent pas être exécutés comme les commandes habituelles. Ces fichiers définissent des variables d'environnement, tels PATH ou MANPATH, dans votre shell. Pour avoir un effet durable sur votre shell, il faut utiliser la commande <code>source</code> pour csh/tcsh ou la commande <code>.</code> pour bash/zsh, comme ceci :</p>
       <p>pour csh/tcsh :</p>
<codeblock>source /sw/bin/init.csh</codeblock>
        <p>pour bash/zsh :</p>
 <codeblock>. /sw/bin/init.sh</codeblock>
      </answer>
    </faqentry>
    <faqentry name="dselect-access">
      <question>
        <p>Pourquoi est-il impossible de télécharger des paquets après avoir utilisé le menu "[A]ccess" dans dselect ?</p>
      </question>
      <answer>
        <p>Vous avez certainement fait pointer apt sur un miroir Debian, qui
	ne contient, bien sûr, aucun des fichiers de Fink. Vous pouvez corriger
	cela manuellement ou via dselect. Pour le faire manuellement, modifiez
	en tant que super-utilisateur le fichier <code>/sw/etc/apt/sources.list </code>dans un éditeur de texte. Supprimez les lignes qui mentionnent debian.org et remplacez-les par celles-ci :</p>
<codeblock>deb http://us.dl.sourceforge.net/fink/direct_download release main crypto
deb http://us.dl.sourceforge.net/fink/direct_download current main crypto</codeblock>
<p>
	(Si vous vivez en Europe, remplacez <code>us.dl.sourceforge.net</code>
	par <code>eu.dl.sourceforge.net</code>)</p>
        <p>Pour modifier avec dselect, relancez "[A]ccess", choisissez la méthode "apt" et entrez les informations suivantes :</p>
        <p>URL: http://us.dl.sourceforge.net/fink/direct_download - Distribution: release - Components: main crypto</p>
        <p>Ensuite, spécifiez que vous voulez ajouter une autre source et
	répétez la procédure avec "current" à la place de "release".</p>
        <p>Une version modifiée du paquet apt (contenant le script de
	configuration en tant que plug-in de dselect) est en cours de
	développement dans CVS.</p>
      </answer>
    </faqentry>
    <faqentry name="cvs-busy">
      <question>
        <p>Lors de l'exécution de <quote>fink selfupdate</quote> ou "fink
        selfupdate-cvs", le message "<code>Updating using CVS failed.
        Check the error messages above.</code>" apparaît.</p>
      </question>
      <answer>
        <p>Si le message est le suivant :</p>
        <codeblock>Can't exec "cvs": No such file or directory at 
/sw/lib/perl5/Fink/Services.pm line 216, &lt;STDIN&gt; line 3.
### execution of cvs failed, exit code -1</codeblock>
        <p>alors vous devez installer les Developer Tools.</p>
        <p>Si, par contre, la dernière ligne est la suivante :</p>
        <codeblock>### execution of su failed, exit code 1</codeblock>
        <p>vous devrez regarder plus haut pour voir l'erreur. Si vous voyez un
	message précisant que votre connection à été refusée :</p>
        <codeblock>(Logging in to anonymous@cvs.sourceforge.net)
CVS password:
cvs [login aborted]: connect to cvs.sourceforge.net:2401 failed: 
Connection refused
### execution of su failed, exit code 1
Failed: Logging into the CVS server for anonymous read-only access failed.</codeblock>
        <p>ou bien un message comme le suivant :</p>
        <codeblock>cvs [update aborted]: recv() from server cvs.sourceforge.net: 
Connection reset by peer 
### execution of su failed, exit code 1 
Failed: Updating using CVS failed. Check the error messages above.</codeblock>
        <p>ou :</p>
        <codeblock>cvs [update aborted]: End of file received from server</codeblock>
        <p>ou encore :</p>
        <codeblock>cvs [update aborted]: received broken pipe signal</codeblock>
        <p>alors il est possible que le serveur CVS soit surchargé. Il vous
	faudra réessayer plus tard.</p>
        <p>Il se peut que les permissions soient mal définies dans
	votre dossier CVS et que vous n'y ayez pas accès, ce qui génère des
	messages "Permission denied" :</p>
        <codeblock>cvs update: in directory 10.2/stable/main: 
cvs update: cannot open CVS/Entries for reading: No such file or directory
cvs server: Updating 10.2/stable/main 
cvs update: cannot write 10.2/stable/main/.cvsignore: Permission denied
cvs [update aborted]: cannot make directory 10.2/stable/main/finkinfo: 
No such file or directory 
### execution of su failed, exit code 1 Failed: 
Updating using CVS failed. Check the error messages above.</codeblock>
        <p>Dans ce cas-là, vous devez remettre à zéro votre répertoire CVS.
	Utilisez la commande:</p>
        <codeblock>sudo find /sw/fink -type d -name 'CVS' -exec rm -rf {}\
; fink selfupdate-cvs</codeblock>
        <p>Si vous ne voyez aucun des messages ci-dessus, il est très probable
	que vous ayez modifié un fichier dans l'arborescence /sw/fink/dists et
	que le mainteneur ait modifié ce fichier. Regardez de nouveau dans le message
	apparu après selfupdate-cvs les lignes commençant par "C", comme :</p>
        <codeblock>C 10.2/unstable/main/finkinfo/libs/db31-3.1.17-6.info 
... (other info and patch files) ... 
### execution of su failed, exit code 1 
Failed: Updating using CVS failed. Check the error messages above.</codeblock>
        <p>La lettre "C" signifie que CVS a rencontré un problème en essayant de
	mettre à jour la dernière version. La solution consiste à retirer toutes les lignes commençant par "C" dans le message de sortie de selfupdate-cvs, et à essayer de nouveau.</p>
        <codeblock>sudo rm /sw/fink/10.2/unstable/main/finkinfo/libs/db31-3.1.17-6.info
fink selfupdate-cvs</codeblock>
      </answer>
    </faqentry>
    <faqentry name="kernel-panics">
      <question>
        <p>When I use Fink, my whole machine freezes up/kernel panics/dies.
        Help!</p>
      </question>
      <answer>
        <p>A number of recent reports on the <link url="http://sourceforge.net/mailarchive/forum.php?forum=fink-users">fink-users
        mailing list</link> have indicated problems (including kernel panics
        and infinite hangs during patching) when using Fink to compile
        packages while anti-virus software is installed. You may need to
        switch off any anti-virus software before using Fink.</p>
      </answer>
    </faqentry>
    <faqentry name="not-found">
      <question>
        <p>I'm trying to install a package, but Fink can't download it. The
        download site shows a later version number of the package than what
        Fink has. What do I do?</p>
      </question>
      <answer>
        <p>The package sources get moved around by the upstream sites when new
        versions are released.</p>
        <p>The first thing you should do is run <code>fink selfupdate</code>.
        It may be that the package maintainer has already fixed this, and you
        will get an updated package description with either a more recent
        version or a revised download URL.</p>
        <p>If this doesn't work, most sources are available on <link url="http://distfiles.master.finkmirrors.net/">http://distfiles.master.finkmirrors.net/</link>
        (thanks to Rob Braun) , and you can run <code>fink configure</code> to
        choose to search "Master" source mirrors so that Fink will
        automatically look there.</p>
        <p>If this doesn't work, please let the package maintainer (available
        from "<code>fink describe <em>packagename</em>
          </code>") know that the
        URL is broken; not all maintainers read the mailing lists all of the
        time.</p>
        <p>To get a usable source, first try hunting around the remote site in
        other directories for the same version of the source that Fink wants
        (e.g. in an "old" directory). Keep in mind, though, that some remote
        sites like to trash the old versions of their packages. If the
        official site doesn't have it, then try a web search--sometimes there
        are unofficial sites that have the tarball you want. Another place to
        look is <link url="http://us.dl.sourceforge.net/fink/direct_download/source/">http://us.dl.sourceforge.net/fink/direct_download/source/</link>,
        which is where Fink stores sourcefiles from packages that have been
        released in binary form. If all of the above fail, then you might
        consider posting on the <link url="http://sourceforge.net/mailarchive/forum.php?forum=fink-users">fink-users
        mailing list</link> to ask if anybody has the old source available to
        give you.</p>
        <p>Once you locate the proper source tarball, download it manually,
        and then move the file into your Fink source location (i.e. for a
        default Fink install, "<code>sudo mv <em>package-source.tar.gz</em>
        /sw/src/</code>". Then use '<code>fink install <em>packagename</em>
          </code>' as normal.</p>
        <p>If you can't get the source file, then you'll have to wait for the
        maintainer to deal with the problem. They may either post a link to
        the old source, or update the .info and .patch files to use the newer
        version.</p>
      </answer>
    </faqentry>
    <faqentry name="fink-not-found">
      <question>
        <p>I get "command not found" errors when I run Fink or anything that I
        installed with Fink.</p>
      </question>
      <answer>
        <p>If this always happens, then you may have inadvertently modified (or failed to modify) your startup scripts. Run the
        <filename>/sw/bin/pathsetup.command</filename> script (either by
        double-clicking in the Finder or in a terminal), which will attempt to
        detect your startup configuration. You'll then need to open a new
        terminal session so that your environment settings are loaded.  <em>Note:</em>  for <code>fink-0.18.3</code> and <code>fink-0.19.2</code>, the script has been changed to <filename>/sw/bin/pathsetup.sh</filename>, and must be run in a terminal.</p>
        <p>On the other hand, if you only have problems in the Apple X11
        terminal, this probably means that you need to create a <link url="http://fink.sourceforge.net/doc/x11/run-xfree86.php#xinitrc">.xinitrc</link>
        file and add the line</p>
        <codeblock>. /sw/bin/init.sh</codeblock>
        <p>near the beginning (i.e. before any programs get run). Restart X11
        (if running) after you do this.</p>
      </answer>
    </faqentry>
    <faqentry name="invisible-sw">
      <question>
        <p>I want to hide /sw in the Finder to keep users from damaging the
        Fink setup.</p>
      </question>
      <answer>
        <p>You can indeed do this. If you have the Development Tools
        installed, then you can run the following command:</p>
        <codeblock>sudo /Developer/Tools/SetFile -a V /sw</codeblock>
        <p>This makes /sw invisible, just like the standard system folders
        (/usr, etc.). If you don't have the Developer Tools, there are various
        third-party applications that let you manipulate file attributes--you
        need to set /sw to be invisible.</p>
      </answer>
    </faqentry>
    <faqentry name="install-info-bad">
      <question>
        <p>I can't install anything, because I get the following error:
        "install-info: unrecognized option `--infodir=/sw/share/info'"</p>
      </question>
      <answer>
        <p>This usually is due to a problem in your PATH. In a terminal window
        type:</p>
        <codeblock>printenv PATH</codeblock>
        <p>If <filename>/sw/sbin</filename> doesn't appear at all, then you
        need to set your environment up as per the <link url="http://fink.sourceforge.net/doc/users-guide/install.php#setup">instructions</link>
        in the Users Guide. If <filename>/sw/sbin</filename> is there, but
        there are other directories ahead of it (e.g.
        <filename>/usr/local/bin</filename>), then you will either want to
        reorder your PATH so that <filename>/sw/sbin</filename> is near the
        beginning, or if you really need the other directory to be before
        <filename>/sw/sbin</filename>, then you'll want to temporarily rename
        the other <filename>install-info</filename> when you use Fink.</p>
      </answer>
    </faqentry>
    <faqentry name="bad-list-file">
      <question>
        <p>I can't install or remove anything, because of a problem with a
        "files list file".</p>
      </question>
      <answer>
        <p>Typically these errors take the form:</p>
        <codeblock>files list file for package <em>packagename</em> contains empty filename</codeblock>
        <p>or</p>
        <codeblock>files list file for package <em>packagename</em> is missing final newline</codeblock>
        <p>This can be fixed, with a little work. If you have the .deb file
        for the offending package currently available on your system, then
        check its integrity by running</p>
        <codeblock>dpkg --contents <em>full-path-to-debfile</em>
        </codeblock>
        <p>e.g.</p>
        <codeblock>dpkg --contents /sw/fink/debs/libgnomeui2-dev_2.0.6-2_darwin-powerpc.deb</codeblock>
        <p>If you get back a listing of directories and files, then your .deb
        is OK. If the output is something other than directories and files, or
        if you don't have the .deb file, you can still proceed because the
        error doesn't interfere with builds.</p>
        <p>If you have been installing from the binary distribution or you
        know for sure that the version in the binary distribution is the same
        as what you have installed (e.g. by checking the <link url="http://fink.sourceforge.net/pdb/index.php">package
        database</link>), then you can get a .deb file by running <code>sudo
        apt=get install --reinstall --download-only <em>packagename</em>
          </code>. Otherwise you can build one yourself by running <code>fink
        rebuild <em>packagename</em>
          </code>, but it won't install yet.</p>
        <p>Once you have a valid .deb file, then you can reconstitute the
        file. First become root by using <code>sudo -s</code> (enter your
        administrative user password if necessary), and then use the following
        command:</p>
        <codeblock>dpkg -c <em>full-path-to-debfile</em> | awk '{if ($6 == "./"){ print "/."; } \
else if (substr($6, length($6), 1) == "/")\
{print substr($6, 2, length($6) - 2); } \
else { print substr($6, 2, length($6) - 1);}}'\ 
&gt; /sw/var/lib/dpkg/info/<em>packagename</em>.list</codeblock>
        <p>e.g.</p>
        <codeblock>dpkg -c /sw/fink/debs/libgnomeui2-dev_2.0.6-2_darwin-powerpc.deb | awk \
'{if ($6 == "./") { print "/."; } \
else if (substr($6, length($6), 1) == "/") \
{print substr($6, 2, length($6) - 2); } \
else { print substr($6, 2, length($6) - 1);}}' \ 
&gt; /sw/var/lib/dpkg/info/libgnomeui2-dev.list</codeblock>
        <p>What this does is to extract the contents of the .deb file, remove
        everything but the filenames, and write these to the .list file.</p>
      </answer>
    </faqentry>
    <faqentry name="error-nineteen">
      <question>
        <p>When I use the Fink binary installer package, I get a big "19" in
        the window and can't install anything.</p>
      </question>
      <answer>
        <p>The number 19 appears because your OS X system is localized to a
        language other than English. (This is a bug in Apple's Installer, that
        it doesn't just show you the English-language error message.)</p>
        <p>The English language error message corresponding to number 19
        is</p>
        <p>"A root directory /sw exists. Please see the Read Me file for
        update instructions, or for information on installing Fink on a
        separate volume."</p>
        <p>You may be getting this error if you've used Fink before, and
        didn't delete <filename>/sw</filename>. If you haven't installed Fink
        before, the most likely cause of this is that you installed the Virex
        program available for free to .Mac users. As explained on Fink's
        webpage, Virex is incompatible with Fink (due to the Virex folks
        having made errors in the way they set things up).</p>
      </answer>
    </faqentry>
    <faqentry name="dselect-garbage">
      <question>
        <p>I get a bunch of garbage when I select packages in
        <filename>dselect</filename>. How can I use it?</p>
      </question>
      <answer>
        <p>There are issues between <filename>dselect</filename> and
        <filename>Terminal.app</filename>. A workaround is to enter the
        following command</p>
        <p>tcsh users:</p>
        <codeblock>setenv TERM xterm-color</codeblock>
        <p>bash users:</p>
        <codeblock>export TERM=xterm-color</codeblock>
        <p>before you run <filename>dselect</filename>. You may want to put
        this in your startup file (e.g. <code>.cshrc</code> |
        <code>.profile</code>) so that it gets run all of the time.</p>
      </answer>
    </faqentry>
    <faqentry name="perl-undefined-symbol">
      <question>
        <p>Why do I get a bunch of "dyld: perl undefined symbols" errors when
        I run Fink commands?</p>
      </question>
      <answer>
        <p>If you see an error sequence like the following:</p>
        <codeblock>dyld: perl Undefined symbols: 
_Perl_safefree
_Perl_safemalloc 
_Perl_saferealloc 
_Perl_sv_2pv 
_perl_call_sv
_perl_eval_sv 
_perl_get_sv</codeblock>
        <p>then what has probably happened is that you updated Perl to a new
        version and now <filename>storable-pm</filename> needs to be updated.
        You should update Fink. During the process you will be prompted to
        install either <filename>perl-core</filename> or
        <filename>system-perl</filename>; choose the latter. In addition,
        <filename>storable-pm</filename> should also get updated.</p>
        <p>For OS 10.1.x, perform the following commands (you'll need the
        Developer Tools):</p>
        <codeblock>sudo mv /sw/lib/perl5/darwin/Storable.pm /tmp 
sudo mv /sw/lib/perl5/darwin/auto/Storable /tmp 
fink rebuild storable-pm 
fink selfupdate-cvs</codeblock>
      </answer>
    </faqentry>
    <faqentry name="cant-upgrade">
      <question>
        <p>I can't seem to update Fink's version.</p>
      </question>
      <answer>
        <p>There are <link url="http://fink.sourceforge.net/download/fix-upgrade.php">special
        instructions</link> to follow under these circumstances.</p>
      </answer>
    </faqentry>
    <faqentry name="spaces-in-directory">
      <question>
        <p>Can I put Fink in a volume or directory with a space in its
        name?</p>
      </question>
      <answer>
        <p>We recommend against putting your Fink directory tree inside a
        directory with spaces in its name. It's just not worth the hassle.</p>
      </answer>
    </faqentry>
    <faqentry name="packages-gz">
      <question>
        <p>When I try to do a binary update, there are many messages with
        "File not found"</p>
      </question>
      <answer>
        <p>If you see something like the following:</p>
        <codeblock>Err file: local/main Packages 
File not found 
Ign file: local/main Release 
Err file: stable/main Packages 
File not found 
Ign file: stable/main Release 
Err file: stable/crypto Packages 
File not found 
Ign file: stable/crypto Release 
Hit http://us.dl.sourceforge.net 10.3/release/main Packages 
Hit http://us.dl.sourceforge.net 10.3/release/main Release 
Hit http://us.dl.sourceforge.net 10.3/release/crypto Packages 
Hit http://us.dl.sourceforge.net 10.3/release/crypto Release 
Hit http://us.dl.sourceforge.net 10.3/current/main Packages 
Hit http://us.dl.sourceforge.net 10.3/current/main Release 
Hit http://us.dl.sourceforge.net 10.3/current/crypto Packages 
Hit http://us.dl.sourceforge.net 10.3/current/crypto Release 
Failed to fetch file:/sw/fink/dists/local/main/binary-darwin-powerpc/Packages
File not found 
Failed to fetch file:/sw/fink/dists/stable/main/binary-darwin-powerpc/Packages
File not found
Failed to fetch file:/sw/fink/dists/stable/crypto/binary-darwin-powerpc/Packages
File not found 
Reading Package Lists... Done 
Building Dependency Tree...Done 
E: Some index files failed to download, 
they have been ignored, or old ones used instead. 
update available list script returned error exit status 1.</codeblock>
        <p>then all you need to do is run <code>fink scanpackages</code>. This
        generates the files that aren't being found.</p>
      </answer>
    </faqentry>
    <faqentry name="wrong-tree">
      <question>
        <p>I've changed my OS | Developer Tools, but Fink doesn't recognize
        the change.</p>
      </question>
      <answer>
        <p>When changing the Fink distribution (of which the source and binary
        distros are subsets), Fink needs to be told that this has happened. To
        do this, you can run a script that normally gets run when you first
        install Fink:</p>
        <codeblock>/sw/lib/fink/postinstall.pl</codeblock>
        <p>Doing this will point Fink to the correct place.</p>
      </answer>
    </faqentry>
    <faqentry name="seg-fault">
      <question>
        <p>I get errors with <code>gzip</code> | <code>dpkg-deb</code>I
        applications from the<code> fileutils </code>package! Help!</p>
      </question>
      <answer>
        <p>Errors of the form:</p>
        <codeblock>gzip -dc /sw/src/dpkg-1.10.9.tar.gz | /sw/bin/tar -xf - 
### execution of gzip failed, exit code 139</codeblock>
        <p>or</p>
        <codeblock>gzip -dc /sw/src/aquaterm-0.3.0a.tar.gz | /sw/bin/tar -xf -
gzip: stdout: Broken pipe 
### execution of gzip failed, exit code 138</codeblock>
        <p>or</p>
        <codeblock>dpkg-deb -b root-base-files-1.9.0-1 /sw/fink/dists/unstable/main/binary-darwin-powerpc/base

### execution of dpkg-deb failed, exit code 1
Failed: can't create package base-files_1.9.0-1_darwin-powerpc.deb</codeblock>
        <p>or segmentation faults when running utilities from<code>
        fileutils</code>, e.g. <code>ls</code> or <code>mv</code>, are likely
        to be due to a prebinding error in a library, and can be fixed by
        running</p>
        <codeblock>sudo /sw/var/lib/fink/prebound/update-package-prebinding.pl -f</codeblock>
      </answer>
    </faqentry>
    <faqentry name="pathsetup-keeps-running">
      <question>
        <p>When I open a Terminal window, I get a message that "Your
        environment seems to be correctly set up for Fink already.", and it
        logs out.</p>
      </question>
      <answer>
        <p>What happened is that somehow the OSX Terminal program has been
        told to run <code>/sw/bin/pathsetup.command</code> every time you log
        in. You can fix this by removing the Preferences file,
        <code>~/Library/Preferences/com.apple.Terminal.plist</code>.</p>
        <p>If you have other preferences that you want to keep, you can edit
        the file with a text editor and remove the reference to
        <code>/sw/bin/pathsetup.command</code>.</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="comp-general">
    <title>Compile Problems - General</title>
    <shorttitle>Compiling (1)</shorttitle>
    <faqentry name="compiler">
      <question>
        <p>A configure script complains that it can't find an "acceptable cc".
        What's that?</p>
      </question>
      <answer>
        <p>Read the docs next time. To compile packages from source, you must
        install the Developer Tools, which among other stuff contains the C
        compiler, <code>cc</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="cvs">
      <question>
        <p>When I try a "fink selfupdate-cvs" I get this message: "cvs:
        Command not found."</p>
      </question>
      <answer>
        <p>You need to install the Developer Tools.</p>
      </answer>
    </faqentry>
    <faqentry name="missing-make">
      <question>
        <p>I'm getting an error message involving <code>make</code>
        </p>
      </question>
      <answer>
        <p>if your message is of the form</p>
        <codeblock>make: command not found</codeblock>
        <p>or</p>
        <codeblock>Can't exec "make": 
No such file or directory at /sw/lib/perl5/Fink/Services.pm line 190.</codeblock>
        <p>It means you need to install the Developer Tools.</p>
        <p>On the other hand, if your error message looks like</p>
        <codeblock>make: illegal option -- C</codeblock>
        <p>then you've replaced the GNU version of the <code>make</code>
        utility installed as part of the Developer Tools with a BSD version of
        make. Many packages rely on special features only supported by GNU
        make. Make sure that <code>/usr/bin/make</code> is a symlink to
        <code>gnumake</code>, not <code>bsdmake</code>. Furthermore, make sure
        that <code>/usr/local/bin/</code> does not contain another copy of
        <code>make</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="head">
      <question>
        <p>I'm getting a strange usage message from the head command. What's
        broken?</p>
      </question>
      <answer>
        <p>If you're seeing this:</p>
        <codeblock>Unknown option: 1 Usage: head [-options] &lt;url&gt;...</codeblock>
        <p>followed by a list of option descriptions, you have a broken
        <code>head</code> executable. This happens when you install the Perl
        libwww library on an HFS+ system volume. It tries to create a new
        command <code>/usr/bin/HEAD</code>, which overwrites the existing
        <code>head</code> command because the file system is case-insensitive.
        <code>head</code> is a standard command used in many shell scripts and
        Makefiles. You need to get the original <code>head</code> executable
        back if you want to use Fink.</p>
        <p>The bootstrap script of the source release now checks for this, but
        you can still run into it if you use the binary release for first-time
        installation or install libwww after you installed Fink.</p>
        <p>This problem has also been reported due to the installation of
        <filename>/sw/bin/HEAD</filename> (not by any Fink package). This is
        easier to solve: rename <filename>/sw/bin/HEAD</filename>.</p>
      </answer>
    </faqentry>
    <faqentry name="also_in">
      <question>
        <p>When I try to install a package I get an error message about trying
        to overwrite a file that is in another package.</p>
      </question>
      <answer>
        <p>This occasionally happens with splitoff packages (i.e. the ones
        with -dev, -shlibs, etc.) when a file gets moved from one part of the
        splitoff to another (e.g. from <code>foo</code> to
        <code>foo-shlibs</code>. What you can do is overwrite the file with
        that from the package you are trying to install (since they are
        nominally the same):</p>
        <codeblock>sudo dpkg -i --force-overwrite <em>filename</em>
        </codeblock>
        <p>where <em>filename</em> is the .deb file corresponding to the
        package that you are trying to install.</p>
      </answer>
    </faqentry>
    <faqentry name="weak_lib">
      <question>
        <p>After I installed the December 2002 Development Tools I get
        messages about "weak libraries".</p>
      </question>
      <answer>
        <p>This is new with the December 2002 Tools. You may occasionally see
        messages like (choosing libgdk-pixbuf as an example):</p>
        <codeblock>ld: warning dynamic shared library:
/sw/lib/libgdk-pixbuf.dylib not made a weak library in output with
MACOSX_DEPLOYMENT_TARGET environment variable set to: 10.1</codeblock>
        <p>You may regard these as harmless. If you are curious, read through
        the release notes in the developer documentation directory, especially
        GCC's and the linker's, for more info. It essentially has to do with
        whether missing symbols at runtime is considered a fatal error on
        startup or not, for applications that use weak references.</p>
      </answer>
    </faqentry>
    <faqentry name="mv-failed">
      <question>
        <p>What does "execution of mv failed, exit code 1" mean when I try to
        build a package?</p>
      </question>
      <answer>
        <p>If you have StuffIt Pro installed, it could be that you have
        "Archive Via Real Name" mode enabled. Check for a StuffIt preference
        pane in the System Preferences tool, and disable "ArchiveViaRealName"
        if it's enabled. It contains a buggy reimplementation of a few
        important system calls that will cause a number of strange and
        transient errors such as this.</p>
        <p>Otherwise, am <filename>mv</filename> error typically means that
        another error happened earlier in the build, but the build process
        didn't stop. To track down the offending file(s), search in the output
        of the build for the nonexistent file, e.g. if you have something
        like:</p>
        <codeblock>mv /sw/src/root-foo-0.1.2-3/sw/lib/libbar*.dylib \
/sw/src/root-foo-shlibs-0.1.2-3/sw/lib/ 
mv: cannot stat `/sw/src/root-foo-0.1.2-3/sw/lib/libbar*.dylib': 
No such file or directory 
### execution of mv failed, exit code 1 
Failed: installing foo-0.1.2-3 failed</codeblock>
        <p>then you should look for <filename>libbar</filename> somewhere
        further back in the output of your build attempt.</p>
      </answer>
    </faqentry>
    <faqentry name="node-exists">
      <question>
        <p>I can't install a package | update because I get a message that a
        "node" already exists.</p>
      </question>
      <answer>
        <p>These errors look something like this:</p>
        <codeblock>Failed: Internal error: node for system-xfree86 already exists</codeblock>
        <p>This problem is that the dependency engine is confused, due to
        changes in some of the package info files. To fix it:</p>
        <ul>
          <li>
            <p>Remove the offending package by force, e. g.</p>
            <codeblock>sudo dpkg -r --force-all system-xfree86</codeblock>
            <p>for the example given above.</p>
          </li>
          <li>
            <p>Try again to install | upgrade. At some point a "virtual
          dependency" prompt will come up that includes the package you just
          removed. Select it, and it will be reinstalled during your
          build.</p>
          </li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="usr-local-libs">
      <question>
        <p>I've heard that libraries installed in /usr/local/lib sometimes
        cause build problems for Fink. Is this true?</p>
      </question>
      <answer>
        <p>This is a frequent source of problems, because the package
        configuration script finds libraries under
        <filename>/usr/local/lib</filename> before searching in the Fink path.
        If you are having problems with a build that aren't covered by another
        FAQ entry, you should check whether you have libraries in
        <filename>/usr/local/lib</filename>. If so, then try renaming
        <filename>/usr/local</filename> to something else, e.g.:</p>
        <codeblock>sudo mv /usr/local /usr/local.moved</codeblock>
        <p>do your build, and then put <filename>/usr/local</filename>
        back:</p>
        <codeblock>sudo mv /usr/local.moved /usr/local</codeblock>
      </answer>
    </faqentry>
    <faqentry name="toc-out-of-date">
      <question>
        <p>When I try to build a package, I get a message that a "table of
        contents" is out of date. What do I need to do?</p>
      </question>
      <answer>
        <p>The output hints at what to do. The message is usually something
        like:</p>
        <codeblock>ld: table of contents for archive: 
/sw/lib/libintl.a is out of date; 
rerun ranlib(1) (can't load from it)</codeblock>
        <p>What you need to do is run ranlib (as root) on whatever library is
        causing the problem. As an example, for the case above, you would
        run:</p>
        <codeblock>sudo ranlib /sw/lib/libintl.a</codeblock>
      </answer>
    </faqentry>
    <faqentry name="fc-atlas">
      <question>
        <p>Fink Commander hangs when I try to install atlas.</p>
      </question>
      <answer>
        <p>This happens because one of the steps in the build of
        <code>atlas</code> sends a prompt to the user that Fink Commander
        doesn't display. You'll have to use <code>fink install atlas</code>
        instead.</p>
      </answer>
    </faqentry>
    <faqentry name="basic-headers">
      <question>
        <p>I get messages saying that I'm missing stddef.h. Where do I find
        it?</p>
      </question>
      <answer>
        <p>This header, and many others, are provided by the DevSDK package of
        the Developer Tools. Check whether
        <filename>/Library/Receipts/DevSDK.pkg</filename> exists on your
        system. If not, then run the Dev Tools Installer again, and install
        the DevSDK package using a Custom Install.</p>
      </answer>
    </faqentry>
    <faqentry name="multiple-dependencies">
      <question>
        <p>I can't update, because Fink is "unable to resolve version conflict
        on multiple dependencies".</p>
      </question>
      <answer>
        <p>To get around this, try updating a single package, then try to use
        "fink update-all" again. If you still get the message, repeat the
        process.</p>
      </answer>
    </faqentry>
    <faqentry name="dpkg-parse-error">
      <question>
        <p>I can't install anything because I get "dpkg: parse error, in file
        `/sw/var/lib/dpkg/status'"!</p>
      </question>
      <answer>
        <p>This means that somehow your dpkg database got corrupted, usually
        from a crash or some other unrecoverable error. You can fix it by
        copying the previous version of the database, like so:</p>
        <codeblock>sudo cp /sw/var/lib/dpkg/status-old /sw/var/lib/dpkg/status</codeblock>
        <p>You may need to re-install the last couple of packages you
        installed before the problem started occurring.</p>
      </answer>
    </faqentry>
    <faqentry name="freetype-problems">
      <question>
        <p>I get errors involving freetype.</p>
      </question>
      <answer>
        <p>There are several varieties of such errors. If your error looks
        like:</p>
        <codeblock>/sw/include/pango-1.0/pango/pangoft2.h:52: 
error: parse error before '*' token 
/sw/include/pango-1.0/pango/pangoft2.h:57:
error: parse error before '*' token
/sw/include/pango-1.0/pango/pangoft2.h:61: 
error: parse error before '*' token 
/sw/include/pango-1.0/pango/pangoft2.h:86: 
error: parse error before "pango_ft2_font_get_face"
/sw/include/pango-1.0/pango/pangoft2.h:86: 
warning: data definition has no type or storage class 
make[2]: *** [rsvg-gz.lo] Error 1
make[1]: *** [all-recursive] Error 1 
make: *** [all-recursive-am] Error 2 
### execution of make failed, exit code 2 
Failed: compiling librsvg2-2.4.0-3 failed</codeblock>
        <p>or</p>
        <codeblock>In file included from vteft2.c:32: 
vteglyph.h:64: error:
parse error before "FT_Library" 
vteglyph.h:64: warning: 
no semicolon at end of struct or union vteft2.c: 
In function `_vte_ft2_get_text_width': 
vteft2.c:236: error: 
dereferencing pointer to incomplete type 
vteft2.c: In function `_vte_ft2_get_text_height':
vteft2.c:244: error: 
dereferencing pointer to incomplete type
vteft2.c: In function `_vte_ft2_get_text_ascent': 
vteft2.c:252: error:
dereferencing pointer to incomplete type 
vteft2.c: In function `_vte_ft2_draw_text': 
vteft2.c:294: error: 
dereferencing pointer to incomplete type 
vteft2.c:295: error: 
dereferencing pointer to incomplete type
make[2]: *** [vteft2.lo] Error 1 
make[1]: *** [all-recursive] Error 1 
make: *** [all] Error 2 
### execution of make failed, exit code 2
Failed: compiling vte-0.11.10-3 failed</codeblock>
        <p>or</p>
        <codeblock>checking for freetype-config.../usr/X11R6/bin/freetype-config 
checking For sufficiently new FreeType (at least 2.0.1)... no 
configure: error: pangoxft 
Pango backend found but did not find freetype libraries 
make: *** No targets specified and no makefile found. Stop. 
### execution of LD_TWOLEVEL_NAMESPACE=1 failed, exit code 2 
Failed: compiling gtk+2-2.2.4-2 failed</codeblock>
        <p>the problem is due to confusion between headers from the
        <code>freetype</code> | <code>freetype-hinting</code> package and the
        <code>freetype2</code> headers that are included with X11 |
        XFree86.</p>
        <codeblock>fink remove freetype freetype-hinting</codeblock>
        <p>will remove whichever variant you have installed. On the other
        hand, if your error looks like:</p>
        <codeblock>ld: Undefined symbols: _FT_Access_Frame</codeblock>
        <p>this is typically due to a residual file from a prior installation
        of X11. Reinstall the X11 SDK. Finally, if you get an error like</p>
        <codeblock>dyld: klines Undefined symbols: /sw/lib/libqt-mt.3.dylib 
undefined reference to _FT_Access_Frame</codeblock>
        <p>then you probably have a binary version that built fine with
        <code>gcc3.3</code> on Jaguar but doesn't work on Panther. This has
        now been updated, so you you just need to update your packages, e.g.
        via <code>sudo apt-get update ; sudo apt-get dist-upgrade</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="dlfcn-from-oo">
      <question>
        <p>I get build errors involving `Dl_info'.</p>
      </question>
      <answer>
        <p>If you have an error that looks like this</p>
        <codeblock>unix_dl.c: In function `rep_open_dl_library':
unix_dl.c:328: warning: assignment discards qualifiers from pointer target type 
unix_dl.c: In function `rep_find_c_symbol': 
unix_dl.c:466: error: `Dl_info' undeclared (first use in this function)
unix_dl.c:466: error: (Each undeclared identifier is reported only once 
unix_dl.c:466: error: for each function it appears in.)
unix_dl.c:466: error: parse error before "info" 
unix_dl.c:467: error: `info' undeclared (first use in this function) 
make[1]: *** [unix_dl.lo] Error 1</codeblock>
        <p>then most likely you have a header file,
        <code>/usr/local/include/dlfcn.h</code>, that is incompatible with
        Panther. Move it out of the way.</p>
        <p>This usually is installed by Open Office, and you should replace
        this header file, as well as the library
        <code>/usr/local/lib/libdl.dylib</code>, with symbolic links to
        Panther's builtin files</p>
        <codeblock>sudo ln -s /usr/include/dlfcn.h /usr/local/include/dlfcn.h
sudo ln -s /usr/lib/libdl.dylib /usr/local/lib/libdl.dylib</codeblock>
      </answer>
    </faqentry>
    <faqentry name="gcc2">
      <question>
        <p>Fink says I'm missing <filename>gcc2</filename> but I can't seem to
        install it.</p>
      </question>
      <answer>
        <p>This is because <filename>gcc2</filename> is a virtual package to
        indicate the presence of gcc-2.95 on your system. Install the gcc2.95
        package from the XCode Tools (earlier OS versions have gcc-2.95 as
        part of their main Developer Tools installation.</p>
      </answer>
    </faqentry>
    <faqentry name="system-java">
      <question>
        <p>Fink says <code>Failed: Can't resolve dependency "system-java14-dev"</code>, but there's no such package.</p>
      </question>
      <answer>
        <p>That's because it's a virtual package.  This type of error occurs when Java gets updated by Software Update:  the header files get removed, which causes the -dev package not to be generated.</p>
        <p>You need to download the appropriate <filename>Java Developer Tools</filename> package from <link url="http://connect.apple.com">Apple</link>.  In this specific case that's the <filename>Java 1.4.2 Developer Tools</filename>.</p>
      </answer>
    </faqentry>
    <faqentry name="dpkg-split">
   <question>
<p>When I try to install anything, I get <quote>dpkg (subprocess): failed to exec dpkg-split to see if it's part of a multiparter: No such file or directory</quote>.  How do I fix this?</p>
</question>
<answer>
<p>Generally, this can be fixed by setting your environment up correctly, cf. <xref chapter="usage-fink" section="fink-not-found">this FAQ entry</xref>.</p>
</answer>
</faqentry>
  </chapter>
  <chapter filename="comp-packages">
    <title>Compile Problems - Specific Packages</title>
    <shorttitle>Compiling (2)</shorttitle>
    <faqentry name="libgtop">
      <question>
        <p>A package fails to build with errors involving
        <code>sed</code>.</p>
      </question>
      <answer>
        <p>This can happen if your login script (e.g. <code>~/.cshrc</code>)
        does something that writes to the terminal, e.g "<code>echo
        Hello</code>" or <code>xttitle</code>. To get rid of the problem, the
        easy solution is to comment out the offending lines.</p>
        <p>If you want to keep the echo, then you can do something like the
        following:</p>
        <codeblock>if ( $?prompt) then 
	echo Hello 
endif</codeblock>
      </answer>
    </faqentry>
    <faqentry name="cant-install-xfree">
      <question>
        <p>I want to switch to Fink's XFree86 packages, but I can't install
        <code>xfree86-base</code> | <code>xfree86</code>, because it conflicts
        with <code>system-xfree86</code>.</p>
      </question>
      <answer>
        <p>All flavors of X11, unfortunately, really needs to be installed in
        /usr/X11R6. Because of this the Fink <code>xfree86-base</code> and
        <code>xfree86-rootless</code> packages install there, too. However,
        since Fink won't remove any files that aren't in its database, it
        won't automatically replace a non-Fink installation of X11.</p>
        <p></p>
        <p>Here's how to proceed:</p>
        <p></p>
        <p>
          <em>Note: 10.2.x users with up-to-date versions of Fink (&gt;=
        0.16.2) and 10.3.x users should skip step 1 below (it won't work
        anyway).</em>
        </p>
        <p>1. Remove <code>system-xfree86</code>. If you don't have any
        packages that depend on X11, this is straightforward. Frequently,
        however, many packages that depend on X11 are installed. Rather than
        uninstalling all of them, you can use</p>
        <p>
          <code>sudo dpkg --remove --force-depends system-xfree86</code>
        </p>
        <p>to remove it, leaving everything in place. If you don't have
        <code>system-xfree86</code> installed then proceed to step 3.</p>
        <p>2. Manually remove all of XFree86. This can be done with</p>
        <p>
          <code>sudo rm -rf /Applications/XDarwin.app /usr/X11R6
        /etc/X11</code>
        </p>
        <p>If you are switching from Apple X11, remove the X11 application,
        too.</p>
        <p>3. To get XFree86-4.2.1, Install Fink's <code>xfree86-base</code>
        and <code>xfree86-rootless</code> packages by the usual means:
        "<code>fink install</code>" for source users, "<code>apt-get
        install</code>" or <code>dselect</code> for binaries.</p>
        <p>-or-</p>
        <p>3a. To get XFree86-4.3.x, install Fink's <code>xfree86</code>
        package, with "fink install xfree86"--this version isn't in the binary
        distro yet, and is currently only in the unstable tree [FAQ 3.9].</p>
      </answer>
    </faqentry>
    <faqentry name="change-thread-nothread">
      <question>
        <p>How do I change from the non-threaded version of Fink's XFree86
        packages to the threaded version (or vice-versa)?</p>
      </question>
      <answer>
        <p>If you are running the Fink version of XFree86 and you want to
        switch between the threaded and non-threaded versions of Fink, you
        need to manually remove the old version. This is done at the
        command-line with the commands:</p>
        <codeblock>sudo dpkg -r --force-depends xfree86-base 
sudo dpkg -r --force-depends xfree86-shlibs 
sudo dpkg -r --force-depends xfree86-rootless 
sudo dpkg -r --force-depends xfree86-rootless-shlibs</codeblock>
        <p>or to delete the threaded versions:</p>
        <codeblock>sudo dpkg -r --force-depends xfree86-base-threaded 
sudo dpkg -r --force-depends xfree86-shlibs-threaded 
sudo dpkg -r --force-depends xfree86-rootless-threaded 
sudo dpkg -r --force-depends xfree86-rootless-threaded-shlibs</codeblock>
        <p>FinkCommander also has a way to remove packages. In the source
        window, select a package, and then in the <code>Source Menu</code> use
        "<code>Force Remove</code>."</p>
        <p>If you are using system-xfree86, see the previous question for
        removing it.</p>
        <p>Install the version of xfree86 you want:</p>
        <p>
          <code>xfree86-base</code> and <code>xfree86-rootless</code>
        </p>
        <p>
          <code>xfree86-base-threaded</code> and
        <code>xfree86-rootless-threaded</code>
        </p>
        <p>by the usual means: "<code>fink install</code>" for source users,
        "<code>apt-get install</code>" or <code>dselect</code> for
        binaries.</p>
      </answer>
    </faqentry>
    <!--obsolete><faqentry name="apple-x11" >
<question>
<p>I've installed the Apple X11 package, but system-xfree86 won't install.</p>
</question>
<answer>
<p>If you get error messages like the following:</p>
<codeblock>- missing /usr/X11R6/lib/libX11.dylib
- missing /usr/X11R6/lib/libXpm.dylib
- missing /usr/X11R6/lib/libXaw.dylib
- missing /usr/X11R6/include/X11/Xlib.h

Your XFree86 installation is missing or incomplete. Please make sure you have
an XFree86 release installed and retry the installation of the system-xfree86
package.
</codeblock>
<p>then you need to install the SDK package as well as the User package. If you are running Panther, the SDK is on the XCode disk and is <em>NOT</em> automatically installed. The SDK as well as X11 beta for Jaguar is no longer available, and you'll either have to upgrade to Panther or use Fink's xfree86.</p>
<p>If, on the other hand, you get the following message:</p>
<codeblock>An error occurred trying to find your XFree86 installation's
version. This really shouldn't happen, so I'm bailing. :(</codeblock>
<p>then you need to update your package descriptions and install a newer version of system-xfree86. If you are installing Apple X11 Beta 3, then you will need <filename>system-xfree86-4.2-11</filename> or later.</p>
</answer>
</faqentry><-->
    <faqentry name="cctools">
      <question>
        <p>"When I try to install KDE, I get the following message: 'Can't
        resolve dependency "cctools (&gt;= 446-1)"'</p>
      </question>
      <answer>
        <p>This somewhat cryptic message means you need to install the
        December 2002 Developer Tools.</p>
      </answer>
    </faqentry>
    <!--obsolete><faqentry name="system-xfree86-upgrade" >
<question>
<p>I can't update system-xfree86, because of a conflict with x11.</p>
</question>
<answer>
	<p>This problem has come about because of changes needed to allow for externally installed XFree86-4.3. Originally, <code>system-xfree86</code> provided the <code>x11</code> virtual package when an externally installed XFree86 was present. Because it only worked for XFree86-4.2, it was decided to have two separate packages for XFree86 4.2.x and Apple X11 beta 3, and one for XFree86 4.3.x and Apple X11 1.0</p>
<p>Either of these will provide <code>x11</code>. <code>system-xfree86</code> is now a bundle that installs the appropriate one of the above packages, depending on the version of XFree86 / Apple X11 that is installed. Unfortunately, switching the provider of a virtual package is sufficiently complicated that the automatic upgrade procedure can't deal with it (currently). Do an additional <code>selfupdate</code> to get the latest version of the package, then try to update again.</p>
</answer>
</faqentry><-->
  </chapter>
  <chapter filename="usage-general">
    <title>Package Usage Problems - General</title>
    <shorttitle>Usage (1)</shorttitle>
    <faqentry name="xlocale">
      <question>
        <p>I'm getting lots of messages like "locale not supported by C
        library". Is that bad?</p>
      </question>
      <answer>
        <p>It's not bad, it just means that the program will use the default
        English messages, date formats, etc. The program will function
        normally otherwise. The Running X11 document has <link url="http://fink.sourceforge.net/doc/x11/trouble.php#locale">details</link>.</p>
      </answer>
    </faqentry>
    <faqentry name="passwd">
      <question>
        <p>There are suddenly a number of strange users on my system, with
        names like "mysql", "pgsql", and "games". Where did they come
        from?</p>
      </question>
      <answer>
        <p>You have used Fink to install a package which is dependent on
        another package, passwd. passwd installs a number of extra users on
        your system for security reasons -- on Unix systems, files and
        processes belong to "owners", which allows system administrators to
        fine-tune the permissions and security of the system. Programs such as
        Apache and MySQL need an "owner", and it is insecure to assign these
        daemons to root (imagine what would happen if Apache were to be
        compromised and suddenly had write permission to all files on the
        system). Thus, the passwd package takes the work out of setting up
        these extra users for Fink packages that require this.</p>
        <p>It can be alarming to suddenly discover a number of unexpected
        users in your "System Preferences: Users" pane, but suppress the urge
        to delete them:</p>
        <ul>
          <li>First of all, you have obviously chosen to install a package
          which requires their use, so deleting the user doesn't make much
          sense, does it?</li>
          <li>There are in fact a number of extra users already installed on
          Mac OS X that you may not have known about: www, daemon, nobody, are
          just a few of them. The presence of these extra users is a standard
          Unix convention for running certain services; the passwd package
          simply adds a couple of extra that Apple did not provide. You can
          see these Apple-installed users in NetInfo Manager.app, or by
          running <code>niutil -list . /users</code>
          </li>
          <li>If you do decide to delete these users, be very careful of how
          you go about it. Using the "System Preferences: Users" pane will
          assign all of their files to a random administrator account, and
          there have been reports of havoc played with the administrator
          account's permissions. This is a bug with System Preferences, and
          has been submitted to Apple. A safer way to remove these users from
          your system is to do so from within NetInfo Manager.app or use the
          command line tool <code>niutil</code> in Terminal. Read the man page
          for <code>niutil</code> for more information about NetInfo.</li>
        </ul>
        <p>Fink <em>does</em> request permission to install these additional
        users on your system during the installation of the passwd package, so
        this should not have come as a surprise.</p>
      </answer>
    </faqentry>
    <faqentry name="compile-myself">
      <question>
        <p>How do I compile something myself using Fink-installed
        software?</p>
      </question>
      <answer>
        <!-- TODO: maybe change this to use LIBRARY_PATH / DYLD_LIBRARY_PATH ? -->
        <p>When compiling something yourself outside of Fink, the compiler and
        linker need to be told where to find the Fink-installed libraries and
        headers. For a package that uses standard configure/make process, you
        need to set some environment variables:</p>
        <p>-tcsh-</p>
        <codeblock>setenv CFLAGS -I/sw/include 
setenv LDFLAGS -L/sw/lib 
setenv CXXFLAGS $CFLAGS 
setenv CPPFLAGS $CXXFLAGS 
setenv ACLOCAL_FLAGS "-I /sw/share/aclocal" 
setenv PKG_CONFIG_PATH "/sw/lib/pkgconfig"</codeblock>
        <p>-bash-</p>
        <codeblock>export CFLAGS=-I/sw/include 
export LDFLAGS=-L/sw/lib 
export CXXFLAGS=$CFLAGS 
export CPPFLAGS=$CXXFLAGS 
export ACLOCAL_FLAGS="-I /sw/share/aclocal" 
export PKG_CONFIG_PATH="/sw/lib/pkgconfig"</codeblock>
        <p>It is often easiest just to add these to your startup files (e.g.
        <filename>.cshrc</filename> | <filename>.profile</filename>) so they
        are set automatically. If a package does not use these variables, you
        may need to add the "-I/sw/include" (for headers) and "-L/sw/lib" (for
        libraries) to the compile lines yourself. Some packages may use
        similar non-standard variables such as EXTRA_CFLAGS or --with-qt-dir=
        configure options. "./configure --help" will usually give you a list
        of the extra configure options.</p>
        <p>In addition, you may need to install the development headers (e.g.
        <em>foo-1.0-1-dev</em>) for the library packages that you are using,
        if they aren't already installed.</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x11-applications-menu">
      <question>
        <p>I can't run any of my Fink-installed applications using the
        Applications menu in Apple X11.</p>
      </question>
      <answer>
        <p>Apple X11 doesn't keep track of the Fink environment settings,
        which means that the Applications menu doesn't have the PATH set
        correctly to find your Fink applications. The solution is to preface
        the name of a Fink-installed application with</p>
        <codeblock>source /sw/bin/init.sh ;</codeblock>
        <p>For example, if you want to run a Fink-installed GIMP, then put</p>
        <codeblock>source /sw/bin/init.sh ; gimp</codeblock>
        <p>in the Command field of your GIMP entry.</p>
        <p>You can also edit your .xinitrc file (in your user directory) and
        add:</p>
        <codeblock>source /sw/bin/init.sh</codeblock>
        <p>after the first line.</p>
      </answer>
    </faqentry>
    <faqentry name="x-options">
      <question>
        <p>I'm bewildered by the X11 options: Apple X11, XFree86, etc. What
        should I install?</p>
      </question>
      <answer>
        <p>All are variants on XFree86 (they're all based on the XFree86
        code), but have some slight differences between them. Apple's X11,
        which is a modification of XFree86-4.2.1, and XFree86-4.3 are faster
        than standard XFree86-4.2.1.1, but the latter is more stable. There is
        also a modification of 4.2.1.1 with threading support added, which is
        required by a few packages.</p>
        <p>Currently, under Panther, Apple's X11 (on the third disk) is the
        only choice. Don't forget to install the X11 SDK (on the XCode disk)
        if you want to compile programs.</p>
        <p>Under Jaguar, the most popular choices, and the Fink packages to
        make them work are:</p>
        <ul>
          <li>
            <p>4.2.x built via Fink: install <code>xfree86-base</code> and
          <code>xfree86-rootless</code> or <code>xfree86-base-threaded</code>
          and <code>xfree86-rootless-threaded</code> (and the respective
          <code>-shlibs</code>)</p>
          </li>
          <li>
            <p>4.3.x built via Fink: install the <code>xfree86</code> and
          <code>xfree86-shlibs</code> packages</p>
          </li>
          <li>
            <p>4.2.x from Apple (User+SDK packages installed): install the
          <code>system-xfree86</code> package</p>
          </li>
        </ul>
        <p>There are other options, as well. There is a more extensive
        treatment in the <link url="http://fink.sourceforge.net/doc/x11/index.php">Running X11
        document</link>.</p>
      </answer>
    </faqentry>
    <faqentry name="no-display">
      <question>
        <p>When I try to run an application, I get a message that says "cannot
        open display:". What do I need to do?</p>
      </question>
      <answer>
        <p>This error means that the system isn't connecting with your X
        display. Make sure you do the following:</p>
        <p>1. Start X (Apple's X11, XFree86, ...).</p>
        <p>2. Make sure your DISPLAY environment variable is set correctly. If
        you are using the default setup for X, you can do this with</p>
        <codeblock>setenv DISPLAY :0</codeblock>
        <p>if you are running <code>tcsh</code>, or</p>
        <codeblock>export DISPLAY=:0</codeblock>
        <p>if you're running <code>bash</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="suggest-package">
      <question>
        <p>I don't see my favorite program in Fink. How do I suggest a new
        package for inclusion in Fink?</p>
      </question>
      <answer>
        <p>Make the request on the <link url="http://sourceforge.net/tracker/?atid=371315&amp;group_id=17203">Package
        Request Tracker</link> on the Fink project page.</p>
        <p>Note that you must have a SourceForge id to do so.</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="usage-packages">
    <title>Package Usage Problems - Specific Packages</title>
    <shorttitle>Usage (2)</shorttitle>
    <faqentry name="xmms-quiet">
      <question>
        <p>I get no sound from XMMS</p>
      </question>
      <answer>
        <p>Make sure you have the "eSound Output Plugin" selected in the XMMS
        preferences. For some strange reason, it selects the disk writer
        plugin as the default.</p>
        <p>If you still get no sound output or XMMS complains that it can't
        find your sound card try this:</p>
        <ul>
          <li>Make sure you haven't muted sound output in Mac OS X.</li>
          <li>Run <code>esdcat /usr/libexec/config.guess</code> (or any other
          file of a decent size). If you hear a short noise, eSound works and
          XMMS should work too if it's configured correctly. If you don't hear
          anything, esd isn't working for some reason. You can try to start it
          up manually with <code>esd &amp;</code> and watch the messages.</li>
          <li>If it still doesn't work, check the permissions on
          <code>/tmp/.esd</code> and <code>/tmp/.esd/socket</code>. Those
          should have your normal user account as the owner. If they aren't
          owned by you, kill esd if it's running, remove the directory as root
          (<code>sudo rm -rf /tmp/.esd</code>), then start esd again (as a
          normal user, not as root).</li>
        </ul>
        <p>Note that esd is designed to be run by a normal user, not by root.
        It usually communicates via the file system socket
        <code>/tmp/.esd/socket</code>. You only need the <code>-tcp</code> and
        <code>-port</code> switches if you want to run esd clients on another
        machine over the network.</p>
        <p>There have also been reports of XMMS crashing or freezing on 10.1.
        We don't have an analysis or a fix yet.</p>
      </answer>
    </faqentry>
    <faqentry name="nedit-window-locks">
      <question>
        <p>If I am editing a file in nedit, when I open another file its
        window pops up but is unresponsive.</p>
      </question>
      <answer>
        <p>This is a known problem that occurs with recent versions of
        <filename>nedit</filename> and <filename>lesstif</filename> on all
        platforms. The workaround is to open a new window with File--&gt;New,
        then open the next file you want to work on.</p>
        <p>This is now fixed in <filename>nedit-5.3-6</filename>, which
        depends on <filename>openmotif3</filename> rather than
        <filename>lesstif</filename>.</p>
      </answer>
    </faqentry>
    <faqentry name="xdarwin-start">
      <question>
        <p>Help! When I start XDarwin, it immediately quits!</p>
      </question>
      <answer>
        <p>Don't Panic. The Running X11 document now has an extensive <link url="http://fink.sourceforge.net/doc/x11/trouble.php#immediate-quit">troubleshooting
        section</link> for this common problem.</p>
      </answer>
    </faqentry>
    <faqentry name="no-server">
      <question>
        <p>When I try to start XDarwin I get the message "xinit: No such file
        or directory (errno 2): no server "/usr/X11R6/bin/X" in PATH".</p>
      </question>
      <answer>
        <p>First, make sure you are sourcing init.sh in your X startup
        <code>~/.xinitrc</code>.</p>
        <p>In Jaguar, sometimes all of the <code>xfree86</code> packages get
        built, but only <code>xfree86-base</code> and
        <code>xfree86-base-shlibs</code> are installed. Check whether you have
        <code>xfree86-rootless</code> and <code>xfree86-rootless-shlibs</code>
        installed. If not, then <code>fink install xfree86-rootless</code>
        should do the trick.</p>
        <p>If you do have it installed, then try <code>fink rebuild
        xfree86-rootless</code>. If that doesn't work, verify that you have
        <code>/usr/bin/X11R6</code> in your PATH.</p>
      </answer>
    </faqentry>
    <!--
<faqentry name="xfree-keymapping" >
#<question>
<p>I just upgraded to MacOS X 10.1 and now XFree86 always quits immediately. In the messages it says &quot;assert failed on line 454 of darwinKeyboard.c!&quot;. What's wrong?</p>
</question>
<answer>
	<p>This is a known problem on 10.1. You must use the &quot;Load from file&quot; keymapping option since the default option (loading it from the kernel) doesn't work anymore. The setting is in the XDarwin Preferences dialog. Be sure that a file is selected (e.g. USA.keymapping) - simply activating the check box may not be sufficient with some versions. If you can't get to the Preferences dialog because you disabled all splash screens, you can delete <code>~/Library/Preferences/org.xfree86.XDarwin.plist</code> to get it back, then start XDarwin and go to the Preferences dialog while the splash screen is displayed. Alternatively, you can edit that file manually in a text editor to enable the keymapping option (the UseKeymappingFile and KeymappingFile bits). </p>
<p>As a last resort, you can run <code>startx -x- -quartz -keymap
USA.keymapping</code> from Terminal.app.
If this still doesn't work, you have another problem in addition to
the keymapping problem that prevents XDarwin from starting.
You'll get a bunch of diagnostic messages in Terminal.app to help you
sort this out.
</p>
</answer>
</faqentry>
-->
    <faqentry name="xterm-error">
      <question>
        <p>xterm fails with "dyld: xterm Undefined symbols: xterm undefined
        reference to _tgetent expected to be defined in
        /usr/lib/libSystem.B.dylib".</p>
      </question>
      <answer>
        <p>This is caused by using a 10.1 version of XFree86 on 10.2. You must
        upgrade to a 10.2 version.</p>
        <p>If you are using the Fink <code>xfree86</code> packages, then you
        can get an upgrade by the usual means ("<code>fink selfupdate-cvs ;
        fink update-all</code>" for installation from source, <code>fink
        selfupdate ; ; sudo apt-get update; sudo apt-get dist-upgrade</code>"
        for installation from binaries.</p>
        <p>If you have installed XFree86 by other means, you can find patches
        to bring you up to date at the <link url="http://mrcla.com/XonX">XonX
        web site</link>.</p>
      </answer>
    </faqentry>
    <faqentry name="libXmuu">
      <question>
        <p>When I try to start XFree86 I get one of the following errors:
        "dyld: xinit can't open library: /usr/X11R6/lib/libXmuu.1.dylib" or
        "dyld: xinit can't open library: /usr/X11R6/lib/libXext.6.dylib"</p>
      </question>
      <answer>
        <p>You are missing a file that is supposed to be installed by
        <code>xfree86-base-(threaded)-shlibs</code>. You should reinstall it
        using <code>fink reinstall xfree86-base-shlibs</code> (<code>fink
        reinstall xfree86-base-threaded-shlibs</code> if you are using the
        threaded XFree86 packages) for source, or <code>sudo apt-get install
        --reinstall xfree86-base-shlibs</code> for binaries.</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x-bugs">
      <question>
        <p>I had Fink's XFree86 installed, and I've replaced it with Apple's
        X11, and now everything's crashing!</p>
      </question>
      <answer>
        <p>First of all, if you previously had the "threaded" versions of
        Fink's XFree86 packages installed, you may need to rebuild the
        application that is crashing. Some programs check for the availability
        of threading at build time, and then from then on believe that
        threading is available to them.</p>
        <p>Secondly, you may have just hit an Apple X11 bug. As of the time of
        this writing, a number of bugs are known by the Apple team and are
        being worked on.</p>
        <p>If you have general questions regarding Apple's X11 that are not
        really related to Fink, you may want to check <link url="http://www.lists.apple.com/x11-users">Apple's official discussion
        list on X11</link>. They also have also recommended that bugs in X11
        be <link url="http://developer.apple.com/bugreporter">submitted to the
        Apple bug reporter</link>.</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x-delete">
      <question>
        <p>I want the delete key in Apple's X11.app to behave like that in
        XDarwin.</p>
      </question>
      <answer>
        <p>Some users have reported that the behavior of the
        <code>delete</code> key is different between XDarwin and Apple X11.
        This can be rectified by adding lines to the appropriate X startup
        files:</p>
        <p>
          <em>.Xmodmap:</em>
        </p>
        <codeblock>keycode 59 = Delete</codeblock>
        <p>
          <em>.Xresources:</em>
        </p>
        <codeblock>xterm*.deleteIsDEL: true 
xterm*.backarrowKey: false
xterm*.ttyModes: erase ^?</codeblock>
        <p>
          <em>.xinitrc</em>
        </p>
        <codeblock>xrdb -load $HOME/.Xresources 
xmodmap $HOME/.Xmodmap</codeblock>
        <p></p>
      </answer>
    </faqentry>
    <faqentry name="gnome-two">
      <question>
        <p>I upgraded from GNOME 1.x to GNOME 2.x and now
        <code>gnome-session</code> won't open a window manager.</p>
      </question>
      <answer>
        <p>While under GNOME 1.x <code>gnome-session</code> invokes the
        <code>sawfish</code> window manager automatically, under GNOME 2.x,
        you'll have to call a window manager in <code>~/.xinitrc</code> before
        running <code>gnome-session</code>, e.g.:</p>
        <codeblock>... 
exec metacity &amp; exec gnome-session</codeblock>
        <p>Note:  this is no longer true for <em>GNOME 2.4</em>.  Running <filename>gnome-session</filename> invokes a window manager.</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x11-no-windowbar">
      <question>
        <p>I upgraded to Apple's X11 in Panther and now my window title bars
        are missing.</p>
      </question>
      <answer>
        <p>You didn't upgrade X11 to version "X11 1.0 - XFree86 4.3.0"
        included with Panther. You can install X11 from X11.pkg on Disk 3.</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x11-wants-xfree86">
      <question>
        <p>I installed Apple's X11 in Panther but Fink keeps asking to install
        xfree86.</p>
      </question>
      <answer>
        <p>There are two possibilities to consider.</p>
        <ul>
          <li>
            <em>You are installing from binaries:</em> If you are running a
          version of the <code>fink</code> package that is earlier than 0.17.0
          (such as the version that comes with the Fink-0.6.2 installer), then
          updating fink may solve your problem immediately, e.g.
          via<codeblock>sudo apt-get update
sudo apt-get install fink</codeblock>
          </li>
          <li>
            <em>You are installing from source: </em>You should first update
          <code>fink</code>, e.g. via a <codeblock>fink selfupdate</codeblock>Then you need to (re)install the X11SDK, which
          is on the Xcode CD, and is <em>not</em> installed by default. Even
          if you install XCode, the X11SDK is <em>not</em> installed by
          default. It has to be installed either with a custom Xcode install,
          or by clicking on the <code>X11SDK</code> pkg in the
          <code>Packages</code> folder.</li>
        </ul>
        <p>For either case, you can check your installation by running</p>
        <codeblock>fink-virtual-pkgs</codeblock>
        <p>and checking to see that the
        <code>Package: system-xfree86 </code>and <code>Package: system-xfree86-shlibs</code> (as well as the <code>Package: system-xfree86-dev</code>, if you've installed the SDK) sections are
        present and that the <code>Provides:</code> lines contain
        <code>x11 </code>and <code>x11-shlibs</code> (and
        <code>x11-dev</code>), respectively</p>
        <p>If you don't see everything properly installed, the safest way to
        fix this error is to remove all older copies of xfree86 or
        system-xfree86 and reinstall Apple's X11 (and the X11SDK, if you're
        going to be installing packages from source). You may see warnings
        from the first line, which you can ignore:</p>
        <codeblock>sudo dpkg -r --force-all system-xfree86 system-xfree86-42 system-xfree86-43 \ 
xfree86-base xfree86-base-shlibs; rm -rf /Library/Receipts/X11SDK.pkg \
/Library/Receipts/X11User.pkg; fink selfupdate; fink index</codeblock>
        <p>Then, reinstall X11 from the third Panther CD (and the X11SDK from the
        Xcode CD).</p>
        <p>Note: <code>system-xfree86</code> no longer requires the X11SDK for
        binary installs if you have <code>fink-0.17.0</code> or later.</p>
        <p>If you are still having problems and you are running
        <code>fink-0.19.0</code> or later then you can run</p>
        <codeblock>fink-virtual-pkgs --debug</codeblock>
        <p>to get information about what's missing. </p>
        <p>If you are running an earlier version of <code>fink</code>, then
        there is a Perl script (courtesy of Martin Costabel) that you can
        download and run to get the same information.</p>
        <ul>
          <li>Get it here: <link url="http://perso.wanadoo.fr/costabel/fink-x11-debug">http://perso.wanadoo.fr/costabel/fink-x11-debug</link>
          </li>
          <li>Save it wherever you like.</li>
          <li>Run it in a terminal window via <codeblock>perl fink-x11-debug</codeblock>
          </li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="apple-x11-beta-wants-xfree86">
      <question>
        <p>I installed Apple's X11 with the 10.2-gcc3.3 version of Fink but
        Fink keeps asking to install xfree86.</p>
      </question>
      <answer>
        <p>There are two possibilities to consider.</p>
        <ul>
          <li>
            <em>You are installing from binaries:</em> If you are running a
          version of the <code>fink</code> package that is earlier than 0.17.0
          (such as the version that comes with the Fink-0.6.2 installer), then
          updating fink may solve your problem immediately, e.g.
          via<codeblock>sudo apt-get update 
sudo apt-get install fink</codeblock>
          </li>
          <li>
            <em>You are installing from source: </em>You should first update
          <code>fink</code>, e.g. via a <codeblock>fink selfupdate</codeblock>Then you need to (re)install the X11SDK, which
          you should have downloaded when you downloaded your beta copy of
          Apple's X11.</li>
        </ul>
        <p>For either case, you can check your installation by running</p>
        <codeblock>fink-virtual-pkgs</codeblock>
        <p>and checking to see that the
        <code>Package: system-xfree86</code>and <code>Package:
        system-xfree86-shlibs</code> (as well as the <code>Package:
        system-xfree86-dev</code>, if you've installed the SDK) sections are
        present and the <code>provides:</code> lines contain
        <code>x11 </code>and <code>x11-shlibs</code> (and
        <code>x11-dev</code>), respectively</p>
        <p>If you don't see everything properly installed, the safest way to
        fix this error is to remove all older copies of xfree86 or
        system-xfree86 and reinstall Apple's X11 (and the X11SDK, if you're
        going to be installing packages from source). You may see warnings
        from the first line, which you can ignore:</p>
        <codeblock>sudo dpkg -r --force-all system-xfree86 system-xfree86-42 system-xfree86-43 \
xfree86-base xfree86-base-shlibs; rm -rf /Library/Receipts/X11SDK.pkg \
/Library/Receipts/X11User.pkg; fink selfupdate; fink index</codeblock>
        <p>Then, reinstall X11 (and the X11SDK, if needed).</p>
        <p>Note: <code>system-xfree86</code> no longer requires the X11SDK for
        binary installs if you have <code>fink-0.17.0</code> or later.</p>
        <p>If you are still having problems and you are running
        <code>fink-0.19.0</code> or later then you can run</p>
        <codeblock>fink-virtual-pkgs --debug</codeblock>
        <p>to get information about what's missing.</p>
        <p>If you are running an earlier version of <code>fink</code>, then
        there is a Perl script (courtesy of Martin Costabel) that you can
        download and run to get the same information.</p>
        <ul>
          <li>Get it here: <link url="http://perso.wanadoo.fr/costabel/fink-x11-debug">http://perso.wanadoo.fr/costabel/fink-x11-debug</link>
          </li>
          <li>Save it wherever you like.</li>
          <li>Run it in a terminal window via <codeblock>perl fink-x11-debug</codeblock>
          </li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="wants-xfree86-on-upgrade">
      <question>
        <p>I switched from the 10.2 Fink version to 10.2-gcc3.3 or 10.3, I have Apple's X11, and Fink asks me to install XFree86.</p>
      </question>
      <answer>
        <p>You may need to remove one of the old place-holder packages: <filename>system-xfree86</filename>, <filename>system-xfree86-42</filename>, or <filename>system-xfree86-43</filename>.  Fink now figures out if you have a manually installed X11 flavor, e.g. Apple's, and generates virtual packages. Because other packages depend on <filename>system-xfree86</filename>, you must use the command</p>
        <codeblock>sudo dpkg -r --force-all system-xfree86 system-xfree86-42 system-xfree86-43</codeblock>
        <p>to remove the out-of-date versions.

You can check your installation by running</p>
        <codeblock>fink-virtual-pkgs</codeblock>
        <p>and checking to see that the <code>Package: system-xfree86</code> and <code>Package: system-xfree86-shlibs</code> sections are present and their provides: lines contains <code>x11</code> and <code>x11-shlibs</code>, respectively.  If you installed the X11SDK, then you should also see <code>Package: system-xfree86-dev</code>.</p>
        <p>If you are still having problems then refer to the <xref section="apple-x11-wants-xfree86">Fink wants XFree86 on 10.3</xref> or <xref section="apple-x11-beta-wants-xfree86">Fink wants Xfree86 on 10.2-gcc3.3</xref> entries, above.</p>
      </answer>
    </faqentry>
  </chapter>
</document>

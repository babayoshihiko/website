<?xml version = '1.0' encoding = 'utf-8'?>
<!DOCTYPE document SYSTEM "../finkfaq.dtd">
<document filename="index" lang="fr" >
<title>Fink - Q.F.P.</title>
<shorttitle>Q.F.P.</shorttitle>
<cvsid>$Id: faq.fr.xml,v 1.30 2004/07/16 02:33:42 michga Exp $</cvsid>
<preface>
<p>Voici la liste des questions fréquemment posées sur Fink. Comme la plupart des QFP, une partie correspond à des questions réelles, d'autres ont été élaborées spécialement pour ces QFP. Il s'agit en fait d'un document écrit dans le style question-réponse.</p>
<p>Ces QFP comprennent plusieurs pages, une par chapitre. Le sommaire ci-dessous donne la liste de toutes les questions ainsi qu'un lien pour chacune d'elles.</p>
</preface>

<chapter filename="general" >
<title>Questions générales</title>
<shorttitle>Généralités</shorttitle>
<faqentry name="what" >
<question>
<p>Qu'est-ce que Fink ?</p>
</question>
<answer>
<p>
La raison d'être de Fink est d'offrir un maximum de logiciels UNIX sur Mac OS X, ce qui  se traduit par deux objectifs principaux :  
</p>
<p>
L'objectif principal est de porter des logiciels sur Mac OS X. Cela signifie que nous prenons des logiciels Open Source Unix et corrigeons ce qui est nécessaire pour qu'ils compilent et tournent sur Mac OS X. Parfois la tâche est simple, mais elle peut être très difficile, voire impossible, pour certains paquets. Nous essayons de fournir des outils et des documents pour la simplifier.
</p>
<p>
L'objectif secondaire est de mettre le résultat à disposition d'utilisateurs occasionnels.  Pour ce faire, nous créons une distribution en utilisant des outils de gestion de paquets portés depuis Linux, à savoir <code>dpkg</code> et
<code>apt-get</code>, écrit par et pour le projet <link url="http://www.debian.org/" >Debian GNU/Linux</link>. La distribution binaire utilise le format de paquet <code>.deb</code>. Pour construire les paquets à partir du source, nous utilisons notre propre outil, nommé <code>fink</code>, qui construit ces fichiers de paquet <code>.deb</code>.
</p>
</answer>
</faqentry>
<faqentry name="naming" >
<question>
<p>Que signifie Fink ?</p>
</question>
<answer>
<p>Rien en particulier, ce n'est qu'un nom, même pas un acronyme.</p>
<p>En fait, Fink est le mot allemand désignant un fringillidé, une espèce d'oiseau. Je cherchais un nom pour le projet et le nom du système opératoire, Darwin, m'a fait penser à Charles Darwin, aux îles Galápagos et à l'évolution des espèces. Je me suis souvenu, qu'à l'école, nous avions étudié un passage sur les fringillidés pseudo-darwiniens et leurs becs, d'où le nom...</p>
</answer>
</faqentry>
<faqentry name="bsd-ports" >
<question>
<p>En quoi Fink se différencie-t-il du mécanisme de portage BSD (qui comprend OpenPackages et GNU-Darwin) ?</p>
</question>
<answer>
<p>Avantages principaux de Fink :</p>
<ul>
<li>
<p>
Il est écrit en Perl, pas en make/shell. Il ne repose donc pas sur des fonctionnalités inhérentes à BSD make. Il n'y a donc pas besoin de marquer les paquets qui doivent utiliser GNU make à la construction.
</p>
</li>
<li>
<p>
dpkg fournit une gestion sophistiquée des paquets binaires : mise à jour facile, gestion spéciale des fichiers de configuration, paquets virtuels et autres fonctions avancées.
</p>
</li>
<li>
<p>
Fink n'installe rien dans /usr/local à moins d'une requête explicite et ne nécessite pas de jongler avec /usr/bin/make ou d'autres commandes fournis par le système. Cela rend son utilisation plus sûre et réduit au minimum les interférences avec Mac OS X et les paquets de tierce partie.
</p>
</li>
</ul>
</answer>
</faqentry>
<faqentry name="usr-local" >
<question>
<p>Pourquoi Fink n'installe rien dans /usr/local ?</p>
</question>
<answer>
<p>Il y a plusieurs raisons à cela, mais toutes reposent sur le fait  que &quot;cela occasionnerait des failles dans le système&quot;.</p>
<p>Première raison : les logiciels de tierce partie. /usr/local est réservé à l'installation des logiciels qui ne font pas partie du système fourni par le vendeur initial. C'est donc l'endroit idéal pour installer quelque chose. Mais, c'est aussi là que d'autres vendeurs installeront leurs logiciels. La plupart des routines d'installation viendront écraser ce qui y est déjà - cela est vrai aussi pour dpkg. On peut, bien sûr, choisir de ne pas installer de logiciels de tierce partie dans /usr/local. Malheureusement, la plupart des routines d'installation ne signalent pas à l'avance ce qu'elles installent ni où elles l'installent.</p>
<p>Deuxième raison : /usr/local/bin est dans le PATH par défaut. Il s'ensuit que votre shell trouve les programmes installés sans que vous ayez à intervenir. A contrario, vous devrez intervenir si vous ne souhaitez pas utiliser ces programmes. Au pire, cela affecte le système lui-même -  de nombreuses parties du système reposent sur des scripts shell.</p>
<p>Troisième raison : l'ensemble des outils de compilation effectuent leurs recherches dans /usr/local par défaut. Le compilateur cherche les headers dans /usr/local/include et l'éditeur de liens cherche les librairies dans /usr/local/lib. C'est quelquefois très pratique, mais très difficile à désactiver si le besoin s'en fait sentir. On peut facilement désactiver le compilateur en mettant dans /usr/local/include un fichier parasite auquel on donne le nom de <code>stdio.h</code>.</p>
<p>Ceci dit, il est possible d'installer Fink dans  /usr/local. Le script d'installation vous avertira que, si vous le faites, ce sera à vos risques et périls, mais continuera l'installation après votre accord.</p>
</answer>
</faqentry>
<faqentry name="why-sw" >
<question>
<p>Pourquoi avoir choisi /sw ?</p>
</question>
<answer>
<p>Ce choix est tout-à-fait arbitraire, mais il est vraisemblable qu'il demeure le même, au moins dans un avenir prévisible, tant pour des raisons pratiques (mise à niveau) que par le fait qu'il n'entre en conflit avec aucun autre système de paquets.</p>
</answer>
</faqentry>
</chapter>
<chapter filename="relations" >
<title>Relations avec d'autres projets</title>
<shorttitle>Relations</shorttitle>
<faqentry name="upstream" >
<question>
<p>Envoyez-vous aux mainteneurs situés en amont de vous les rustines que vous faites ?</p>
</question>
<answer>
<p>
Nous essayons. Parfois, c'est facile et tout le monde en profite à la prochaine version du paquet. Malheureusement, ce n'est pas toujours si simple avec la plupart des paquets. Quelques problèmes courants :
</p>
<ul>
<li>Le mainteneur du paquet Fink est très occupé et n'a pas le temps de renvoyer la rustine et des explications détaillées aux mainteneurs situés en amont.</li>
<li>Les mainteneurs situés en amont rejette la rustine. Il peut y avoir de très bonnes raisons à cela. La plupart des mainteneurs situés en amont ont fortement intérêt à conserver un code source pur, des contrôles de configuration clairs et à maintenir la compatibilité avec les autres plates-formes.</li>
<li>Les mainteneurs situés en amont acceptent la rustine, mais cela peut prendre des semaines ou   des mois avant qu'ils ne produisent une nouvelle version de leur paquet.</li>
<li>Le paquet a été abandonné par ses auteurs et il n'existe pas de nouvelle version dans laquelle la rustine peut être intégrée.</li>
</ul>
</answer>
</faqentry>
<faqentry name="debian" >
<question>
<p>Quelles sont vos relations avec le projet Debian ? Portez-vous Debian Linux sur Mac OS X ?</p>
</question>
<answer>
<p>
Il n'y a pas de relation officielle entre Fink et <link url="http://www.debian.org" >Debian</link>.
Fink <em>n'est pas</em> un port de la distribution Debian GNU/Linux .
Mais, nous avons porté les outils de gestion de paquet de Debian (dpkg, dselect, apt-get) et nous les utilisons ainsi que le format de paquet binaire .deb. Nos paquets sont faits sur mesure pour Mac OS X / Darwin et n'utilise pas le format de paquet source Debian.
</p>
</answer>
</faqentry>
<faqentry name="apple" >
<question>
<p>Quelles sont vos relations avec Apple ?</p>
</question>
<answer>
<p>
<link url="http://www.apple.com/" >Apple</link> sait que Fink existe et nous a apporté son soutien dans le cadre de ses relations avec les projets Open Source. Durant l'été et l'automne 2001, Apple nous a fourni les sources des pré-versions  de Mac OS X dans l'espoir que les paquets Fink puissent être adaptés à temps pour la version officielle. Citation : <em>&quot;Nous espérons que cela mettra en évidence notre engagement, que d'aucuns mettent en doute. Nous nous affirmerons dans les projets open source au fil du temps.&quot;</em>
Merci Apple !
</p>
</answer>
</faqentry>
<faqentry name="openosx" >
<question>
<p>Quelles sont vos relations avec OpenOSX.com ?</p>
</question>
<answer>
<p>
Ils ont utilisé Fink pour compiler la première version de leur CD GIMP et refusent de le reconnaître. Lire le <link url="http://fink.sourceforge.net/pr/openosx.php" >communiqué officiel</link> pour de plus amples informations.
</p>
</answer>
</faqentry>
<faqentry name="forked" >
<question>
<p>Quelles sont vos relations avec macosx.forked.net ?</p>
</question>
<answer>
<p>
Ce site redistribue certains paquets Fink en tant que paquets avec installeur, identiques à ceux de Fink, mais avec leur propres textes, dans lesquels Fink n'est pas mentionné. Lire le <link url="http://fink.sourceforge.net/pr/forked.php" >communiqué officiel</link> pour de plus amples informations.
</p>
</answer>
</faqentry>
<faqentry name="darwinports" >
<question>
<p>Quelles sont vos relations avec Darwinports ?</p>
</question>
<answer>
<p>
Darwinports et Fink sont des projets complémentaires. Certaines parties se recouvrent et plusieurs personnes contribuent à la fois au projet Fink et au projet OpenDarwin. Benjamin Reed, par exemple, fait les paquets KDE pour les deux. Darwinports/OpenDarwin utilise des rustines de Fink, et nous envisageons une collaboration sur un nouveau moteur de dépendances.
</p>
<p>
OpenDarwin est parti de rien pour tenter une nouvelle approche d'un système de construction de paquets. Lire le communiqué sur <link url="http://www.opendarwin.org/projects/darwinports/en/faq.php" >OpenDarwin.org</link> pour de plus amples informations.
</p>
</answer>
</faqentry>
</chapter>

<chapter filename="mirrors">
    <title>Miroirs de Fink</title>
    <shorttitle>Miroirs</shorttitle>
    <faqentry name="when-use">
        <question>
            <p>Qu'est-ce qu'un miroir Fink ?</p>
        </question>
        <answer>
        <p>
Un miroir Fink est un serveur rsync qui reflète les fichiers de description actuels et stables que Fink utilisent pour construire les paquets à partir du source.
       </p>
	 </answer>
    </faqentry>
<faqentry name="why">
    <question>
        <p>Pourquoi utiliser des miroirs rsync ?</p>
    </question>
    <answer>
    <p>Rsync est un protocole très rapide. Il met à jour les fichiers de description plus vite que l'ancienne méthode de mise à jour via CVS. De plus, les mises à jour via CVS sont toujours faites à partir de sourceforge.net, tandis que les mises à jour via rsync peuvent être faites à partir d'un miroir proche de votre lieu de téléchargement.</p>
    </answer>
</faqentry>
<faqentry name="where">
    <question>
        <p>Où trouver de plus amples informations sur les miroirs Fink ?</p>
    </question>
    <answer>
    <p>Tous les miroirs Fink sont fusionnés sous le nom de domaine finkmirrors.net. Vous trouverez de plus amples informations sur le site web http://finkmirrors.net/.
</p>
</answer>
</faqentry>
<faqentry name="when-not">
    <question>
        <p>Impossible de se connecter au serveur rsync. Que faire ?</p>
    </question>
    <answer>
<p>Il arrive que certains murs pare-feu particulièrement efficaces vous empêchent de vous connecter à des services rsync. Dans ce cas, continuez à utiliser la méthode CVS.
</p>
</answer>
</faqentry>
<faqentry name="otherinfogone">
    <question>
        <p>Après passage à la méthode rsync, tous les fichiers info des arborescences inutilisées ont disparu.</p>
    </question>
    <answer>
<p>C'est normal. La méthode rsync ne met à jour que l'arborescence active, par exemple 10.3, et supprime tous les répertoires CVS.
</p></answer>
</faqentry>
<faqentry name="howswitch">
    <question>
        <p>Comment passer d'une méthode à une autre à volonté ?</p>
    </question>
    <answer>
<p>En utilisant fink selfupdate-rsync pour passer à la méthode rsync ou fink selfupdate-cvs pour passer à la méthode CVS.</p></answer>
</faqentry>
<faqentry name="status">
    <question>
        <p>Comment connaître l'état actuel des miroirs rsync ?</p>
    </question>
    <answer><p>Allez sur http://finkmirrors.net/status.html</p>
    </answer>
</faqentry>
<faqentry name="Master">
    <question>
        <p>Qu'est-ce qu'un miroir Distfiles ?</p>
    </question>
    <answer>
    <p>Il est parfois difficile de trouver une version précise d'un source sur Internet. Les miroirs Distfiles stockent les paquets source nécessaires à fink pour construire ses paquets source. Ils font aussi office de miroir.</p>
    </answer>
</faqentry>
</chapter>

  <chapter filename="upgrade-fink">
    <title>Mise à jour de Fink (Résolution de problèmes spécifiques à une version donnée)</title>
    <shorttitle>Mise à jour de Fink</shorttitle>
    <faqentry name="gcc-0.16.0">
      <question>
        <p>Après passage à la version 0.16.0, fink considère la version du compilateur gcc 3.3 installée sur le système comme obsolète. Que faire ?</p>
      </question>
      <answer>
        <p>À partir de Panther, Fink a été mis à jour pour fonctionner avec le nouveau compilateur gcc 3.3. Pour pouvoir gérer à la fois 10.2 (Jaguar) et 10.3 (Panther), il faut que tous les utilisateurs installent la dernière mise à jour de gcc 3.3 (mise à jour d'août 2003 pour les utilisateurs de Jaguar, outils XCode de Panther pour les utilisateurs de Panther). Ce message d'alerte apparaîtra si vous avez installé la béta précédente de XCode correspondant aux Developer Tools de décembre 2002 pour Max OS X 10.2. Si vous utilisez 10.2, la commande :</p>
        <codeblock>gcc --version</codeblock>
        <p>vous dira quelle version est installée sur votre système. À partir du 24 octobre 2003, il faut avoir le build 1493 ou supérieur.</p>
        <p>Les utilisateurs de 10.2 peuvent télécharger la mise à jour d'août 2003 sur <link url="http://developer.apple.com/">Apple Developer Connection</link>
(enregistrement gratuit obligatoire).</p>
        <p>Les utilisateurs de 10.3 doivent installer les outils de développement compatibles avec Panther (c'est-à-dire XCode). Vous devez trouver un CD contenant XCode parmi ceux reçus avec Panther.</p>
      </answer>
    </faqentry>
  </chapter>

   <chapter filename="usage-fink">
    <title>Installer, Utiliser et Entretenir Fink</title>
    <shorttitle>Utilisation de Fink</shorttitle>
    <faqentry name="what-packages">
      <question>
        <p>Comment savoir quels sont les paquets gérés par Fink ?</p>
      </question>
      <answer>
        <p>Depuis Fink 0.2.3, il y a la commande list.  Elle produit une liste
	de tous les paquets connus de votre installation de Fink.
	Exemple:</p>
        <codeblock>fink list</codeblock>
        <p>Si vous utilisez la distribution binaire, <code>dselect</code> vous donne une liste des paquets disponibles dans laquelle vous pouvez naviguer. Remarque : vous devez utiliser la commande sudo si vous voulez sélectionner et installer des paquets avec dselect.</p>
        <p>Il y a aussi la <link url="http://fink.sourceforge.net/pdb/">base de données de paquets</link> sur le site web. </p>
      </answer>
    </faqentry>
    <faqentry name="proxy">
      <question>
        <p>Comment configurer fink pour utiliser un proxy HTTP quand on est derrière un mur pare-feu ?</p>
      </question>
      <answer>
        <p>La commande <code>fink</code> permet de prendre en compte des réglages de proxy qui seront utilisés par  <code>wget</code>/<code>curl</code>. Si on ne vous a pas posé de question sur vos réglages de proxies lors de la première installation, vous pouvez taper <code>fink configure</code> pour les régler. Vous pouvez aussi utiliser cette commande à n'importe quel moment pour reconfigurer la commande <code>fink</code>. Si vous avez suivi les instructions du guide d'installation et utilisé <filename>/sw/bin/init.csh</filename> (ou <filename>/sw/bin/init.sh </filename>), alors <code>apt-get</code> et <code>dselect</code> utiliseront aussi ces réglages de proxies. Assurez-vous d'avoir bien indiqué le protocole utilisé, par exemple :</p>
<codeblock>ftp://proxy.yoursite.somewhere</codeblock>
        <p>Si vous avez toujours des problèmes, allez dans Préférences système, cliquez sur Réseaux, sélectionnez l'onglet proxies et vérifiez que la case "Utiliser le mode FTP passif (PASV)" est cochée.</p>
      </answer>
    </faqentry>
    <faqentry name="firewalled-cvs">
      <question>
        <p>Comment mettre à jour les paquets disponibles sur CVS lorsqu'on utilise un firewall ?</p>
      </question>
      <answer>
        <p>Le paquet<em> cvs-proxy</em> peut créer un tunnel à travers les proxies HTTP.</p>
        <ul>
          <li><p>Tout d'abord, téléchargez les fichiers <link url="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/fink/dists/10.2/unstable/main/
finkinfo/devel/">cvs-proxy</link> (un fichier .info et un fichier .patch) et placez-les dans votre arborescence locale. (c'est-à-dire /sw/fink/dists/local/main/finkinfo/).</p></li>
          <li><p>Installez le paquet <em>cvs-proxy</em> avec la commande :</p>
	  <p><code>fink install <em>cvs-proxy</em></code></p></li>
          <li><p>Les paquets sont alors mis à jour avec les commandes :</p>
	  <p><code>fink selfupdate-cvs</code></p>
	  <p><code>fink update-all</code></p></li>
        </ul>
        <p>Si Fink n'est pas configuré pour utiliser un proxy, changez les
	réglages en utilisant :</p>
        <p><code>fink configure</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="moving">
      <question>
        <p>Est-il possible de déplacer Fink vers un autre dossier après
	l'installation ?</p>
      </question>
      <answer>
        <p>Non. Vous pouvez bien sûr déplacer les fichiers en utilisant
	mv ou le Finder, mais 99% des programmes ne fonctionneront plus si vous faites cela. En effet, la majorité des programmes Unix utilisent des chemins d'accès directement inclus dans le fichier binaire pour accéder,entre autres, à des données et des librairies.</p>
      </answer>
    </faqentry>
    <faqentry name="moving-symlink">
      <question>
        <p>Est-ce que Fink fonctionnera correctement si on le déplace après installation et que l'on crée un lien symbolique vers l'ancien emplacement ?</p>
      </question>
      <answer>
        <p>Peut-être. On peut supposer que le fonctionnement sera correct dans l'ensemble, mais il y aura certainement des problèmes ici ou là.</p>
      </answer>
    </faqentry>
    <faqentry name="removing">
      <question>
        <p>Comment désinstaller la totalité de Fink ?</p>
      </question>
      <answer>
        <p>Presque tous les fichiers installés par fink se trouvent dans le répertoire /sw (ou bien l'endroit où vous avez choisi de faire l'installation). Donc, pour supprimer Fink, entrez cette commande :</p>
        <codeblock>sudo rm -rf /sw</codeblock>
        <p>La seule exception concerne XFRee86. Si vous avez installé XFree86 via Fink (vous avez, par exemple,  installé le paquet <code>xfree86</code> ou <code>xfree86-rootless</code>, au lieu d'utiliser <code>system-xfree86</code>) et que vous voulez le supprimer, vous devrez aussi saisir ceci :</p>
        <codeblock>sudo rm -rf /usr/X11R6 /etc/X11 /Applications/XDarwin.app</codeblock>
        <p>Si vous ne pensez pas réinstaller Fink, vous pourrez aussi
	supprimer la ligne "<code>source /sw/bin/init.csh</code>" que
	vous aviez ajoutée dans le fichier <filename>.cshrc</filename> ou la ligne "<code>source /sw/bin/init.sh</code>" que vous aviez ajoutée dans le fichier <filename>.bashrc</filename>, suivant vos réglages, en utilisant un éditeur de texte.</p>
      </answer>
    </faqentry>
    <faqentry name="bindist">
      <question>
        <p>La base de données des paquets sur le site web mentionne le paquet xxx, mais apt-get ou dselect eux ne le mentionnent pas. Qui a raison ?</p>
      </question>
      <answer>
        <p>Ils ont tous raison. La <link url="http://fink.sourceforge.net/pdb/">base de données des paquets</link> donne la liste de tous les paquets, même ceux qui sont encore dans la section instable.  Les outils <code>dselect</code> et <code>apt-get</code>, de leur côté, donnent la liste des paquets disponibles en tant que binaires précompilés. De nombreux paquets ne sont pas disponibles sous forme précompilée via ces outils pour diverses raisons. Un paquet doit être dans la section "stable" de la dernière mise à jour de Fink pour être pris en compte, et il doit, de plus, passer avec succès un certain nombre de tests relatifs aux règles de fink et aux restrictions de licences et brevets.</p>
        <p>Si vous voulez installer un paquet qui n'est pas disponible via <code>dselect</code> / <code>apt-get</code>, vous devez le compiler à partir du code source en utilisant <code>fink install <em>nom_du_paquet</em></code>. Vérifiez que vous avez installé les Developer Tools avant d'essayer ceci. (S'il n'y a pas d'installeur pour les Developer Tools dans votre répertoire <code>/Applications</code> , vous pouvez les télécharger gratuitement sur <link url="http://connect.apple.com/">Apple Developer Connection</link> après enregistrement). Voir aussi la question à propos des instables ci-dessous.</p>
	</answer>
	</faqentry>
    <faqentry name="unstable">
      <question>
        <p>Comment installer un paquet instable quand la commande fink ne le trouve pas ('no package found') ?</p>
      </question>
      <answer>
        <p>Assurez-vous d'abord de savoir ce que signifie 'instable'. Peu de
	personnes ont testés les paquets instables. C'est pourquoi Fink
	ne recherche pas dans cette arborescence par défaut. Si vous décidez
	d'activer l'arborescence instable, pensez à envoyer un courriel au responsable du paquet si quelque chose fonctionne (ou ne fonctionne pas). Ce sont vos réactions qui nous permettent de décider si un paquet peut entrer dans l'arborescence stable ! Pour connaître le mainteneur du paquet, lancez la commande <code>fink info &lt;nom_du_paquet&gt;</code>.</p>
        <p>Les paquets ont souvent des dépendances, et les paquets dans l'arborescence instable dépendent souvent d'autres paquets de cette même arborescence. Il est donc conseillé d'activer la totalité de l'arborescence instable.</p>
        <p>Si vous voulez que Fink utilise toute l'arborescence instable, modifiez le fichier <filename>/sw/etc/fink.conf</filename> : ajoutez <code>unstable/main</code> et <code>unstable/crypto</code> à la ligne <code>Trees:</code>, puis exécutez <code>fink selfupdate; fink index</code>.</p>
        <p>Si vous ne voulez qu'un ou deux paquets instables spécifiques, vous devez changer vos réglages pour utiliser la mise à jour CVS (c'est-à-dire utiliser <code>fink selfupdate-cvs</code>), car rsync met seulement à jour les arborescences activées dans le fichier <filename>fink.conf</filename>. Éditez <filename>/sw/etc/fink.conf</filename> et ajoutez <code>local/main</code> à la ligne <code>Trees:</code>, si elle n'y figure pas déjà. Vous devrez alors exécuter <code>fink selfupdate</code> pour télécharger les fichiers de description des paquets. Copiez ensuite les fichiers <code>.info</code> qui vous intéressent (et leurs fichiers <code>.patch</code> associés, s'ils existent) à partir de  <filename>/sw/fink/dists/unstable/main/finkinfo</filename> (ou  <filename>/sw/fink/dists/unstable/crypto/finkinfo</filename>) dans <filename>/sw/fink/dists/local/main/finkinfo</filename>. Notez cependant que votre paquet peut dépendre d'autres paquets (ou de versions particulières) qui sont uniquement présents dans l'arborescence instable. Vous devrez alors déplacer aussi leurs fichiers <code>.info</code> et <code>.patch</code> associés. Après avoir déplacé tous les fichiers, lancez la commande <code>fink index</code> pour que l'index des paquets disponibles de Fink soit mis à jour. Vous pourrez ensuite utiliser rsync à nouveau (<code>fink selfupdate-rsync</code>) si vous le désirez.</p>
      </answer>
    </faqentry>
   <faqentry name="sudo">
      <question>
        <p>Comment ne plus avoir à saisir son mot de passe après la
	commande sudo ?</p>
      </question>
      <answer>
        <p>Si vous n'êtes pas paranoïaque, vous pouvez configurer sudo pour qu'il ne vous demande pas votre mot de passe. Pour cela, mettez-vous en mode super-utilisateur et lancez <code>visudo</code>, puis ajoutez la ligne suivante :</p>
        <codeblock>username ALL = NOPASSWD: ALL</codeblock>
        <p>Remplacez bien sûr <code>username</code> par votre nom
	d'utilisateur. Cette ligne vous permet d'exécuter n'importe quelle
	commande avec sudo sans saisir votre mot de passe.</p>
</answer>
</faqentry>
    <faqentry name="exec-init-csh">
      <question>
        <p>À l'exécution de init.csh ou init.sh, un message d'erreur "Permission denied" apparaît. Que se passe-t-il ?</p>
      </question>
      <answer>
        <p>init.csh et init.sh ne doivent pas être exécutés comme les commandes habituelles. Ces fichiers définissent des variables d'environnement, tels PATH ou MANPATH, dans votre shell. Pour avoir un effet durable sur votre shell, il faut utiliser la commande <code>source</code> pour csh/tcsh ou la commande <code>.</code> pour bash/zsh, comme ceci :</p>
       <p>pour csh/tcsh :</p>
<codeblock>source /sw/bin/init.csh</codeblock>
        <p>pour bash/zsh :</p>
 <codeblock>. /sw/bin/init.sh</codeblock>
      </answer>
    </faqentry>
    <faqentry name="dselect-access">
      <question>
        <p>Pourquoi est-il impossible de télécharger des paquets après avoir utilisé le menu "[A]ccess" dans dselect ?</p>
      </question>
      <answer>
        <p>Vous avez certainement fait pointer apt sur un miroir Debian, qui
	ne contient, bien sûr, aucun des fichiers de Fink. Vous pouvez corriger
	cela manuellement ou via dselect. Pour le faire manuellement, modifiez
	en tant que super-utilisateur le fichier <code>/sw/etc/apt/sources.list </code>dans un éditeur de texte. Supprimez les lignes qui mentionnent debian.org et remplacez-les par celles-ci :</p>
<codeblock>deb http://us.dl.sourceforge.net/fink/direct_download release main crypto
deb http://us.dl.sourceforge.net/fink/direct_download current main crypto</codeblock>
<p>
	(Si vous vivez en Europe, remplacez <code>us.dl.sourceforge.net</code>
	par <code>eu.dl.sourceforge.net</code>)</p>
        <p>Pour modifier avec dselect, relancez "[A]ccess", choisissez la méthode "apt" et entrez les informations suivantes :</p>
        <p>URL: http://us.dl.sourceforge.net/fink/direct_download - Distribution: release - Components: main crypto</p>
        <p>Ensuite, spécifiez que vous voulez ajouter une autre source et
	répétez la procédure avec "current" à la place de "release".</p>
        <p>Une version modifiée du paquet apt (contenant le script de
	configuration en tant que plug-in de dselect) est en cours de
	développement dans CVS.</p>
      </answer>
    </faqentry>
    <faqentry name="cvs-busy">
      <question>
        <p>Lors de l'exécution de <quote>fink selfupdate</quote> ou "fink
        selfupdate-cvs", le message "<code>Updating using CVS failed.
        Check the error messages above.</code>" apparaît.</p>
      </question>
      <answer>
        <p>Si le message est le suivant :</p>
        <codeblock>Can't exec "cvs": No such file or directory at 
/sw/lib/perl5/Fink/Services.pm line 216, &lt;STDIN&gt; line 3.
### execution of cvs failed, exit code -1</codeblock>
        <p>alors vous devez installer les Developer Tools.</p>
        <p>Si, par contre, la dernière ligne est la suivante :</p>
        <codeblock>### execution of su failed, exit code 1</codeblock>
        <p>vous devrez regarder plus haut pour voir l'erreur. Si vous voyez un
	message précisant que votre connection à été refusée :</p>
        <codeblock>(Logging in to anonymous@cvs.sourceforge.net)
CVS password:
cvs [login aborted]: connect to cvs.sourceforge.net:2401 failed: 
Connection refused
### execution of su failed, exit code 1
Failed: Logging into the CVS server for anonymous read-only access failed.</codeblock>
        <p>ou bien un message comme le suivant :</p>
        <codeblock>cvs [update aborted]: recv() from server cvs.sourceforge.net: 
Connection reset by peer 
### execution of su failed, exit code 1 
Failed: Updating using CVS failed. Check the error messages above.</codeblock>
        <p>ou :</p>
        <codeblock>cvs [update aborted]: End of file received from server</codeblock>
        <p>ou encore :</p>
        <codeblock>cvs [update aborted]: received broken pipe signal</codeblock>
        <p>alors il est possible que le serveur CVS soit surchargé. Il vous
	faudra réessayer plus tard.</p>
        <p>Il se peut que les permissions soient mal définies dans
	votre dossier CVS et que vous n'y ayez pas accès, ce qui génère des
	messages "Permission denied" :</p>
        <codeblock>cvs update: in directory 10.2/stable/main: 
cvs update: cannot open CVS/Entries for reading: No such file or directory
cvs server: Updating 10.2/stable/main 
cvs update: cannot write 10.2/stable/main/.cvsignore: Permission denied
cvs [update aborted]: cannot make directory 10.2/stable/main/finkinfo: 
No such file or directory 
### execution of su failed, exit code 1 Failed: 
Updating using CVS failed. Check the error messages above.</codeblock>
        <p>Dans ce cas-là, vous devez remettre à zéro votre répertoire CVS.
	Utilisez la commande:</p>
        <codeblock>sudo find /sw/fink -type d -name 'CVS' -exec rm -rf {}\
; fink selfupdate-cvs</codeblock>
        <p>Si vous ne voyez aucun des messages ci-dessus, il est très probable
	que vous ayez modifié un fichier dans l'arborescence /sw/fink/dists et
	que le mainteneur ait modifié ce fichier. Regardez de nouveau dans le message
	apparu après selfupdate-cvs les lignes commençant par "C", comme :</p>
        <codeblock>C 10.2/unstable/main/finkinfo/libs/db31-3.1.17-6.info 
... (other info and patch files) ... 
### execution of su failed, exit code 1 
Failed: Updating using CVS failed. Check the error messages above.</codeblock>
        <p>La lettre "C" signifie que CVS a rencontré un problème en essayant de
	mettre à jour la dernière version. La solution consiste à retirer toutes les lignes commençant par "C" dans le message de sortie de selfupdate-cvs, et à essayer de nouveau.</p>
        <codeblock>sudo rm /sw/fink/10.2/unstable/main/finkinfo/libs/db31-3.1.17-6.info
fink selfupdate-cvs</codeblock>
      </answer>
    </faqentry>
    <faqentry name="kernel-panics">
      <question>
    <p>Lors de l'utilisation de Fink, ma machine se fige, entre en kernel panic ou bien
	plante. À l'aide !</p>
      </question>
      <answer>
        <p>De nombreuses personnes ont signalé sur la liste de diffusion <link url="http://sourceforge.net/mailarchive/forum.php?forum=fink-users">fink-users</link> des problèmes (y compris des kernel panics ou des suspensions infinies lors de l'application d'une rustine) quand on utilise Fink pour compiler des paquets, alors qu'un anti-virus est installé. Il faut alors désactiver l'anti-virus avant d'utiliser Fink.</p>
      </answer>
    </faqentry>
    <faqentry name="not-found">
      <question>
        <p>Lors de l'installation d'un paquet, Fink ne peut le télécharger. Le site de téléchargement indique une version du paquet plus récente que celle de Fink. Que faire ?</p>
      </question>
      <answer>
        <p>Les sources du paquet sont déplacées par les sites en amont quand de nouvelles versions sont publiées.</p>
        <p>La première chose à faire est d'exécuter <code>fink selfupdate</code>. Il est possible que le responsable du paquet ait déjà pris ce changement en compte. Vous obtiendrez alors une mise à jour de la description du paquet soit avec une version plus récente, soit avec une nouvelle URL de téléchargement.</p>
        <p>Si cela ne marche pas, la plupart des sources sont accessibles sur <link url="http://distfiles.master.finkmirrors.net/">http://distfiles.master.finkmirrors.net/</link> (grâce à Rob Braun), et vous pouvez exécuter <code>fink configure</code> pour choisir les miroirs source "Master", afin que Fink s'y réfère automatiquement.</p>
        <p>Si cela ne marche pas, veuillez informer le mainteneur du paquet (disponible via "<code>fink describe <em>nom_du_paquet</em></code>") que l'URL n'est pas valide. Tous les mainteneurs ne lisent pas la liste de diffusion régulièrement.</p>
        <p>Pour obtenir un source utilisable, recherchez d'abord dans les autres répertoires du site distant la version du source que Fink recherche. (par exemple dans un répertoire "old"). Rappelez-vous, cependant, que certains sites distants ne conservent pas les anciennes versions de leurs paquets. Si le site officiel ne l'a pas, recherchez sur la toile - il arrive parfois que des sites non officiels aient l'archive tar que vous cherchez. Recherchez aussi sur <link url="http://us.dl.sourceforge.net/fink/direct_download/source/">http://us.dl.sourceforge.net/fink/direct_download/source/</link>. C'est là que Fink sauvegarde les fichiers source des paquets qui ont été distribués sous forme binaire. Si rien de ce qui précède ne fonctionne, postez alors un message sur la liste de diffusion <link url="http://sourceforge.net/mailarchive/forum.php?forum=fink-users">fink-users</link> pour demander si quelqu'un peut mettre à votre disposition l'ancien source.</p>
        <p>Une fois l'archive tar adéquate repérée, téléchargez-la manuellement et placez-la dans le répertoire des sources de Fink (c'est-à-dire pour l'installation par défaut de Fink, "<code>sudo mv <em>package-source.tar.gz</em> /sw/src/</code>". Puis utilisez '<code>fink install <em>nom_du_paquet</em></code>' comme d'habitude.</p>
        <p>Si vous n'arrivez pas à obtenir le fichier source, vous devrez alors attendre que le mainteneur se charge du problème. Il peut soit poster un lien vers une source ancienne, soit mettre à jour les fichiers .info et .patch pour utiliser la nouvelle version.</p>
      </answer>
    </faqentry>
    <faqentry name="fink-not-found">
      <question>
        <p>Le message "command not found" apparaît au lancement de Fink ou de tout autre paquet installé via Fink.</p>
      </question>
      <answer>
        <p>Si cela se produit systématiquement, vous avez probablement modifié involontairement (ou omis de modifier) vos scripts de démarrage. Lancez le script <filename>/sw/bin/pathsetup.command</filename> (soit en double-cliquant dans le Finder, soit dans une fenêtre de terminal). Le script tentera de deviner votre configuration de démarrage. Vous devrez alors ouvrir une nouvelle session de terminal, de façon à ce que vos paramètres d'environnement soient pris en compte. <em>Note:</em> sous <code>fink-0.18.3</code> et <code>fink-0.19.2</code>, le script s'appelle <filename>/sw/bin/pathsetup.sh</filename> et doit être lancé dans une fenêtre de terminal.</p>
        <p>Par contre, si cela ne se produit que dans le terminal X11 d'Apple, cela signifie probablement que vous devez créer un fichier <link url="http://fink.sourceforge.net/doc/x11/run-xfree86.php#xinitrc">.xinitrc</link> et y ajouter la ligne :</p>
<codeblock>. /sw/bin/init.sh</codeblock>
<p>au tout début (c'est-à-dire avant tout lancement de programme). Relancez ensuite X11 (si celui-ci était actif).</p>
      </answer>
    </faqentry>
    <faqentry name="invisible-sw">
      <question>
        <p>Est-il possible de masquer le répertoire /sw dans le Finder pour éviter que les utilisateurs ne modifient les réglages de Fink ?</p>
      </question>
      <answer>
        <p>Oui. Si vous avez installé les Developer Tools, utilisez la commande suivante :</p>
<codeblock>sudo /Developer/Tools/SetFile -a V /sw</codeblock>
        <p>Cela a pour effet de rendre invisible le dossier /sw, tout comme le sont les autres dossiers standards utilisés par le système (/usr, etc...). Si vous n'avez pas installé les Developer Tools, il existe plusieurs applications de tierce-partie qui vous permettent de changer les attributs des fichiers - vous devez rendre /sw invisible.</p>
      </answer>
    </faqentry>
    <faqentry name="install-info-bad">
      <question>
        <p>Impossible d'installer quoi que ce soit. Le message d'erreur suivant : "install-info: unrecognized option `--infodir=/sw/share/info'" apparaît.</p>
      </question>
      <answer>
        <p>Ceci est généralement lié à un problème de PATH. Lancez dans une fenêtre de terminal :</p>
<codeblock>printenv PATH</codeblock>
        <p>Si <filename>/sw/sbin</filename> n'apparaît pas, vous devrez alors modifier vos variables d'environnement comme expliqué dans les <link url="http://fink.sourceforge.net/doc/users-guide/install.php#setup">instructions</link> du Guide de l'Utilisateur. Si <filename>/sw/sbin</filename> est bien là, mais qu'il y a d'autres répertoires avant (par exemple <filename>/usr/local/bin</filename>), vous devrez alors réordonner votre PATH pour que <filename>/sw/sbin</filename> soit proche du début. Si vous voulez cependant que les autres répertoires soit avant <filename>/sw/sbin</filename>, et qu'ils contiennent des répertoires appelés eux aussi install-info, il faudra alors renommer temporairement ces sous-répertoires <filename>install-info</filename> quand vous utiliserez Fink.</p>
      </answer>
    </faqentry>
    <faqentry name="bad-list-file">
      <question>
        <p>Impossible de d'installer ou de supprimer quoi que ce soit à cause d'un problème "files list file".</p>
      </question>
      <answer>
        <p>En général, ces erreurs sont de la forme :</p>
<codeblock>files list file for package <em>nom_du_paquet</em> contains empty filename</codeblock>
        <p>ou</p>
<codeblock>files list file for package <em>nom_du_paquet</em> is missing final newline</codeblock>
        <p>Cela peut être corrigé relativement facilement. Si vous avez sur votre système le fichier .deb du paquet posant problème, vérifiez son intégrité en tapant la commande suivante :</p>
<codeblock>dpkg --contents <em>chemin_complet_du_fichier_deb</em></codeblock>
        <p>par exemple :</p>
<codeblock>dpkg --contents /sw/fink/debs/libgnomeui2-dev_2.0.6-2_darwin-powerpc.deb</codeblock>
        <p>Si vous obtenez une liste de répertoires et de fichiers, votre fichier .deb est valide. Si, par contre, le résultat est différent  ou si vous n'avez pas le fichier .deb, vous pouvez continuer car cette erreur n'interfère pas avec les éléments compilés.</p>
        <p>Si vous avez fait l'installation à partir de la distribution binaire, ou bien si vous êtes certain que ce que la version que vous avez installée est identique à celle de la distribution (vous l'avez vérifié dans la <link url="http://fink.sourceforge.net/pdb/index.php"> base de donnée des paquets</link>), alors vous pouvez télécharger un fichier .deb en lançant <code>sudo apt=get install --reinstall --download-only <em>nom_du_paquet</em></code>. Vous pouvez aussi le compiler vous-même avec <code>fink rebuild <em>nom_du_paquet</em></code>, mais cela ne l'installera pas.</p>
        <p>Quand vous aurez un fichier .deb valide, vous pouvez reconstituer le fichier. Tout d'abord, mettez-vous en mode super-utilisateur en utilisant <code>sudo -s</code> (saisissez votre mot de passe administrateur si nécessaire), puis utilisez la commande suivante : </p>
        <codeblock>dpkg -c <em>chemin_complet_du_fichier_deb</em> | awk '{if ($6 == "./"){ print "/."; } \
else if (substr($6, length($6), 1) == "/")\
{print substr($6, 2, length($6) - 2); } \
else { print substr($6, 2, length($6) - 1);}}'\ 
&gt; /sw/var/lib/dpkg/info/<em>nom_du_paquet</em>.list</codeblock>
        <p>par exemple :</p>
        <codeblock>dpkg -c /sw/fink/debs/libgnomeui2-dev_2.0.6-2_darwin-powerpc.deb | awk \
'{if ($6 == "./") { print "/."; } \
else if (substr($6, length($6), 1) == "/") \
{print substr($6, 2, length($6) - 2); } \
else { print substr($6, 2, length($6) - 1);}}' \ 
&gt; /sw/var/lib/dpkg/info/libgnomeui2-dev.list</codeblock>
        <p>Cela a pour effet d'extraire le contenu du fichier .deb, de tout supprimer sauf les noms de fichiers, puis de les écrire dans le fichier .list.</p>
      </answer>
    </faqentry>
    <faqentry name="error-nineteen">
      <question>
        <p>Lors de l'utilisation du paquet d'installation binaire de Fink, un gros "19" apparaît dans la fenêtre et plus il n'est plus possible d'installer quoi que ce soit.</p>
      </question>
      <answer>
        <p>Le numéro 19 apparaît car votre système OS X n'utilise pas l'anglais. (C'est un défaut dans l'installeur d'Apple qui l'empêche de vous afficher le message d'erreur en anglais.)</p>
        <p>Le message d'erreur correspondant au numéro 19 est :</p>
        <p>"Un répertoire racine /sw existe. Veuillez lire le fichier Read Me pour des instructions de mise à jour, ou pour savoir comment installer Fink sur un volume différent."</p>
        <p>Il est possible que vous ayez cette erreur si vous avez déjà utilisé Fink auparavant et que vous n'ayez pas supprimé le répertoire <filename>/sw</filename>. Si vous n'avez jamais utilisé Fink, il est fort probable que vous ayez installé le logiciel Virex disponible gratuitement pour les possesseurs d'un compte .Mac. Comme expliqué sur le site web de Fink, Virex est incompatible avec Fink (à cause d'une erreur de configuration des développeurs de Virex).</p>
      </answer>
    </faqentry>
    <faqentry name="dselect-garbage">
      <question>
        <p>La commande <filename>dselect</filename> produit un tas de lignes incompréhensibles. Comment éviter cela ?</p>
      </question>
      <answer>
        <p><filename>dselect</filename> et <filename>Terminal.app</filename> communiquent assez mal. Pour résoudre ce problème, vous pouvez lancer cette commande :</p>
        <p>Utilisateurs de tcsh :</p>
        <codeblock>setenv TERM xterm-color</codeblock>
        <p>Utilisateurs de bash :</p>
        <codeblock>export TERM=xterm-color</codeblock>
        <p>avant de lancer <filename>dselect</filename>. Vous pouvez mettre ceci dans votre fichier de démarrage (par exemple <code>.cshrc</code> ou <code>.profile</code>) pour que cela se fasse automatiquement.</p>
      </answer>
    </faqentry>
    <faqentry name="perl-undefined-symbol">
      <question>
        <p>Pourquoi des erreurs "dyld: perl undefined symbols" apparaissent à l'utilisation de commandes de Fink ?</p>
      </question>
      <answer>
      <p>Obsolète</p>
        <p>Si vous voyez une erreur analogue à la suivante :</p>
        <codeblock>dyld: perl Undefined symbols:
_Perl_safefree
_Perl_safemalloc
_Perl_saferealloc
_Perl_sv_2pv
_perl_call_sv
_perl_eval_sv
_perl_get_sv</codeblock>
        <p>alors vous avez certainement mis à jour Perl et vous devez aussi mettre à jour <filename>storable-pm</filename>. Vous devez mettre à jour Fink. Pendant la mise à jour, il va vous être demandé d'installer soit <filename>perl-core</filename>, soit <filename>system-perl</filename> ; choisissez <filename>system-perl</filename>. De plus, <filename>storable-pm</filename> doit aussi être mis à jour.</p>
        <p>Pour OS 10.1.x, utilisez les commandes suivantes (il vous faut les Developer Tools) :</p>
        <codeblock>sudo mv /sw/lib/perl5/darwin/Storable.pm /tmp
sudo mv /sw/lib/perl5/darwin/auto/Storable /tmp
fink rebuild storable-pm
fink selfupdate-cvs</codeblock>
      </answer>
    </faqentry>
    <faqentry name="cant-upgrade">
      <question>
        <p>Impossible de mettre à jour Fink.</p>
      </question>
      <answer>
        <p>Suivez les <link url="http://fink.sourceforge.net/download/fix-upgrade.php">instructions spéciales</link> dans ce cas.</p>
      </answer>
    </faqentry>
    <faqentry name="spaces-in-directory">
      <question>
        <p>Est-il possible d'installer Fink sur un volume ou dans un répertoire contenant un espace dans le nom?</p>
      </question>
      <answer>
        <p>Nous déconseillons de le faire. Le jeu n'en vaut vraiment pas la chandelle.</p>
      </answer>
    </faqentry>
    <faqentry name="packages-gz">
      <question>
        <p>Lors de la mise à jour binaire, de nombreux messages "File not found" apparaissent.</p>
      </question>
      <answer>
        <p>Si vous voyez ceci :</p>
        <codeblock>
Err file: local/main Packages
File not found
Ign file: local/main Release
Err file: stable/main Packages
File not found
Ign file: stable/main Release
Err file: stable/crypto Packages
File not found
Ign file: stable/crypto Release
Hit http://us.dl.sourceforge.net 10.3/release/main Packages
Hit http://us.dl.sourceforge.net 10.3/release/main Release
Hit http://us.dl.sourceforge.net 10.3/release/crypto Packages
Hit http://us.dl.sourceforge.net 10.3/release/crypto Release
Hit http://us.dl.sourceforge.net 10.3/current/main Packages
Hit http://us.dl.sourceforge.net 10.3/current/main Release
Hit http://us.dl.sourceforge.net 10.3/current/crypto Packages
Hit http://us.dl.sourceforge.net 10.3/current/crypto Release
Failed to fetch file:/sw/fink/dists/local/main/binary-darwin-powerpc/Packages
File not found
Failed to fetch file:/sw/fink/dists/stable/main/binary-darwin-powerpc/Packages
File not found
Failed to fetch file:/sw/fink/dists/stable/crypto/binary-darwin-powerpc/Packages
File not found
Reading Package Lists... Done
Building Dependency Tree... Done
E: Some index files failed to download, 
they have been ignored, or old ones used instead.
update available list script returned error exit status 1.
</codeblock>
        <p>alors vous devez juste lancer <code>fink scanpackages</code>. Cela générera les fichiers introuvables.</p>
      </answer>
    </faqentry>
    <faqentry name="wrong-tree">
      <question>
        <p>Après mise à jour du système ou des Developer Tools, Fink ne reconnaît pas le changement.</p>
      </question>
      <answer>
        <p>Lorsque vous changez la distribution de Fink (dont la distribution source et la distribution binaire sont des sous-ensembles), il faut le préciser à Fink. Pour cela, vous pouvez lancer le script qui est généralement exécuté lors de la première installation de Fink :</p>
        <codeblock>/sw/lib/fink/postinstall.pl</codeblock>
        <p>Fink pointera alors à l'endroit approprié.</p>
      </answer>
    </faqentry>
    <faqentry name="seg-fault">
      <question>
        <p>Des erreurs apparaissent lors de l'utilisation de <code>gzip</code> ou <code>dpkg-deb</code> inclus dans le paquet <code>fileutils</code>.</p>
      </question>
      <answer>
        <p>Les erreurs de la forme :</p>
        <codeblock>gzip -dc /sw/src/dpkg-1.10.9.tar.gz | /sw/bin/tar -xf -
### execution of gzip failed, exit code 139</codeblock>
        <p>ou :</p>
        <codeblock>gzip -dc /sw/src/aquaterm-0.3.0a.tar.gz | /sw/bin/tar -xf -
gzip: stdout: Broken pipe
### execution of gzip failed, exit code 138</codeblock>
        <p>ou encore :</p>
        <codeblock>dpkg-deb -b root-base-files-1.9.0-1
/sw/fink/dists/unstable/main/binary-darwin-powerpc/base
### execution of dpkg-deb failed, exit code 10
Failed: can't create package base-files_1.9.0-1_darwin-powerpc.deb</codeblock>
        <p>ou des fautes de segmentation lors de l'utilisation d'utilitaires inclus dans <code>fileutils</code>, par exemple <code>ls</code> ou <code>mv</code>, sont généralement dues à une erreur de lien pré-encodé dans une librairie.
Vous pouvez la corriger avec la commande suivante :</p>
        <codeblock>sudo /sw/var/lib/fink/prebound/update-package-prebinding.pl -f</codeblock>
      </answer>
    </faqentry>
    <faqentry name="pathsetup-keeps-running">
      <question>
        <p>À l'ouverture d'une fenêtre de Terminal, le message "Your environment seems to be set up for Fink already" apparaît, puis le Terminal se déconnecte.</p>
      </question>
      <answer>
        <p>Ce qui se passe ici est que, d'une façon ou d'une autre, l'application Terminal.app a été chargée d'exécuter <code>/sw/bin/pathsetup.command</code> à chaque connexion. Vous pouvez corriger cela en supprimant le fichier de préférences, <code>~/Library/Preferences/com.apple.Terminal.plist</code>.</p>
        <p>Si vous voulez conserver certaines préférences, vous pouvez modifier le fichier avec un éditeur de texte classique et supprimer la référence à <code>/sw/bin/pathsetup.command</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="ext-drive">
      <question>
        <p>Quand Fink n'est pas installé sur la partition principale du disque, il est impossible de mettre à jour le paquet fink à partir du source. Des erreurs concernant <quote>chowname</quote> apparaissent.</p>
      </question>
      <answer>
        <p>Si le message d'erreur ressemble à celui-ci :</p>
        <codeblock>This first test is designed to die, so please ignore the error
message on the next line.
# Looks like your test died before it could output anything.
./00compile............................ok
./Base/initialize......................ok
./Base/param...........................ok
./Base/param_boolean...................ok
./Command/cat..........................ok
./Command/chowname.....................#     
Failed test (./Command/chowname.t at line 27)
#          got: 'root'
#     expected: 'nobody'</codeblock>
        <p>vous devez exécuter <em>Lire les informations</em> (Cmd-I quand l'icône de la partition ou du disque est selectionnée) sur le disque (ou la partition) sur lequel (laquelle) Fink est installé et décocher l'option "Ignorer les autorisations de ce volume".</p>
      </answer>
    </faqentry>
    <faqentry name="mirror-gnu">
      <question>
        <p>Fink refuse de mettre à jour les paquets. Il semble ne pas trouver le miroir 'gnu'.</p>
      </question>
      <answer>
        <p>Si un message d'erreur se terminant par :</p>
        <codeblock>Failed: No mirror site list file found for mirror 'gnu'.</codeblock>
        <p>apparaît, il est plus que probable que vous deviez mettre à jour le paquet <code>fink-mirrors</code> via, par exemple :</p>
        <codeblock>fink install fink-mirrors</codeblock>
      </answer>
    </faqentry>
    <faqentry name="cant-move-fink">
      <question>
        <p>Impossible de mettre à jour Fink, car le répertoire /sw/fink ne peut être déplacé.</p>
      </question>
      <answer>
        <p>L'erreur suivante :</p>
        <codeblock>Failed: Can't move "/sw/fink" out of the way.</codeblock>
        <p>est due, en général, à des permissions erronées dans un des répertoires temporaires créés durant l'exécution de <code>selfupdate</code>. Supprimez-les :</p>
        <codeblock>sudo rm -rf /sw/fink.tmp /sw/fink.old</codeblock>
      </answer>
    </faqentry>  </chapter>
  <chapter filename="comp-general">
    <title>Problèmes de compilation généraux</title>
    <shorttitle>Compilation (1)</shorttitle>
    <faqentry name="compiler">
      <question>
        <p>Un script configure signale qu'il ne peut trouver un "acceptable cc". De quoi s'agit-il ?</p>
      </question>
      <answer>
        <p>Lisez la documentation avant de poser des questions. Pour compiler des paquets à partir du source, vous devez installer les Developer Tools, qui, entre autres, contiennent le compilateur C nommé <code>cc</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="cvs">
      <question>
        <p>Lors de l'exécution de "fink selfupdate-cvs", le message : "cvs: Command not found." apparaît.</p>
      </question>
      <answer>
        <p>Vous devez installer les Developer Tools.</p>
      </answer>
    </faqentry>
    <faqentry name="missing-make">
      <question>
        <p>Un message d'erreur relatif à <code>make</code> apparaît.</p>
      </question>
      <answer>
        <p>Si ce message est du type :</p>
        <codeblock>make: command not found</codeblock>
        <p>ou :</p>
        <codeblock>Can't exec "make": 
No such file or directory at /sw/lib/perl5/Fink/Services.pm line 190.</codeblock>
        <p>cela signifie que vous devez installer les Developer Tools.</p>
        <p>Si, par contre, le message est du type :</p>
        <codeblock>make: illegal option -- C</codeblock>
        <p>cela signifie que vous avez remplacé la version GNU de l'utilitaire <code>make</code> installée par les Developer Tools par une version BSD de make. De nombreux paquets utilisent des fonctionnalités spéciales implémentées seulement dans GNU make. Vérifiez que <code>/usr/bin/make</code> est un lien symbolique vers <code>gnumake</code>, et non vers <code>bsdmake</code>. De plus, assurez-vous que <code>/usr/local/bin/</code> ne contient aucune autre copie de <code>make</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="head">
      <question>
        <p>Un étrange message d'erreur concernant la commande head apparaît. Que se passe-t-il ?</p>
      </question>
      <answer>
        <p>Si vous voyez apparaître ce message :</p>
        <codeblock>Unknown option: 1 Usage: head [-options] &lt;url&gt;...</codeblock>
        <p>suivi d'une liste d'options, cela signifie que la commande <code>head</code> est défectueuse. Cela se produit lorsqu'on installe la librairie Perl libwww sur un volume système HFS+. Elle tente de créer une nouvelle commande <code>/usr/bin/HEAD</code>, qui écrase la commande <code>head</code> existante, car le système de fichiers ne respecte pas la casse. <code>head</code> est une commande standard utilisée dans de nombreux scripts shell et dans les Makefiles. Vous devez récupérer la commande <code>head</code> originale si vous voulez utiliser Fink.</p>
        <p>Le script bootstrap de la version source de fink fait, maintenant, cette vérification ; mais vous pouvez vous retrouver devant ce problème si vous utilisez la version binaire lors de la première installation de fink ou si vous installez libwww après avoir installé Fink.</p>
        <p>Ce problème peut aussi venir de l'installation de <filename>/sw/bin/HEAD</filename> (mais pas par un paquet de Fink). La solution est plus simple : renommez <filename>/sw/bin/HEAD</filename>.</p>
      </answer>
    </faqentry>
    <faqentry name="also_in">
      <question>
        <p>À l'installation d'un paquet, un message d'erreur signale qu'il y a tentative d'écrasement d'un fichier situé dans un autre paquet.</p>
      </question>
      <answer>
        <p>Cela arrive parfois avec les paquets multiples (c'est-à-dire ceux qui sont scindés en -dev, -shlibs, etc...) quand un fichier est déplacé d'un paquet à l'autre (par exemple de <code>foo</code> à <code>foo-shlibs</code>. Vous pouvez tenter d'écraser le fichier par celui présent dans le paquet (puisqu'ils sont identiques) :</p>
        <codeblock>sudo dpkg -i --force-overwrite <em>filename</em>
        </codeblock>
        <p>où <em>filename</em> est le fichier .deb correspondant au paquet que vous êtes en train d'installer.</p>
      </answer>
    </faqentry>
    <faqentry name="weak_lib">
      <question>
        <p>Après installation des outils de développement de décembre 2002, des messages concernant des "weak libraries" apparaissent.</p>
      </question>
      <answer>
        <p>C'est un problème qui est apparu avec les outils de développement de décembre 2002. Parfois, des messages semblables au suivant apparaissent (on a choisi ici libgdk-pixbuf à titre d'exemple) :</p>
        <codeblock>ld: warning dynamic shared library:
/sw/lib/libgdk-pixbuf.dylib not made a weak library in output with
MACOSX_DEPLOYMENT_TARGET environment variable set to: 10.1</codeblock>
        <p>Vous pouvez considérer ces messages comme inoffensifs. Si vous êtes du genre curieux, lisez les notes de mise à jour (release notes) qui se trouvent dans le répertoire de documentation du développeur, en particulier celles concernant GCC  et l'éditeur de liens, pour de plus amples informations. Cela se rapporte essentiellement à la façon dont sont considérés les symboles manquants lors de l'exécution d'applications qui utilisent des références faibles : erreur fatale ou non au lancement.</p>
      </answer>
    </faqentry>
    <faqentry name="mv-failed">
      <question>
        <p>Lors de la construction d'un paquet, le message suivant apparaît : "execution of mv failed, exit code 1"</p>
      </question>
      <answer>
        <p>Si vous avez installé StuffIt Pro, il se peut que vous ayez activé le mode "Archive Via Real Name". Recherchez un panneau de préférences Stuffit dans les préférences système et désactivez "ArchiveViaRealName" si cette option est activée. Elle contient une implémentation boguée de certains appels système importants qui entraîne un grand nombre d'erreurs étranges et passagères comme celle-ci.</p>
        <p>Dans le cas contraire, une erreur sur <filename>mv</filename> signifie, en général, qu'une autre erreur s'est produite précédemment dans le processus de construction sans l'arrêter. Pour trouver le ou les fichiers concernés, recherchez dans les messages de sortie le fichier manquant. Par exemple, si vous obtenez ce message : </p>
        <codeblock>mv /sw/src/root-foo-0.1.2-3/sw/lib/libbar*.dylib \
/sw/src/root-foo-shlibs-0.1.2-3/sw/lib/ 
mv: cannot stat `/sw/src/root-foo-0.1.2-3/sw/lib/libbar*.dylib': 
No such file or directory 
### execution of mv failed, exit code 1 
Failed: installing foo-0.1.2-3 failed</codeblock>
        <p>vous devez rechercher <filename>libbar</filename> parmi les messages de sortie précédents du processus de construction.</p>
      </answer>
    </faqentry>
    <faqentry name="node-exists">
      <question>
        <p>Impossible d'installer ou de mettre à jour un paquet, un message indique qu'un "node" existe déjà.</p>
      </question>
      <answer>
        <p>Ces messages d'erreurs sont similaires au message suivant :</p>
        <codeblock>Failed: Internal error: node for system-xfree86 already exists</codeblock>
        <p>Le moteur de dépendances ne sait plus où il en est, car il y a eu des changements dans certains fichiers info des paquets. Pour résoudre ce problème :</p>
        <ul>
          <li>
            <p>Supprimez de force le paquet en cause, par exemple :</p>
            <codeblock>sudo dpkg -r --force-all system-xfree86</codeblock>
            <p>pour l'exemple donné ci-dessus.</p>
          </li>
          <li>
            <p>Essayez de réinstaller ou de remettre à jour. À un moment, vous verrez apparaître un message concernant une "virtual dependency" sur le paquet que vous venez de supprimer. Sélectionnez-le et le paquet sera réinstallé pendant le processus de construction.</p>
          </li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="usr-local-libs">
      <question>
        <p>Problèmes de compilation de paquet Fink quand des librairies ou des headers sont installés dans /usr/local</p>
      </question>
      <answer>
        <p>C'est une source fréquente de problèmes, car le script de configuration du paquet trouve les librairies et les headers installés dans <filename>/usr/local</filename> avant ceux installés dans l'arborescence de Fink. Si vous rencontrez des problèmes lors de la construction d'un paquet, et que vous ne trouvez pas de solution à ce problème dans les QFP, regardez si vous avez des librairies installées dans <filename>/usr/local/lib</filename> ou des headers installés dans <filename>/usr/local/include</filename>. Si c'est le cas, déplacez temporairement <filename>/usr/local</filename> :</p>
        <codeblock>sudo mv /usr/local /usr/local.moved</codeblock>
        <p>construisez le paquet, puis remettez en place <filename>/usr/local</filename> :</p>
        <codeblock>sudo mv /usr/local.moved /usr/local</codeblock>
      </answer>
    </faqentry>
    <faqentry name="toc-out-of-date">
      <question>
        <p>Lors de la construction d'un paquet, un message indique que "table of
        contents" n'est pas à jour (out of date).</p>
      </question>
      <answer>
        <p>Le message de sortie vous indique ce qu'il faut faire. En général, il est de la forme suivante :</p>
        <codeblock>ld: table of contents for archive: 
/sw/lib/libintl.a is out of date; 
rerun ranlib(1) (can't load from it)</codeblock>
        <p>Vous devez exécuter ranlib (en tant que super-utilisateur) sur la librairie qui est la cause du problème. Par exemple, dans le cas ci-dessus, vous devez exécuter :</p>
        <codeblock>sudo ranlib /sw/lib/libintl.a</codeblock>
      </answer>
    </faqentry>
    <faqentry name="fc-atlas">
      <question>
        <p>Fink Commander se bloque quand on tente d'installer atlas.</p>
      </question>
      <answer>
        <p>Ceci provient du fait qu'une des étapes de la compilation du paquet <code>atlas</code> envoie une invite à l'utilisateur et que Fink Commander ne l'affiche pas. Vous devez utiliser <code>fink install atlas</code> au lieu de passer par Fink Commander.</p>
      </answer>
    </faqentry>
    <faqentry name="basic-headers">
      <question>
        <p>Un message indique qu'il est impossible de trouver stddef.h,  ou wchar.h, ou crt.o</p>
      </question>
      <answer>
        <p>Ces headers, comme beaucoup d'autres, sont fourniq par le paquet DevSDK des Developer Tools. Vérifiez que <filename>/Library/Receipts/DevSDK.pkg</filename> existe dans votre système. Si ce n'est pas le cas, relancez l'installeur des outils de développement et installez le paquet DevSDK en choisissant Custom Install.</p>
      </answer>
    </faqentry>
    <faqentry name="multiple-dependencies">
      <question>
        <p>Impossible de mettre à jour, un message indique que Fink est "unable to resolve version conflict
        on multiple dependencies".</p>
      </question>
      <answer>
        <p>Pour résoudre ce problème, essayez de ne mettre à jour qu'un seul paquet, puis lancez de nouveau "fink update-all". Si le message réapparaît, répétez le processus.</p>
      </answer>
    </faqentry>
    <faqentry name="dpkg-parse-error">
      <question>
        <p>Impossible d'installer quoi que ce soit, le message suivant apparaît : "dpkg: parse error, in file `/sw/var/lib/dpkg/status'"</p>
      </question>
      <answer>
        <p>Cela signifie que votre base de données dpkg a été corrompue, en général à la suite d'un plantage ou d'une autre erreur irrécupérable. Vous pouvez résoudre le problème en copiant la version précédente de la base de données :</p>
        <codeblock>sudo cp /sw/var/lib/dpkg/status-old /sw/var/lib/dpkg/status</codeblock>
        <p>Il se peut que vous deviez réinstaller les derniers paquets installés juste avant que le problème n'apparaisse.</p>
      </answer>
    </faqentry>
    <faqentry name="freetype-problems">
      <question>
        <p>Messages d'erreurs concernant freetype.</p>
      </question>
      <answer>
        <p>Il y a plusieurs types d'erreurs concernant freetype. Si le message d'erreur ressemble au suivant : </p>
        <codeblock>/sw/include/pango-1.0/pango/pangoft2.h:52: 
error: parse error before '*' token 
/sw/include/pango-1.0/pango/pangoft2.h:57:
error: parse error before '*' token
/sw/include/pango-1.0/pango/pangoft2.h:61: 
error: parse error before '*' token 
/sw/include/pango-1.0/pango/pangoft2.h:86: 
error: parse error before "pango_ft2_font_get_face"
/sw/include/pango-1.0/pango/pangoft2.h:86: 
warning: data definition has no type or storage class 
make[2]: *** [rsvg-gz.lo] Error 1
make[1]: *** [all-recursive] Error 1 
make: *** [all-recursive-am] Error 2 
### execution of make failed, exit code 2 
Failed: compiling librsvg2-2.4.0-3 failed</codeblock>
        <p>ou à celui-ci :</p>
        <codeblock>In file included from vteft2.c:32: 
vteglyph.h:64: error:
parse error before "FT_Library" 
vteglyph.h:64: warning: 
no semicolon at end of struct or union vteft2.c: 
In function `_vte_ft2_get_text_width': 
vteft2.c:236: error: 
dereferencing pointer to incomplete type 
vteft2.c: In function `_vte_ft2_get_text_height':
vteft2.c:244: error: 
dereferencing pointer to incomplete type
vteft2.c: In function `_vte_ft2_get_text_ascent': 
vteft2.c:252: error:
dereferencing pointer to incomplete type 
vteft2.c: In function `_vte_ft2_draw_text': 
vteft2.c:294: error: 
dereferencing pointer to incomplete type 
vteft2.c:295: error: 
dereferencing pointer to incomplete type
make[2]: *** [vteft2.lo] Error 1 
make[1]: *** [all-recursive] Error 1 
make: *** [all] Error 2 
### execution of make failed, exit code 2
Failed: compiling vte-0.11.10-3 failed</codeblock>
        <p>ou encore à celui-là :</p>
        <codeblock>checking for freetype-config.../usr/X11R6/bin/freetype-config 
checking For sufficiently new FreeType (at least 2.0.1)... no 
configure: error: pangoxft 
Pango backend found but did not find freetype libraries 
make: *** No targets specified and no makefile found. Stop. 
### execution of LD_TWOLEVEL_NAMESPACE=1 failed, exit code 2 
Failed: compiling gtk+2-2.2.4-2 failed</codeblock>
        <p>le problème est dû à une confusion entre les headers des paquets <code>freetype</code> ou de <code>freetype-hinting</code> et les headers <code>freetype2</code> qui sont inclus dans X11 ou dans XFree86.</p>
        <codeblock>fink remove freetype freetype-hinting</codeblock>
        <p>supprime la variante que vous avez installée. À contrario, si le message d'erreur est similaire à celui-ci :</p>
        <codeblock>ld: Undefined symbols: _FT_Access_Frame</codeblock>
        <p>cela est dû à la présence d'un fichier résultant d'une installation précédente de X11. Réinstallez X11 SDK. Enfin, si le message d'erreur, ressemble à celui-là :</p>
        <codeblock>dyld: klines Undefined symbols: /sw/lib/libqt-mt.3.dylib 
undefined reference to _FT_Access_Frame</codeblock>
        <p>vous êtes probablement en présence d'une version binaire qui compile correctement avec <code>gcc3.3</code> sous Jaguar, mais pas sous Panther. Ce problème a été résolu, il suffit que vous mettiez à jour vos paquets, par exemple via <code>sudo apt-get update ; sudo apt-get dist-upgrade</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="dlfcn-from-oo">
      <question>
        <p>Messages d'erreur concernant `Dl_info'.</p>
      </question>
      <answer>
        <p>Si vous avez des messages d'erreur similaire à celui-ci :</p>
        <codeblock>unix_dl.c: In function `rep_open_dl_library':
unix_dl.c:328: warning: assignment discards qualifiers from pointer target type 
unix_dl.c: In function `rep_find_c_symbol': 
unix_dl.c:466: error: `Dl_info' undeclared (first use in this function)
unix_dl.c:466: error: (Each undeclared identifier is reported only once 
unix_dl.c:466: error: for each function it appears in.)
unix_dl.c:466: error: parse error before "info" 
unix_dl.c:467: error: `info' undeclared (first use in this function) 
make[1]: *** [unix_dl.lo] Error 1</codeblock>
        <p>vous avez certainement un header <code>/usr/local/include/dlfcn.h</code>, incompatible avec Panther. Déplacez-le.</p>
        <p>Ce header est, en général, installé par Open Office, et vous devez le remplacer, de même que la librairie <code>/usr/local/lib/libdl.dylib</code>, par des liens symboliques vers les fichiers inclus dans Panther :</p>
        <codeblock>sudo ln -s /usr/include/dlfcn.h /usr/local/include/dlfcn.h
sudo ln -s /usr/lib/libdl.dylib /usr/local/lib/libdl.dylib</codeblock>
      </answer>
    </faqentry>
    <faqentry name="gcc2">
      <question>
        <p>Fink signale que <filename>gcc2</filename> n'existe pas, mais il ne semble pas possible de l'installer.</p>
      </question>
      <answer>
        <p><filename>gcc2</filename> est un paquet virtuel qui indique la présence de gcc-2.95 dans votre système. Installez le paquet gcc2.95 à partir de XCode Tools (les versions précédentes du système opératoire inclut gcc-2.95 dans l'installation standard des Developer Tools).</p>
      </answer>
    </faqentry>
    <faqentry name="system-java">
      <question>
        <p>Fink signale <code>Failed: Can't resolve dependency "system-java14-dev"</code>, mais il n'existe pas de paquet system-java14-dev.</p>
      </question>
      <answer>
        <p>Ce paquet est un paquet virtuel. Ce type d'erreur apparaît quand Java est mis à jour via Mise à jour de Logiciels : les headers sont supprimés, ce que empêche la création du paquet -dev.</p>
        <p>Vous devez télécharger le paquet approprié des <filename>Java Developer Tools</filename> à partir du site <link url="http://connect.apple.com">Apple</link>. Dans le cas ci-dessus, il s'agit du paquet <filename>Java 1.4.2 Developer Tools</filename>.</p>
      </answer>
    </faqentry>
    <faqentry name="dpkg-split">
      <question>
        <p>Lors de l'installation d'un paquet, le message d'erreur suivant apparaît : <quote>dpkg (subprocess): failed to exec dpkg-split to see if it's part of a multiparter: No such file or directory</quote>.</p>
      </question>
      <answer>
        <p>Ce problème se résout, en général, par la définition correcte de votre environnement, cf. <xref chapter="usage-fink" section="fink-not-found">cette partie des QFP</xref>.</p>
      </answer>
    </faqentry>
     <faqentry name="xml-parser">
      <question>
        <p>Le message d'erreur suivant apparaît : <quote>configure: error: XML::Parser perl module is required for intltool</quote>. Que faire ?</p>
      </question>
      <answer>
        <p>Vous devez vérifier que vous avez la variante du paquet qui correspond à la version de Perl installée dans votre système. Par exemple, sous Panther, vous devez avoir <code>xml-parser-pm581</code> et non pas <code>xml-parser-pm560</code> (il se peut que vous ayez le paquet fantôme <code>xml-parser-pm</code>), car, dans votre système est installé <code>Perl-5.8.1</code> et non pas <code>Perl-5.6.0</code>. Sous Jaguar, vous devez avoir la variante <code>pm560</code> si vous utilisez la version système de Perl; si vous avez installé <code>Perl 5.8.0</code>, vous devez avoir la variante <code>pm580</code>.</p>
      </answer>
    </faqentry>
        <p>You need to make sure that you have the right variant of the xml-parser-pm package to match the Perl version for your system.  For example, if you're on Panther you should have <code>xml-parser-pm581</code> rather than <code>xml-parser-pm560</code> (you may also have the <code>xml-parser-pm</code> placeholder), since you have <code>Perl-5.8.1</code> rather than <code>Perl-5.6.0</code>.  If you're on Jaguar, and are using the default system Perl version, you'll have the <code>pm560</code> variant, and if you've installed <code>Perl 5.8.0</code> you may have the <code>pm580</code> variant.</p>
        <faqentry name="master-problems">
      <question>
        <p>Lors du téléchargement d'un paquet, Fink tente de le faire à partir d'un site dont le nom contient <quote>distfiles</quote> et ne trouve pas le fichier.</p>
      </question>
      <answer>
        <p>Fink tente d'utiliser l'un de ses sites <quote>Maîtres</quote>. Ils servent à garantir que les sources des paquets de Fink sont disponibles même lorsque le site original a changé d'adresse. Cette erreur apparaît lorsqu'une nouvelle version d'un paquet est publiée, mais que les miroirs maîtres n'ont pas encore eu le temps de la prendre en compte.</p>
        <p>Pour pallier cela, exécutez <code>fink configure</code> et changez l'ordre de recherche de telle sorte que les miroirs maîtres soient utilisés en dernier.</p>
      </answer>
    </faqentry>
 </chapter>
  <chapter filename="comp-packages">
    <title>Problèmes de compilation de certains paquets</title>
    <shorttitle>Compilation (2)</shorttitle>
    <faqentry name="libgtop">
      <question>
        <p>La compilation d'un paquet échoue avec des messages d'erreur concernant <code>sed</code>.</p>
      </question>
      <answer>
        <p>Ceci peut se produire si votre script de connexion (par exemple <code>~/.cshrc</code>) lance une commande qui écrit dans le terminal, exemple : "<code>echo Hello</code>" ou <code>xttitle</code>. Pour résoudre le problème, la solution la plus simple est de mettre les lignes qui causent problème en commentaires.</p>
        <p>Si vous voulez conserver l'écho, vous pouvez le faire ainsi :</p>
        <codeblock>if ( $?prompt) then 
	echo Hello 
endif</codeblock>
      </answer>
    </faqentry>
    <faqentry name="cant-install-xfree">
      <question>
        <p>Lors d'une tentative de passage aux paquets XFree86 de Fink, il est impossible d'installer <code>xfree86-base</code> ou <code>xfree86</code>, car ces paquets entrent en conflit avec <code>system-xfree86</code>.</p>
      </question>
      <answer>
        <p>Toutes les variantes de X11, doivent, malheureusement, être installées au même endroit /usr/X11R6. C'est pourquoi, les paquets de Fink <code>xfree86-base</code> et <code>xfree86-rootless</code> s'installent également à cet endroit. Néanmoins, comme Fink ne supprime pas les fichiers qui ne figurent pas dans sa base de données, il ne remplace pas automatiquement une installation de X11 faite hors de Fink.</p>
        <p></p>
        <p>Voici comment procéder :</p>
        <p></p>
        <p>
          <em>Note : Les utilisateurs de 10.2.x ayant une version de Fink à jour  (&gt;=0.16.2) et les utilisateurs de 10.3.x doivent sauter l'étape 1 ci-dessous (de toute façon, elle ne fonctionne pas pour eux).</em>
        </p>
        <p>1. Supprimez <code>system-xfree86</code>. Si vous n'avez aucun paquet qui dépend de X11, c'est tout simple. Toutefois, il est fréquent que de nombreux paquets dépendant de X11 soient installés. Dans ce cas, au lieu de tous les désinstaller, vous pouvez utiliser :</p>
          <codeblock>sudo dpkg --remove --force-depends system-xfree86</codeblock>
        <p>pour supprimer system-xfree86, ce qui laisse tout le reste en place. Si <code>system-xfree86</code> n'est pas installé, passez à l'étape 3.</p>
        <p>2. Supprimez XFree86 avec :</p>
          <codeblock>sudo rm -rf /Applications/XDarwin.app /usr/X11R6 /etc/X11</codeblock>
        <p>Si vous aviez installé Apple X11 auparavant, supprimez également l'application X11.</p>
        <p>3. Pour installer XFree86-4.2.1, installez les paquets Fink <code>xfree86-base</code> et <code>xfree86-rootless</code> comme vous le faites d'habitude : "<code>fink install</code>" pour les utilisateurs de sources, "<code>apt-get install</code>" ou <code>dselect</code> pour les utilisateurs de binaires.</p>
        <p>- ou -</p>
        <p>3a. Pour installer XFree86-4.3.x ou une version postérieure, installez le paquet Fink <code>xfree86</code> via "fink install xfree86". La version la plus récente (XFree86-4.4.x à la date du 25 mai 2004) n'est pas encore dans la distribution binaire et n'est disponible que dans l'arborescence instable [ voir <link url="http://fink.sourceforge.net/faq/usage-fink.php#unstable">comment installer un paquet instable</link>.</p>
      </answer>
    </faqentry>
    <faqentry name="change-thread-nothread">
      <question>
        <p>Comment passer de la version sans processus légers à la version avec processus légers (ou vice-versa) ?</p>
      </question>
      <answer>
        <p>Si vous avez installé la version Fink de XFree86 et que vous vouliez passer de la version sans processus légers de Fink à celle avec processus légers de Fink, vous devez supprimer l'ancienne version manuellement. Vous pouvez le faire via la ligne de commande comme ceci :</p>
        <codeblock>sudo dpkg -r --force-depends xfree86-base 
sudo dpkg -r --force-depends xfree86-shlibs 
sudo dpkg -r --force-depends xfree86-rootless 
sudo dpkg -r --force-depends xfree86-rootless-shlibs</codeblock>
        <p>ou pour supprimer la version avec processus légers :</p>
        <codeblock>sudo dpkg -r --force-depends xfree86-base-threaded 
sudo dpkg -r --force-depends xfree86-shlibs-threaded 
sudo dpkg -r --force-depends xfree86-rootless-threaded 
sudo dpkg -r --force-depends xfree86-rootless-threaded-shlibs</codeblock>
        <p>FinkCommander peut aussi supprimer des paquets. Dans la fenêtre "source", sélectionnez un paquet et utilisez "<code>Force Remove</code>" dans le menu <code>Source</code>.</p>
        <p>Si vous avez installé system-xfree86, voir la précédente question pour savoir comment le supprimer.</p>
        <p>Installez la version désirée de xfree86 :</p>
        <p>
          <code>xfree86-base</code> et <code>xfree86-rootless</code>
        </p>
        <p>
          <code>xfree86-base-threaded</code> et <code>xfree86-rootless-threaded</code>
        </p>
        <p>par les méthodes habituelles : "<code>fink install</code>" pour les utilisateurs de sources, "<code>apt-get install</code>" ou <code>dselect</code> pour les utilisateurs de binaires.</p>
      </answer>
    </faqentry>
    <!--obsolete><faqentry name="apple-x11" >
<question>
<p>I've installed the Apple X11 package, but system-xfree86 won't install.</p>
</question>
<answer>
<p>If you get error messages like the following:</p>
<codeblock>- missing /usr/X11R6/lib/libX11.dylib
- missing /usr/X11R6/lib/libXpm.dylib
- missing /usr/X11R6/lib/libXaw.dylib
- missing /usr/X11R6/include/X11/Xlib.h

Your XFree86 installation is missing or incomplete. Please make sure you have
an XFree86 release installed and retry the installation of the system-xfree86
package.
</codeblock>
<p>then you need to install the SDK package as well as the User package. If you are running Panther, the SDK is on the XCode disk and is <em>NOT</em> automatically installed. The SDK as well as X11 beta for Jaguar is no longer available, and you'll either have to upgrade to Panther or use Fink's xfree86.</p>
<p>If, on the other hand, you get the following message:</p>
<codeblock>An error occurred trying to find your XFree86 installation's
version. This really shouldn't happen, so I'm bailing. :(</codeblock>
<p>then you need to update your package descriptions and install a newer version of system-xfree86. If you are installing Apple X11 Beta 3, then you will need <filename>system-xfree86-4.2-11</filename> or later.</p>
</answer>
</faqentry><-->
    <faqentry name="cctools">
      <question>
        <p>Lors de l'installation de KDE, le message suivant apparaît : 'Can't
        resolve dependency "cctools (&gt;= 446-1)"'</p>
      </question>
      <answer>
        <p>Ce message quelque peu abscons signifie que vous devez installer les Developer Tools de décembre 2002.</p>
      </answer>
    </faqentry>
    <!--obsolete><faqentry name="system-xfree86-upgrade" >
<question>
<p>I can't update system-xfree86, because of a conflict with x11.</p>
</question>
<answer>
	<p>This problem has come about because of changes needed to allow for externally installed XFree86-4.3. Originally, <code>system-xfree86</code> provided the <code>x11</code> virtual package when an externally installed XFree86 was present. Because it only worked for XFree86-4.2, it was decided to have two separate packages for XFree86 4.2.x and Apple X11 beta 3, and one for XFree86 4.3.x and Apple X11 1.0</p>
<p>Either of these will provide <code>x11</code>. <code>system-xfree86</code> is now a bundle that installs the appropriate one of the above packages, depending on the version of XFree86 / Apple X11 that is installed. Unfortunately, switching the provider of a virtual package is sufficiently complicated that the automatic upgrade procedure can't deal with it (currently). Do an additional <code>selfupdate</code> to get the latest version of the package, then try to update again.</p>
</answer>
</faqentry><-->
     <faqentry name="libiconv-gettext">
      <question>
        <p>Impossible de mettre à jour libiconv <code>libiconv</code>.</p>
      </question>
      <answer>
        <p>Si vous voyez apparaître des messages d'erreur semblables au suivant :</p>
        <codeblock>libtool: link: cannot find the library `/sw/lib/libiconv.la'</codeblock>
        <p>vous pouvez résoudre le problème en exécutant :</p>
        <codeblock>fink remove gettext-dev
fink install libiconv</codeblock>
      </answer>
    </faqentry>
     </chapter>
  <chapter filename="usage-general">
    <title>Problème généraux d'utilisation de paquets</title>
    <shorttitle>Utilisation (1)</shorttitle>
    <faqentry name="xlocale">
      <question>
        <p>De nombreux messages similaires à "locale not supported by C
        library" apparaissent. Est-ce un problème ?</p>
      </question>
      <answer>
        <p>Non, cela signifie juste que le programme va utiliser les messages, les formats de date, etc... anglais. Le programme fonctionnera normalement par ailleurs. Le document Utilisation de X11 donne de <link url="http://fink.sourceforge.net/doc/x11/trouble.php#locale">plus amples informations</link> à ce sujet.</p>
      </answer>
    </faqentry>
    <faqentry name="passwd">
      <question>
        <p>Un certain nombre d'étranges utilisateurs apparaissent tout d'un coup sur mon système. Ils portent, entre autres, les noms suivants : "mysql", "pgsql", and "games". D'où proviennent-ils ?</p>
      </question>
      <answer>
        <p>Vous avez utilisé Fink pour installer un paquet dépendant du paquet passwd. passwd installe un certain nombre d'utilisateurs supplémentaires pour des raisons de sécurité - sur les systèmes Unix, les fichiers et les processus appartiennent aux "possesseurs", ce qui permet aux administrateurs système de moduler les permissions et la sécurité du système. Les programmes Apache et MySQL, par exemple, doivent avoir un "possesseur", et il n'est pas raisonnable que le super-utilisateur soit le possesseur de ces démons. Imaginez ce qu'il arriverait si Apache était compromis et avait tout d'un coup permission d'écrire dans tous les fichiers du système. Donc, le paquet passwd se charge de définir ces utilisateurs supplémentaires pour les paquets Fink qui en ont besoin.</p>
        <p>Il peut être inquiétant de découvrir soudain un certain nombre d'utilisateurs inconnus dans votre panneau de "Préférences système : Utilisateurs" (sur 10.2.x) ou "Préférences système : Comptes" (sur 10.3.x), mais réfléchissez bien avant de les supprimer :</p>
        <ul>
          <li>Tout d'abord, vous avez manifestement choisi d'installer un paquet qui nécessite leur utilisation ; donc leur suppression n'a pas grand sens dans ce contexte.</li>
          <li>En fait, il y a déjà un certain nombre d'utilisateurs supplémentaires installés par Mac OS X, dont vous ignorez peut-être l'existence : www, daemon, nobody entre autres. La présence de ces utilisateurs supplémentaires correspond à une convention standard d'Unix nécessaire à l'utilisation de certains services ; le paquet passwd ne fait qu'en ajouter quelques autres qu'Apple ne fournit pas. Vous pouvez voir les utilisateurs installés par Apple via le Gestionnaire NetInfo ou en lançant <code>niutil -list . /users</code>
          </li>
          <li>Si vous décidez de supprimer ces utilisateurs, faites très attention à la façon dont vous procéderez. Si vous utilisez le panneau "Préférences système : Utilisateurs" (sur 10.2.x) ou "Préférences système : Comptes" (sur 10.3.x), tous les fichiers possédés par ces utilisateurs seront assignés à un utilisateur administrateur pris au hasard. Certaines personnes ont rapporté que cela pouvait causer des dégâts dans les permissions du compte administrateur. C'est un bogue des Préférences système, il a été soumis à Apple. Un moyen plus sûr de supprimer ces utilisateurs est de passer par Gestionnaire NetInfo ou d'utiliser l'outil en ligne de commande <code>niutil</code> dans une fenêtre de Terminal. Lisez la man page de <code>niutil</code> pour de plus amples informations au sujet de NetInfo.</li>
        </ul>
        <p>Fink vous <em>demande</em> la permission d'installer ces utilisateurs supplémentaires sur votre système lors de l'installation du paquet passwd package, vous ne devriez donc pas être trop surpris de les découvrir après coup.</p>
      </answer>
    </faqentry>
    <faqentry name="compile-myself">
      <question>
        <p>Comment compiler soi-même en utilisant des logiciels installés par Fink ?</p>
      </question>
      <answer>
        <!-- TODO: maybe change this to use LIBRARY_PATH / DYLD_LIBRARY_PATH ? -->
        <p>Quand on compile soi-même sans passer par Fink, il faut indiquer au compilateur et à l'éditeur de liens où trouver les librairies et les headers installés par Fink. Pour un paquet qui utilise un processus standard configure/make, vous devez définir quelques variables d'environnement :</p>
        <p>-tcsh-</p>
        <codeblock>setenv CFLAGS -I/sw/include 
setenv LDFLAGS -L/sw/lib 
setenv CXXFLAGS $CFLAGS 
setenv CPPFLAGS $CXXFLAGS 
setenv ACLOCAL_FLAGS "-I /sw/share/aclocal" 
setenv PKG_CONFIG_PATH "/sw/lib/pkgconfig"</codeblock>
        <p>-bash-</p>
        <codeblock>export CFLAGS=-I/sw/include 
export LDFLAGS=-L/sw/lib 
export CXXFLAGS=$CFLAGS 
export CPPFLAGS=$CXXFLAGS 
export ACLOCAL_FLAGS="-I /sw/share/aclocal" 
export PKG_CONFIG_PATH="/sw/lib/pkgconfig"</codeblock>
        <p>Il est souvent plus simple d'ajouter ces variables à vos fichiers de démarrage (par exemple, <filename>.cshrc</filename> ou <filename>.profile</filename>), de façon à ce qu'elles soient automatiquement définies. Si un paquet n'utilise pas ces variables, vous devrez peut-être ajouter "-I/sw/include" (pour les headers) et "-L/sw/lib" (pour les librairies) aux lignes de compilation. Certains paquets peuvent utiliser des variables non standards, telle EXTRA_CFLAGS, des options de configuration, telle  --with-qt-dir=. "./configure --help" vous donne, en général, la liste de ces options de configuration supplémentaires.</p>
        <p>De plus, vous devrez peut-être installer les headers de développement (par exemple <em>foo-1.0-1-dev</em>) des paquets librairies que vous utilisez, s'ils ne sont pas déjà installés.</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x11-applications-menu">
      <question>
        <p>Impossible d'exécuter une application installée par Fink en utilisant le menu Applications dans X11 d'Apple.</p>
      </question>
      <answer>
        <p>X11 d'Apple ne garde pas trace des variables d'environnement de Fink, ce qui signifie que le menu Applications n'a pas le PATH correct pour trouver les applications Fink. Vous pouvez résoudre ce problème en ajoutant devant le nom d'une application installée via Fink la commande suivante :</p>
        <codeblock>source /sw/bin/init.sh ;</codeblock>
        <p>Par exemple, si vous voulez lancer GIMP installé via Fink, saisissez :</p>
        <codeblock>source /sw/bin/init.sh ; gimp</codeblock>
        <p>dans le champ "Command" en regard de la ligne GIMP.</p>
        <p>Vous pouvez aussi modifier le fichier .xinitrc, situé dans votre répertoire utilisateur, et ajoutez la commande suivante :</p>
        <codeblock>source /sw/bin/init.sh</codeblock>
        <p>après la première ligne.</p>
      </answer>
    </faqentry>
    <faqentry name="x-options">
      <question>
        <p>Il y a de nombreuses options pour X11 : X11 d'Apple, XFree86, etc... Laquelle installer ?</p>
      </question>
      <answer>
          <p>Toutes ces options sont des variantes de XFree86 (elles sont toutes basées sur le code de XFree86), mais il y a de légères différences entre elles. Il existe des options différentes sous Panther et sous Jaguar.</p>
<p>Sous Panther, vous avez le choix entre :</p>
<ul>
    <li><p>X11 d'Apple (sur le disque numéro 3). N'oubliez pas d'installer X11 SDK (situé sur le disque XCode) si vous voulez compiler des programmes ou si vous avez l'intention d'installer d'autres paquets Fink reliés à X11 à partir des sources </p></li>
<li><p>4.4.x compilé via via Fink : installez les paquets <code>xfree86</code> et <code>xfree86-shlibs</code></p></li>
</ul>
        <p>Sous Jaguar, les choix les plus populaires et les paquets Fink qui leur correspondent sont les suivants :</p>
        <ul>
          <li>
            <p>4.2.x compilé via Fink : installez <code>xfree86-base</code> et <code>xfree86-rootless</code> ou <code>xfree86-base-threaded</code> et <code>xfree86-rootless-threaded</code> (et les paquets <code>-shlibs</code> correspondants)</p>
          </li>
          <li>
            <p>4.3.x compilé via Fink : installez les paquets <code>xfree86</code> et <code>xfree86-shlibs</code></p>
          </li>
          <li>
            <p>4.2.x d'Apple (en supposant que vous avez installé les paquets User et SDK) : le paquet <code>system-xfree86</code> est généré automatiquement, NE l'installez PAS. (Notez que la version bêta publique de X11 d'Apple pour Jaguar n'est plus disponible, aussi ce n'est une option que pour ceux d'entre vous qui l'avez déjà installé au temps où elle était encore disponible).</p>
          </li>
        </ul>
        <p>Il existe encore d'autres options. Vous trouverez tous les détails dans le <link url="http://fink.sourceforge.net/doc/x11/index.php">document Utilisation de X11</link>.</p>
      </answer>
    </faqentry>
    <faqentry name="no-display">
      <question>
        <p>Au lancement d'une application, le message suivant apparaît : "cannot
        open display:". Que faire ?</p>
      </question>
      <answer>
        <p>Cette erreur signifie que le système n'est pas connecté à l'affichage X. Assurez-vous que vous avez suivi les étapes suivantes :</p>
        <p>1. Démarrer X (X11 d'Apple, XFree86, ...).</p>
        <p>2. Vérifier que la variable d'environnement DISPLAY est définie correctement. Si vous utilisez les paramètres par défaut pour X, vous pouvez la définir de la façon suivante :</p>
        <codeblock>setenv DISPLAY :0</codeblock>
        <p>si vous utilisez <code>tcsh</code>, ou</p>
        <codeblock>export DISPLAY=:0</codeblock>
        <p>si vous utilisez <code>bash</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="suggest-package">
      <question>
        <p>Certains programmes ne sont pas disponibles via Fink. Comment faire en sorte qu'ils soient inclus dans Fink ?</p>
      </question>
      <answer>
        <p>Déposez une requête dans le <link url="http://sourceforge.net/tracker/?atid=371315&amp;group_id=17203">Package
        Request Tracker</link> sur la page du projet Fink.</p>
        <p>Notez que vous devez avoir un identifiant SourceForge pour ce faire.</p>
      </answer>
    </faqentry>

    <faqentry name="virtpackage">
      <question>
	<p>À quoi correspondent les &quot;paquets virtuels&quot; <code>system-*</code> qui apparaissent de-ci de-là, mais qu'il ne semble pas possible d'installer ou de supprimer soi-même ?</p>
      </question>
      <answer>
	<p>Les paquets tel <code>system-perl</code> sont des paquets fantômes. Ils ne contiennent aucun fichier, mais font partie d'un mécanisme qui permet à Fink de savoir quels programmes ont été installés en dehors de Fink.</p>
	<p>À partir de la distribution 10.3, la plupart de ces paquets fantômes ne sont même plus des paquets réels que vous pouvez installer et supprimer. Ce sont des "Paquets virtuels", structures de données de paquets générées par le programme fink au vu d'une liste préconfigurée de paquets installés manuellement. Pour chaque paquet virtuel, fink vérifie l'existence de certains fichiers à certains emplacements. S'ils les trouvent, il considère que le paquet virtuel correspondant est "installé".</p>
	<p>Vous pouvez exécuter le programme <code>fink-virtual-pkgs</code> (qui fait partie du paquet fink) pour obtenir la liste des choses que fink considère comme installées. En ajoutant l'option <code>--debug</code>, vous obtiendrez la liste des tests que fink effectue.</p>
	<p>Malheureusement, il n'existe pas de mécanisme qui permette à Fink de reconnaître un paquet arbitraire installé hors de fink, l'empêchant ainsi d'installer sa propre version dudit programme. C'est beaucoup trop difficile de tester les options de configuration et de compilation, les chemins, etc... dans le cas général.</p>
	<p>Voici les paquets virtuels les plus importants définis par fink (à partir de la version 0.19.2) :</p>
	<ul>
	  <li>system-perl : [paquet virtuel correspondant à perl]
	    <p>Représente <filename>/usr/bin/perl</filename>, qui fait partie de l'installation par défaut de OS X. Ce paquet fournit aussi <code>system-perlXXX</code> et <code>perlXXX-core</code> selon la version X.X.X de l'interpréteur perl.</p>
	  </li>
	  <li>system-javaXXX : [paquet virtuel correspondant à Java X.X.X]
	    <p>Représente l'environnement d'exécution de Java (JRE), qui fait partie de OS X (et des mises à jour d'Apple). Voir la <link url="http://www.apple.com/java">page Java d'Apple</link> pour de plus amples informations.</p>
	  </li>
	  <li>system-javaXXX-dev : [paquet virtuel correspondant aux headers de développement Java X.X.X]
	    <p>Représente le SDK (kit de développement) de Java, qui doit être téléchargé et installé à partir de <link url="http://connect.apple.com">connect.apple.com</link> (enregistrement gratuit obligatoire). Si vous avez mis à jour le JRE, il est possible que le SDK ne soit pas automatiquement mis à jour (ou même qu'il ait été supprimé). Vérifiez systématiquement le SDK après installation ou mise à jour du JRE,  et téléchargez-le et installez-le si nécessaire. Voir aussi <xref chapter="comp-general" section="system-java">cette QFP</xref>.</p>
	  </li>
	  <li>system-java3d : [paquet virtuel représentant Java3D]</li>
	  <li>system-javaai : [paquet virtuel représent Java Advanced Imaging]
	    <p>Représentent les extensions Java pour les graphiques 3D et le traitement d'images, qui peuvent être téléchargées et installées à partir du site d'Apple. Voir cette <link url="http://docs.info.apple.com/article.html?artnum=120289">page web d'Apple</link> pour de plus amples informations.</p>
	  </li>
	  <li>system-xfree86 : [paquet fantôme pour un paquet x11 installé manuellement]</li>
	  <li>system-xfree86-shlibs : [paquet fantôme pour les librairies partagées x11 installées manuellement]
	    <p>Représentent X11/XDarwin d'Apple, partie optionnelle de OS X (X11User.pkg). Ces paquets fournissent respectivement <code>x11</code> et <code>x11-shlibs</code>. Voir aussi <xref chapter="comp-packages" section="cant-install-xfree">cette QFP</xref>.</p>
	  </li>
	  <li>system-xfree86-dev : [paquet fantôme pour les outils de développement x11 installés manuellement]
	    <p>Représente X11/XDarwin SDK d'Apple, partie optionnelle de OS X (X11SDK.pkg). Ce paquet fournit <code>x11-dev</code>. Voir aussi <xref chapter="comp-packages" section="cant-install-xfree">cette QFP</xref>.
	    </p>
	  </li>
	</ul>
      </answer>
    </faqentry>

  </chapter>
  <chapter filename="usage-packages">
    <title>Problèmes d'utilisation spécifiques à certains paquets</title>
    <shorttitle>Utilisation (2)</shorttitle>
    <faqentry name="xmms-quiet">
      <question>
        <p>Aucun son n'est disponible avec XMMS</p>
      </question>
      <answer>
        <p>Vérifiez que vous avez sélectionné "eSound Output Plugin" dans les préférences de XMMS. Pour d'obscures raisons, c'est le plugin d'écriture sur le disque qui est sélectionné par défaut.</p>
        <p>Si cela ne résout pas le problème ou si XMMS se plaint qu'il ne peut trouver votre carte son, essayez ceci :</p>
        <ul>
          <li>Vérifiez que la sortie son n'est pas réglée sur silence dans Mac OS X.</li>
          <li>Lancez <code>esdcat /usr/libexec/config.guess</code> (ou choisissez n'importe quel autre fichier de taille significative). Si vous entendez un petit bruit, cela signifie que eSound fonctionne et que XMMS devrait fonctionner, lui aussi, à condition d'être configuré correctement. Si vous n'entendez rien, esd ne fonctionne pas pour une raison indéterminée. Vous pouvez tenter de le lancer manuellement via <code>esd &amp;</code>, puis analysez les messages.</li>
          <li>S'il ne fonctionne toujours pas, vérifiez les permissions de <code>/tmp/.esd</code> et <code>/tmp/.esd/socket</code>. Le possesseur doit être votre compte utilisateur. Si ce n'est pas le cas, tuez esd s'il est en cours de fonctionnement, supprimez le répertoire en tant que super-utilisateur (<code>sudo rm -rf /tmp/.esd</code>), puis redémarrez esd (en tant qu'utilisateur lambda, pas en tant que super-utilisateur).</li>
        </ul>
        <p>Notez que esd est conçu pour être lancé par un utilisateur lambda, pas par le super-utilisateur. Il communique, en général, via la socket système <code>/tmp/.esd/socket</code>. Vous n'avez besoin des options <code>-tcp</code> et <code>-port</code> que si vous voulez lancer des clients esd sur une autre machine du réseau.</p>
        <p>Certains personnes ont signalé que XMMS se plantait ou se bloquait sur 10.1. Il n'y a pas eu d'analyse ou de solution à ce phénomène à ce jour.</p>
      </answer>
    </faqentry>
    <faqentry name="nedit-window-locks">
      <question>
        <p>Lors de la modification d'un fichier dans nedit, si l'on tente d'ouvrir un autre fichier, sa fenêtre apparaît mais elle ne répond pas.</p>
      </question>
      <answer>
        <p>C'est un problème connu qui se produit avec des versions récentes de <filename>nedit</filename> et <filename>lesstif</filename> sur toutes les plates-formes. La solution est d'ouvrir une nouvelle fenêtre avec File--&gt;New, puis d'ouvrir le nouveau fichier sur lequel vous voulez travailler.</p>
        <p>Ce problème est résolu dans la version <filename>nedit-5.3-6</filename>, qui dépend d'<filename>openmotif3</filename> et non plus de <filename>lesstif</filename>.</p>
      </answer>
    </faqentry>
    <faqentry name="xdarwin-start">
      <question>
        <p>XDarwin quitte immédiatement après lancement.</p>
      </question>
      <answer>
        <p>Pas de panique. Vous trouverez dans le document Utilisation de X11 une large section <link url="http://fink.sourceforge.net/doc/x11/trouble.php#immediate-quit">résolution de problèmes</link> à ce sujet.</p>
      </answer>
    </faqentry>
    <faqentry name="no-server">
      <question>
        <p>Au démarrage de XDarwin, le message suivant apparaît : "xinit: No such file or directory (errno 2): no server "/usr/X11R6/bin/X" in PATH".</p>
      </question>
      <answer>
        <p>Tout d'abord, vérifiez que vous sourcez init.sh dans le fichier de démarrage de X <code>~/.xinitrc</code>.</p>
        <p>Sous Jaguar, il arrive parfois que tous les paquets <code>xfree86</code> soient compilés, mais que seuls les paquets <code>xfree86-base</code> et <code>xfree86-base-shlibs</code> soient installés. Vérifiez que les paquets <code>xfree86-rootless</code> et <code>xfree86-rootless-shlibs</code> sont installés. Si ce n'est pas le cas, lancez <code>fink install xfree86-rootless</code>. Cela devrait résoudre le problème.</p>
        <p>Si ces paquets sont installés, essayez <code>fink rebuild xfree86-rootless</code>. Si cela ne marche pas, vérifiez que <code>/usr/bin/X11R6</code> est dans votre PATH.</p>
      </answer>
    </faqentry>
    <!--
<faqentry name="xfree-keymapping" >
#<question>
<p>I just upgraded to MacOS X 10.1 and now XFree86 always quits immediately. In the messages it says &quot;assert failed on line 454 of darwinKeyboard.c!&quot;. What's wrong?</p>
</question>
<answer>
	<p>This is a known problem on 10.1. You must use the &quot;Load from file&quot; keymapping option since the default option (loading it from the kernel) doesn't work anymore. The setting is in the XDarwin Preferences dialog. Be sure that a file is selected (e.g. USA.keymapping) - simply activating the check box may not be sufficient with some versions. If you can't get to the Preferences dialog because you disabled all splash screens, you can delete <code>~/Library/Preferences/org.xfree86.XDarwin.plist</code> to get it back, then start XDarwin and go to the Preferences dialog while the splash screen is displayed. Alternatively, you can edit that file manually in a text editor to enable the keymapping option (the UseKeymappingFile and KeymappingFile bits). </p>
<p>As a last resort, you can run <code>startx -x- -quartz -keymap
USA.keymapping</code> from Terminal.app.
If this still doesn't work, you have another problem in addition to
the keymapping problem that prevents XDarwin from starting.
You'll get a bunch of diagnostic messages in Terminal.app to help you
sort this out.
</p>
</answer>
</faqentry>
-->
    <faqentry name="xterm-error">
      <question>
        <p>Le lancement de xterm échoue avec le message suivant : "dyld: xterm Undefined symbols: xterm undefined reference to _tgetent expected to be defined in /usr/lib/libSystem.B.dylib".</p>
      </question>
      <answer>
        <p>Cela se produit lorsque l'on utilise une version 10.1 de XFree86 sur 10.2. Vous devez passer à une version 10.2.</p>
        <p>Si vous utilisez les paquets Fink <code>xfree86</code>, vous pouvez passer à une version plus récente de la façon habituelle ("<code>fink selfupdate-cvs ; fink update-all</code>" pour une installation à partir du source,  <code>fink selfupdate ; ; sudo apt-get update; sudo apt-get dist-upgrade</code>" pour une installation à partir des binaires.</p>
        <p>Si vous avez installé XFree86 par d'autres moyens, vous trouverez les rustines qui vous permettront de faire la mise à jour sur le <link url="http://mrcla.com/XonX">site web de XonX</link>.</p>
      </answer>
    </faqentry>
    <faqentry name="libXmuu">
      <question>
        <p>Au démarrage de XFree86, l'un des messages d'erreur suivants apparaît : "dyld: xinit can't open library: /usr/X11R6/lib/libXmuu.1.dylib" ou "dyld: xinit can't open library: /usr/X11R6/lib/libXext.6.dylib"</p>
      </question>
      <answer>
        <p>Un fichier censé être installé par <code>xfree86-base-(threaded)-shlibs</code> manque. Vous devez l'installer via <code>fink reinstall xfree86-base-shlibs</code> (<code>fink reinstall xfree86-base-threaded-shlibs</code> si vous utilisez les paquets XFree86 avec gestion des processus légers) pour les utilisateurs des sources, ou <code>sudo apt-get install --reinstall xfree86-base-shlibs</code> pour les utilisateurs de binaires.</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x-bugs">
      <question>
        <p>Après installation de XFree86 et son remplacement par X11 d'Apple, tous les programmes se plantent.</p>
      </question>
      <answer>
        <p>Premièrement, si vous aviez installé précédemment les versions "avec processus légers" (threaded) des paquets Fink XFree86, vous devez recompiler l'application qui se plante. Certains programmes vérifie la disponibilité des processus légers lors de la compilation et à partir de là supputent que les processus légers sont toujours disponibles.</p>
        <p>Deuxièmement, il se peut que vous soyez tombé sur un bogue d'Apple X11. Au moment où cette page a été écrite, un certain nombre de bogues étaient connus d'Apple et en en cours de résolution.</p>
        <p>Si vous vous posez des questions sur X11 d'Apple qui ne sont pas liées à Fink, voyez la <link url="http://www.lists.apple.com/x11-users">liste de discussion officielle d'Apple sur X11</link>. Il est aussi conseillé de soumettre les bogues découverts dans X11 via le <link url="http://developer.apple.com/bugreporter">moteur de rapport de bogues</link> d'Apple.</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x-delete">
      <question>
        <p>Comment avoir sous X11 d'Apple le même comportement de la touche suppr que sous XDarwin ?</p>
      </question>
      <answer>
        <p>Certains utilisateurs ont signalé que la touche <code>suppr</code> se comporte différemment sous XDarwin et sous X11 d'Apple. On peut rectifier cela en ajoutant les lignes suivantes au fichier de démarrage approprié de X :</p>
        <p>
          <em>.Xmodmap :</em>
        </p>
        <codeblock>keycode 59 = Delete</codeblock>
        <p>
          <em>.Xresources :</em>
        </p>
        <codeblock>xterm*.deleteIsDEL: true 
xterm*.backarrowKey: false
xterm*.ttyModes: erase ^?</codeblock>
        <p>
          <em>.xinitrc :</em>
        </p>
        <codeblock>xrdb -load $HOME/.Xresources 
xmodmap $HOME/.Xmodmap</codeblock>
        <p></p>
      </answer>
    </faqentry>
    <faqentry name="gnome-two">
      <question>
        <p>Après passage de GNOME 1.x à GNOME 2.x, <code>gnome-session</code> n'ouvre plus de gestionnaire de fenêtres.</p>
      </question>
      <answer>
        <p>Alors que, sous GNOME 1.x, <code>gnome-session</code> invoque automatiquement le gestionnaire de fenêtres <code>sawfish</code>, sous GNOME 2.x, vous devez vous-même appeler un gestionnaire de fenêtres dans le fichier <code>~/.xinitrc</code> avant de lancer <code>gnome-session</code>, par exemple :</p>
        <codeblock>... 
exec metacity &amp; exec gnome-session</codeblock>
        <p>Note : ceci n'est plus vrai pour <em>GNOME 2.4</em>. Le lancement de <filename>gnome-session</filename> invoque un gestionnaire de fenêtres.</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x11-no-windowbar">
      <question>
        <p>Après passage à X11 d'Apple sous Panther, les barres de titre de fenêtre n'apparaissent plus.</p>
      </question>
      <answer>
        <p>Vous n'êtes pas passé à la version "X11 1.0 - XFree86 4.3.0" incluse dans Panther. Vous devez installer X11 à partir de X11.pkg qui est situé sur le disque 3.</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x11-wants-xfree86">
      <question>
        <p>Après installation de X11 d'Apple, Fink continue à vouloir installer xfree86.</p>
      </question>
      <answer>
        <p>Il faut envisager deux hypothèses :</p>
        <ul>
          <li>
            <em>Vous faites une installation à partir des binaires :</em>
            <p>Si vous utilisez une version du paquet <code>fink</code> antérieure à la version 0.17.0, il suffit, en général, de mettre à jour <code>fink</code>, par exemple via :</p>
            <codeblock>sudo apt-get update
sudo apt-get install fink</codeblock>
<p>Si cela ne suffit pas à résoudre le problème ou si vous utilisez une version postérieure de fink, vous devez réinstaller le paquet X11User, car il arrive parfois que l'installation ne soit pas complète.</p>
<p>Exécutez ensuite :</p>
<codeblock>fink list  -i system-xfree86</codeblock>
<p>pour vérifier que les paquets <code>system-xfree86</code> et <code>system-xfree86-shlibs</code> sont bien installés.</p>
<p>Si la réinstallation de X11User ne suffit pas à résoudre le problème, consultez les instructions <xref section="special-x11-debug">débogage spécial</xref> ci-dessous.</p>
</li>
          <li>
            <em>Vous faites une installation à partir du source :</em>
            <p>Si vous utilisez une version de <filename>fink</filename> antérieure à la version 0.17, vous devez mettre à jour <code>fink</code>, par exemple :</p>
            <codeblock>fink selfupdate</codeblock> 
            (en supposant que vous faites la mise à jour via CVS ou via rsync et que vous n'utilisez pas les mises à jour ponctuelles).
            <p>Quand vous aurez une version à jour de <code>fink</code>, exécutez :</p>
            <codeblock>fink list -i system-xfree86</codeblock> pour vérifier que les paquets <code>system-xfree86</code>, <code>system-xfree86-shlibs</code> et <code>system-xfree86-dev</code>sont bien installés. Si l'un des deux premiers est manquant, vous devez réinstaller le paquet X11User. Si le paquet <code>-dev</code> est manquant, vous devez l'installer ou le réinstaller. Il est situé sur le CD Xcode et <em>n'est pas</em> installé par défaut. Même si vous avez installé XCode, le X11SDK <em>n'est pas</em> installé par défaut. Il doit être installé soit en utilisant une installation personnalisée de Xcode, soit en cliquant sur le pkg <code>X11SDK</code> situé dans le répertoire <code>Packages</code>.
            <p><em>Note pour les utilisateurs de Jaguar (X11 bêta 3)</em> : Vous ne pouvez pas utiliser XCode, vous devez donc avoir déjà téléchargé le paquet X11SDK correspondant à votre système. Comme la date limite d'utilisation de X11 bêta 3 est dépassée, vous ne pouvez plus télécharger le paquet X11SDK ni le paquet X11User correspondant. Vous devez vous en tenir à l'installation de paquets binaires X11, ou bien installer XFree86, ou encore passer à Panther.</p>
            <p>Si ceci ne résout pas le problème, consultez les instructions <xref section="special-x11-debug">débogage spécial</xref> ci-dessous.</p>
            </li>
        </ul>
        </answer>
        </faqentry>
     <faqentry name="wants-xfree86-on-upgrade">
      <question>
        <p>Après passage de la version 10.2 de Fink à la version 10.2-gcc3.3 ou 10.3, Fink veut installer XFree86 alors que X11 d'Apple est déjà installé.</p>
      </question>
      <answer>
        <p>Il se peut que vous deviez supprimer un des paquets fantômes antérieurs : <filename>system-xfree86</filename>, <filename>system-xfree86-42</filename> ou <filename>system-xfree86-43</filename>. Fink sait maintenant reconnaître si vous avez une version de X11 installée manuellement, par exemple celle d'Apple, et génère des paquets virtuels. Comme d'autres paquets dépendent de <filename>system-xfree86</filename>, vous devez utiliser la commande :</p>
        <codeblock>sudo dpkg -r --force-all system-xfree86 system-xfree86-42 system-xfree86-43</codeblock>
        <p>pour supprimer les versions obsolètes. Vous pouvez vérifier votre installation en lançant :</p>
        <codeblock>fink list -i system-xfree86</codeblock>
        <p>et vous assurer que les paquets <code>system-xfree86</code> et <code>system-xfree86-shlibs</code>sont présents. Si vous avez installé le X11SDK, vous devez aussi avoir le paquet <code>system-xfree86-dev</code>.</p>
        <p>Si le problème persiste, voir plus haut <xref section="apple-x11-wants-xfree86">Fink continue à vouloir installer XFree86</xref>.</p>
      </answer>
    </faqentry>
       <faqentry name="special-x11-debug">
      <question>
        <p>Problèmes persistents entre X11 et Fink</p>
      </question>
      <answer>     
        <p>Si les solutions données aux sections <xref section="apples-x11-wants-xfree86">Fink continue à vouloir installer XFree86</xref> or <xref section="wants-xfree86-on-upgrade">Fink veut installer XFree86</xref> ne résolvent pas votre problème, ou ne sont pas applicables à votre cas, vous devrez supprimer entièrement X11 et tous les paquets fantômes antérieurs ainsi que les paquets relatifs à X11, qu'ils soient installés partiellement ou non  :</p>
       <codeblock>sudo dpkg -r --force-all system-xfree86 system-xfree86-42 system-xfree86-43 \
xfree86 xfree86-shlibs \
xfree86-base xfree86-base-shlibs xfree86-rootless xfree86-rootless-shlibs \
xfree86-base-threaded xfree86-base-threaded-shlibs \
xfree86-rootless-threaded xfree86-rootless-threaded-shlibs
rm -rf /Library/Receipts/X11SDK.pkg /Library/Receipts/X11User.pkg
fink selfupdate; fink index</codeblock>
<p>(Vous verrez peut-être apparaître un message généré par la première ligne vous indiquant que vous tentez de supprimer des paquets qui ne sont pas installés). Réinstallez ensuie X11 d'Apple (et le X11SDK, si besoin est) ou XFree86.</p>
<p>Si le problème persiste et que vous utilisez <code>fink-0.19.0</code> ou une version postérieure, vous pouvez lancer :</p>
        <codeblock>fink-virtual-pkgs --debug</codeblock>
        <p>pour savoir quels sont les paquets manquants.</p>
        <p>Si vous utilisez une version antérieure de <code>fink</code>, vous pouvez télécharger et lancer un script Perl, écrit par Martin Costabel, qui fournit les mêmes informations.</p>
        <ul>
          <li>Vous le trouverez ici : <link url="http://perso.wanadoo.fr/costabel/fink-x11-debug">http://perso.wanadoo.fr/costabel/fink-x11-debug</link>
          </li>
          <li>Sauvegardez-le où vous voulez.</li>
          <li>Lancez-le dans une fenêtre de terminal ainsi :
          <codeblock>perl fink-x11-debug</codeblock>
          </li>
        </ul>
      </answer>
    </faqentry>
  </chapter>
</document>

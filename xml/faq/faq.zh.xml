<?xml version = '1.0' encoding = 'utf-8'?>
<!DOCTYPE document SYSTEM "../finkfaq.dtd">
<document lang="zh" filename="index" >
  <title>Fink 常见疑问（F.A.Q.）</title>
  <shorttitle>常见疑问（F.A.Q.）</shorttitle>
  <cvsid>$Id: faq.zh.xml,v 1.3 2004/03/07 01:55:45 jeff_yecn Exp $</cvsid>
  <preface>
    <p>这是一个关于 Fink 经常被问到的问题的清单。和多数的 FAQs 一样，其中一些问题来自于实际的问题，而另外一些则是假设存在的。它更接近于一份专门以问答形式编写的文档。</p>
    <p>本 FAQ 由几页组成，每部分一页。所有的问题都会在下面的目录中列出并链接到合适的位置。</p>
  </preface>
  <chapter filename="general" >
    <title>一般性问题</title>
    <shorttitle>一般性问题</shorttitle>
    <faqentry name="what" >
      <question>
        <p>什么是 Fink？</p>
      </question>
      <answer>
        <p>
Fink 希望把越来越多的 Unix 软件带到 Mac OS X，因此它的两个主要目标是：
</p>
        <p>
第一目标是移植软件到 Mac OS X 上。
我们寻找现成的开放源代码的 Unix 软件，并对它做必要的修正以使得它可以在 Mac OS X 上编译和运行。有些时候这很容易，但对一些软件包，也可能很难甚至不可能。
我们试图通过提供一些工具和文档来使它更容易些。
</p>
        <p>
第二目标是使我们的成果能够被普通用户所使用。
为了实现这个目标，我们建立了一个的软件包管理工具。它移植自 Linux 上两个主要的程序 <code>dpkg</code> 和　<code>apt-get</code>，它们原来是为<link url="http://www.debian.org/" >Debian GNU/Linux</link> 项目编写的。
我们的软件包的二进制发行版使用 <code>.deb</code> 软件包格式。
对于从源代码构建软件包，我们使用我们自己的工具，称为 <code>fink</code>，它可以生成 <code>.deb</code> 软件包文件。
</p>
      </answer>
    </faqentry>
    <faqentry name="naming" >
      <question>
        <p>Fink 是什么意思？</p>
      </question>
      <answer>
        <p>没有什么特别含义，只是一个名字而已。它也不是什么缩写。</p>
        <p>事实上，Fink 在德语中是雀类（属于鸟类）的意思。当我在给这个项目起名的时候，操作系统的名称 Darwin，使我联想到查尔斯·达尔文，Galapagos 群岛和进化论。然后我想起了学校时学过的关于达尔文雀的东西，以及它们尖尖的嘴...</p>
      </answer>
    </faqentry>
    <faqentry name="bsd-ports" >
      <question>
        <p>Fink 和 BSD port 机制有什么区别（它被包括在 OpenPackages 和 GNU-Darwin 中）？</p>
      </question>
      <answer>
        <p>一些主要优点：</p>
        <ul>
          <li>
            <p>
它用 Perl 编写，而不是 make/shell。
这样它并不依赖于 BSD make 的某个特定功能。
这样不需要表明软件包必须使用 GNU make 来构建。
</p>
          </li>
          <li>
            <p>
dpkg 提供完善的二进制包管理机制－平滑升级，对配置文件的特别处理，虚拟软件包，以及其它高级依赖关系设置。
</p>
          </li>
          <li>
            <p>
除非特别指明，Fink 不会安装到 /usr/local。也不需要对 /usr/bin/make 或其它系统本身的命令进行修正。
这使得它的使用会更安全，并最大限度降低与 Mac OS X 和第三方软件包可能造成的冲突。
</p>
          </li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="usr-local" >
      <question>
        <p>为什么 Fink 不安装在 /usr/local？</p>
      </question>
      <answer>
        <p>有几个原因，总括来说是 &quot;可能会被损坏&quot;。</p>
        <p>原因一：第三方软件。/usr/local 是存放不是由系统提供的第三方软件的地方。这意味着这是一个放杂七杂八东西的好地方。同时，这也意味着其它人也会放杂七杂八的东西到那里。多数的安装流程只是简单地覆盖那里的东西——对 dpkg 也是这样。当然，用户可以选择不安装第三方软件到 /usr/local。不幸的是，多数的安装程序并不事先告诉你它会安装到哪里。</p>
        <p>原因二：/usr/local/bin 在默认的 PATH 设置中。这意味着你的 shell 程序不需要什么其它设置就可以找到你安装的程序。但这意味着如果你不想使用这个程序，你需要进行额外的设置。极端情况下，它会影响系统本身——由需要部分依赖于 shell 脚本。</p>
        <p>原因三：编译工具默认搜索 /usr/local 目录。编译器会在 /usr/local/include 寻找头文件，连接器会在 /usr/local/lib 寻找连接库。同样，有些时候这会显得方便些，但在有需要的时候会很难禁用这个特性。通过把一个错误的 <code>stdio.h</code> 文件放到 /usr/local/include 目录中，你就很容易使得编译器出错。</p>
        <p>总的来说，把 Fink 安装到 /usr/local 是可能的。安装程序会明确警告你，但如果你确认你同意这样做的风险，它会按你的要求去做。</p>
      </answer>
    </faqentry>
    <faqentry name="why-sw" >
      <question>
        <p>为什么选择 /sw？</p>
      </question>
      <answer>
        <p>这个选择基本上是很随意的，但是基于实践（升级）的理由以及它在避免于其它软件包系统冲突方面是足够安全的，在可以遇见的将来仍然会保持这样。</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="relations" >
    <title>与其它项目的关系</title>
    <shorttitle>关系</shorttitle>
    <faqentry name="upstream" >
      <question>
        <p>你是否会把你的补丁反馈给上游维护者？</p>
      </question>
      <answer>
        <p>
我们正在尝试这么做。
有些时候反馈补丁是很容易的，在下一个版本出来以后会皆大欢喜。
不幸的是对于多数软件包并不那么容易。
一些常见的原因：
</p>
        <ul>
          <li>Fink 软件包的维护者很忙，没有时间将补丁发回给上游的维护者并附上需要修改的解释。</li>
          <li>上游维护者拒绝接受补丁。这样做有很多正常的理由。多数的上游维护者都强烈希望保持代码，配置检测的整洁，以及与其它平台的兼容。</li>
          <li>上游维护者接受了补丁，但需要数周或数月才会发布新的版本。</li>
          <li>软件包已经被原始作者所放弃，因此不会有新的融合了补丁的版本发布。</li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="debian" >
      <question>
        <p>你们和 Debian 项目的关系是什么？你们在把 Debian Linux 移植到 Mac OS X 上吗？</p>
      </question>
      <answer>
        <p>
Fink 和
<link url="http://www.debian.org" >Debian</link> 之间没有正式的关系。
Fink <em>不是</em> Debian GNU/Linux 发布版的一个移植。
我们的确移植了 Debian 的软件包管理工具（dpkg，dselect，apt-get），并使用这些工具以及 .deb 二进制包的格式。
实际的软件包是针对 Mac OS X / Darwin 进行了修正，并不使用 Debian 原始的包格式。
</p>
      </answer>
    </faqentry>
    <faqentry name="apple" >
      <question>
        <p>你们和苹果公司的关系是什么？</p>
      </question>
      <answer>
        <p>
          <link url="http://www.apple.com/" >苹果公司</link>了解 Fink 的存在并作为他们开放源码支持的一部分给予过我们一些帮助。
在 2001 年夏秋两季，他们给我们提供了新的 Mac OS X 的预发布版本以希望 Fink 软件包可以在它发布的时候能与它相配合。
引文：
<em>&quot;希望这会明确消除对于我们不愿意提供（帮助）的怀疑。我们将在开放源代码的游戏中逐步做得更好。&quot;</em>
感谢你，苹果公司！
</p>
      </answer>
    </faqentry>
    <faqentry name="openosx" >
      <question>
        <p>你们和 OpenOSX.com 的关系是什么？</p>
      </question>
      <answer>
        <p>
他们使用 Fink 来建立了他们的 GIMP CD 的第一个发布版本，却拒绝以合适的方式来明确这一点。
请阅读<link url="http://fink.sourceforge.net/pr/openosx.php" >《公开声明》</link>来了解细节信息。
</p>
      </answer>
    </faqentry>
    <faqentry name="forked" >
      <question>
        <p>你们和 macosx.forked.net 的关系是什么？</p>
      </question>
      <answer>
        <p>
这个网站把一些 Fink 软件包做成 Installer.app 安装包重新发布，没有改动但附上没有提到 Fink 的模版文件。
请阅读 <link url="http://fink.sourceforge.net/pr/forked.php" >《公开声明》</link>来了解细节信息。
</p>
      </answer>
    </faqentry>
    <faqentry name="darwinports" >
      <question>
        <p>你们和 Darwinports 的关系是什么？</p>
      </question>
      <answer>
        <p>
			Darwinports 和 Fink 是互补性的项目。在两个项目中有一些重叠的地方，也有些人同时对 Fink 和 OpenDarwin 做出贡献。例如，Benjamin Reed 同时为两个项目做 KDE 软件包。Darwinports/OpenDarwin 利用 Fink 的补丁，我们也曾经讨论过合作建立一个新的依赖关系引擎。
		</p>
        <p>
			OpenDarwin 尝试用一种不同的方法来重头建立软件包系统。请阅读 <link url="http://www.opendarwin.org/projects/darwinports/en/faq.php" >OpenDarwin.org</link> 上的声明来获取详细信息。
		</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="mirrors" >
    <title>Fink 镜像</title>
    <shorttitle>Mirrors</shorttitle>
    <faqentry name="when-use" >
      <question>
        <p>什么是 Fink 镜像？</p>
      </question>
      <answer>
        <p>
	Fink 镜像是一些 rsync 服务器，它镜像保存 Fink 的当前和稳定版本的描述文件。Fink 需要使用这些描述文件来从源代码构建软件包。
       </p>
      </answer>
    </faqentry>
    <faqentry name="why" >
      <question>
        <p>为什么我需要使用 rsync 镜像服务器？</p>
      </question>
      <answer>
        <p>Rsync 是一种很快速的协议。它可以用比过去的 CVS 更新方法更快的速度来更新描述文件。另外，CVS 总是通过 sourceforge.net 进行更新，而 rsync 则可以选择离你比较近的镜像服务器进行更新。</p>
      </answer>
    </faqentry>
    <faqentry name="where" >
      <question>
        <p>在哪里我可以找到关于 Fink 镜像的更多信息？</p>
      </question>
      <answer>
        <p>所有的 Fink 镜像都建立在 finkmirrors.net 域名之下。http://finkmirrors.net/ 这个网站会提供更多的信息。
</p>
      </answer>
    </faqentry>
    <faqentry name="when-not" >
      <question>
        <p>我不能连接 rsync 服务器，我应该怎么办？</p>
      </question>
      <answer>
        <p>有些时候，一些很严格的防火墙规则会进制你访问 rsync 服务。如果是这样的话，简单的办法是使用 CVS 方式。
</p>
      </answer>
    </faqentry>
    <faqentry name="otherinfogone" >
      <question>
        <p>我现在已经改换到 rsync 方法，但所有没有用到的代码树都消失了？</p>
      </question>
      <answer>
        <p>这时正常现象。rsync 只会更新活跃的代码树，比方说，10.3。同时它也会删除 CVS
子目录。
</p>
      </answer>
    </faqentry>
    <faqentry name="howswitch" >
      <question>
        <p>我怎么在这两种方法中切换？</p>
      </question>
      <answer>
        <p>使用 fink selfupdate-rsync 或 fink selfupdate-cvs 来切换到 rsync 或 CVS。</p>
      </answer>
    </faqentry>
    <faqentry name="status" >
      <question>
        <p>我可以看到 rsync 镜像的当前状态吗？</p>
      </question>
      <answer>
        <p>可以，访问 http://finkmirrors.net/status.html。</p>
      </answer>
    </faqentry>
    <faqentry name="Master" >
      <question>
        <p>什么是 Distfiles 镜像？</p>
      </question>
      <answer>
        <p>有些时候从互联网上获取某个版本的源代码会比较困难。Distfile 镜像会保存这些 Fink 需要使用的源代码软件包。</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="upgrade-fink" >
    <title>升级 Fink （解决特定版本的问题）</title>
    <shorttitle>升级 Fink</shorttitle>
    <faqentry name="gcc-0.16.0" >
      <question>
        <p>我升级到了 0.16.0，它告诉我说 &quot;Your version of the
gcc 3.3 compiler is out of date.&quot; 我应该怎么办？</p>
      </question>
      <answer>
        <p>在 Panther 发布后，Fink 也升级以认识新的 gcc 3.3 编译器。为了同时支持 10.2 (Jaguar) 和 10.3 (Panther) 的用户，我们要求所有用户都安装最新的 gcc 3.3 更新 （August 2003 更新，或者相应的 Panther XCode 工具）。如果你在 Mac OS X 10.2 的 December 2002 developer tools 上安装 XCode beta 更新你就会获得这个警告信息。如果你使用 10.2，命令：
</p>
        <codeblock>gcc --version</codeblock>
        <p>...会告诉你正在使用的版本。对于 October 24th,2003，我们要求 build 1493 或更高。</p>
        <p>10.2 用户可以从 <link url="http://developer.apple.com/" >Apple Developer Connection</link> 下载（需要先免费注册） August 2003 升级。</p>
        <p>10.3 用户应该升级到 Panther 兼容的开发工具（也就是说  XCode）。你应该能够在你的 Panther 软件包中找到 XCode 的 CD。</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="usage-fink" >
    <title>安装，使用和维护 Fink</title>
    <shorttitle>Fink 的使用</shorttitle>
    <faqentry name="what-packages" >
      <question>
        <p>我怎么知道 Fink 支持那些软件包？</p>
      </question>
      <answer>
        <p>
从 Fink 0.2.3 开始，增加了 <code>list</code> 命令。
它产生可用 Fink 安装的软件包清单。
例如：
</p>
        <codeblock>fink list</codeblock>
        <p>
如果你使用二进制安装包方式，<code>dselect</code> 可以提供给你一个很好的可用软件包清单。
注意，如果你需要从 dselect 中选择和安装软件包，你需要以 root 权限运行它。
</p>
        <p>
另外，在网站上也有一个<link url="http://fink.sourceforge.net/pdb/" >软件包数据库</link>。
</p>
      </answer>
    </faqentry>
    <faqentry name="proxy" >
      <question>
        <p>我在防火墙后面，我怎么配置 Fink 使用 HTTP 代理？</p>
      </question>
      <answer>
        <p><code>fink</code> 命令可以设定代理服务器，并把它传递给 <code>wget</code>/<code>curl</code>。
如果在首次安装的时候没有向你询问代理服务器设置，你可以运行 <code>fink configure</code> 来进行设置。
你可以随时运行这个命令来重新配置 <code>fink</code> 命令。
如果你按照安装指南进行安装，并使用 <filename>/sw/bin/init.csh</filename>（或 <filename>/sw/bin/init.sh</filename>），那么 <code>apt-get</code> 和 <code>dselect</code> 也可以使用这些设置。请确认你已经把协议名放在代理服务器域名之前，例如：</p>
        <codeblock>ftp://proxy.yoursite.somewhere</codeblock>
        <p>如果你仍然碰到问题，那么打开系统预置，选择网络设置面板，确认 &quot;使用被动 FTP 模式 (PASV)&quot; 选项已被选中。</p>
      </answer>
    </faqentry>
    <faqentry name="firewalled-cvs" >
      <question>
        <p>我在防火墙后面，我怎么用 CVS 方式升级已安装的软件包？</p>
      </question>
      <answer>
        <p><em>cvs-proxy</em> 这个软件包可以通过 HTTP 代理穿透防火墙。</p>
        <ul>
          <li>
            <p>首先下载 <link url="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/fink/dists/10.2/unstable/main/finkinfo/devel/" >cvs-proxy</link> 文件（一个 .info 文件和一个 .patch 文件）并把它放到你的本地代码树中（即 /sw/fink/dists/local/main/finkinfo/）。</p>
          </li>
          <li>
            <p>使用下面命令安装 <em>cvs-proxy</em> 软件包：</p>
            <p>
              <code>fink install <em>cvs-proxy</em>
              </code>
            </p>
          </li>
          <li>
            <p>然后用下面命令更新软件包：</p>
            <p>
              <code>fink selfupdate-cvs</code>
            </p>
            <p>
              <code>fink update-all</code>
            </p>
          </li>
        </ul>
        <p>如果 fink 没有被配置为使用你的代理，用下面的方法更改配置：</p>
        <p>
          <code>fink configure</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="moving" >
      <question>
        <p>我可以在安装后把 fink 移动到其它位置吗？</p>
      </question>
      <answer>
        <p>
不行。
当然，你可以用 mv 命令或 Finder 来移动它们，但如果你这样做的话， 99%　的程序将不能工作。
这是引文基本上所有 Unix 软件都是使用固定编码在程序中的路径名来寻找数据文件，库或其它东西的》</p>
      </answer>
    </faqentry>
    <faqentry name="moving-symlink" >
      <question>
        <p>如果我安装 Fink 以后把它移动到其它地方，但在原来的地方提供一个符号连接，可以吗？</p>
      </question>
      <answer>
        <p>
也许。
通常的猜测这应该可行，但也许会有些陷阱在某些地方。
</p>
      </answer>
    </faqentry>
    <faqentry name="removing" >
      <question>
        <p>我怎么彻底反安装 Fink？</p>
      </question>
      <answer>
        <p>
Fink 的所有文件几乎都安装在 /sw （或你选择安装的地方）。因此，如果你想删除 Fink，输入下面的命令：
</p>
        <codeblock>sudo rm -rf /sw</codeblock>
        <p>
这个规则的唯一例外是 XFree86。如果你通过 Fink 安装（也就是说，你安装了 <code>xfree86</code> 或 
<code>xfree86-rootless</code> 软件包，
而不是使用 <code>system-xfree86</code>）并希望删除它，你需要再输入：
</p>
        <codeblock>sudo rm -rf /usr/X11R6 /etc/X11 /Applications/XDarwin.app</codeblock>
        <p>如果你不是打算重安装 Fink 的话，根据你的配置方式你还要使用一个纯文本编辑器，从你的 <filename>.cshrc</filename> 文件中删除 &quot;<code>source 
/sw/bin/init.csh</code>&quot; 这一行；或从 <filename>.bashrc</filename> 文件中删除 &quot;<code>source /sw/bin/init.sh</code>&quot; 这一行。</p>
      </answer>
    </faqentry>
    <faqentry name="bindist" >
      <question>
        <p>网站上的软件包数据库列有 xxx 软件包，但 apt-get 和 dselect 则没有任何显示。哪个有问题？</p>
      </question>
      <answer>
        <p>
都正确。
<link url="http://fink.sourceforge.net/pdb/" >软件包数据</link>
知道每一个软件包，包括那些仍处于不稳定阶段的。
<code>dselect</code> 和 <code>apt-get</code> 工具则只知道那些可用的经过预编译的二进制软件包。
许多软件包因为各种原因所以没有提供预编译的二进制版本。
软件包必须处于开发末期的 &quot;稳定&quot; 状态，而且必须通过额外的授权和专利限制审查以后才会考虑发布二进制安装版本。
</p>
        <p>
如果你希望安装不存在于
<code>dselect</code> / <code>apt-get</code> 中的软件包，你需要使用 <code>fink install <em>软件包名</em>
          </code> 来从源代码安装。
在你尝试之前，确认你已经安装了开发工具（如果在你的 <code>/Applications</code> 文件夹中没有安装开发工具，你可以从 <link url="http://connect.apple.com/" >Apple Developer Connection</link> 经过免费注册以后下载）
请同时查看下面关于未稳定版本的问题。
</p>
      </answer>
    </faqentry>
    <faqentry name="unstable" >
      <question>
        <p>我想安装一个未稳定版本，但 fink 说 'no package found'。我怎么才能安装它？</p>
      </question>
      <answer>
        <p>首先，请确定你明白“未稳定”的含义。在未稳定代码树的软件包仅仅经过几个人的测试。因此，默认情况下，Fink 不会搜索未稳定代码树。如果你确实启用了未稳定代码树，记得 e-mail 通知维护者某项功能是正常的（或者不正常）。从象你这样的用户的反馈是我们决定一个软件包是否已经稳定的因素！要找出一个软件包的维护者，运行 <code>fink info &lt;软件包名</code> 命令。</p>
        <p>软件包通常会有依赖关系，未稳定的软件包通常依赖于未稳定的其它软件包。所以最好启用所有未稳定软件包。</p>
        <p>如果你希望 Fink 使用所有未稳定软件包，编辑 <filename>/sw/etc/fink.conf</filename> 文件，添加 <code>unstable/main</code> 和 <code>unstable/crypto</code> 到 <code>Trees:</code> 这一行，然后运行 <code>fink selfupdate; fink index</code> 命令。</p>
        <p>如果你只希望安装一两个特别的未稳定软件包，而不希望使用其它的，那么你需要改为从 CVS 更新（也就是说，使用 <code>fink selfupdate-cvs</code> 命令），因为 rsync 只更新那些在你的 <filename>fink.conf</filename> 激活的代码树。
		编辑 <filename>/sw/etc/fink.conf</filename> 文件并添加 <code>local/main</code> 到 <code>Trees:</code> 这一行，如果还没有添加的话。然后你需要运行 <code>fink selfupdate</code> 来下载软件包描述文件。现在从 <filename>/sw/fink/dists/unstable/main/finkinfo</filename> 拷贝相应的 <code>.info</code> 文件
		（以及它们相应的 <code>.patch</code> 文件，如果有这些文件的话）到 <filename>/sw/fink/dists/local/main/finkinfo</filename>。不过，记住，你的软件包也许会依赖于其它只有未稳定版本的软件包（或某个特定的版本）。这时你也需要把它们的 <code>.info</code> 文件和 <code>.patch</code> 文件移动到相应的位置。在移动好以后，确定运行 <code>fink index</code> 命令，这样 Fink 关于可用软件包的纪录会得到更新。
		做完以后，你可以转换会 rsync 方式（<code>fink selfupdate-rsync</code>），如果你希望这样的话。</p>
      </answer>
    </faqentry>
    <faqentry name="sudo" >
      <question>
        <p>每次运行 sudo 都要输入密码，这很麻烦。有办法解决吗？</p>
      </question>
      <answer>
        <p>你可以配制 sudo 不需要询问你密码。用 root 权限编辑 <filename>/etc/sudoers</filename> 文件，并添加一行：</p>
        <codeblock>username ALL = NOPASSWD: ALL</codeblock>
        <p>把 <code>username</code> 替换为实际的用户名。这一行使得你可以运行 sudo 命令而不需要输入密码。</p>
      </answer>
    </faqentry>
    <faqentry name="exec-init-csh" >
      <question>
        <p>当我尝试运行 init.csh 或 init.sh 时，我碰到一个 &quot;Permission denied&quot; 错误。我做错了什么？</p>
      </question>
      <answer>
        <p>init.csh 和 init.sh 并不能象普通命令一样运行。这些文件会设置象 PATH 和 MANPATH 这样的环境变量到你的 shell 程序中。要对 shell 一直起作用，它需要由一个 <code>source</code> 命令来运行，象这样：</p>
        <p>对 csh/tcsh：</p>
        <codeblock>source /sw/bin/init.csh</codeblock>
        <p>或对 bash：</p>
        <codeblock>source /sw/bin/init.sh</codeblock>
      </answer>
    </faqentry>
    <faqentry name="dselect-access" >
      <question>
        <p>救命！我选择了 dselect 的
&quot;[A]ccess&quot; 菜单，现在我不能下载软件包了！</p>
      </question>
      <answer>
        <p>
你也许把 apt 指向了一个 Debian 的镜像服务器，当然那里没有任何 Fink 文件。
你可以手工或通过 dselect 来修复。
要手工修复，使用 root 权限用纯文本编辑器编辑
<code>/sw/etc/apt/sources.list</code> 文件。删除包含 debian.org 的行，并换成：
</p>
        <codeblock>deb http://us.dl.sourceforge.net/fink/direct_download release main crypto
deb http://us.dl.sourceforge.net/fink/direct_download current main crypto</codeblock>
        <p>
（或如果你居住在欧洲，你可以使用 <code>eu.dl.sourceforge.net</code>
来代替 <code>us.dl.sourceforge.net</code>）。
</p>
        <p>
要用 dselect 来修复它，再次运行 &quot;[A]ccess&quot;，选择 &quot;apt&quot;
方法并输入下面的信息：
</p>
        <p>
URL: http://us.dl.sourceforge.net/fink/direct_download -
Distribution: release -
Components: main crypto
</p>
        <p>
然后，如果你希望添加其它来源，你可以重复上面的过程，并用
&quot;current&quot; 来代替 &quot;release&quot;。
</p>
        <p>
一个 apt 软件包修正版（提供了配制脚本作为 dselect 的插件）可以通过 CVS 获得。
</p>
      </answer>
    </faqentry>
    <faqentry name="cvs-busy" >
      <question>
        <p>当我试图运行 <quote>fink selfupdate</quote> 或 &quot;fink selfupdate-cvs&quot; 时，我碰到了 &quot;<code>Updating using CVS failed. Check the error messages above.</code>&quot;这个错误信息。</p>
      </question>
      <answer>
        <p>如果错误信息是：</p>
        <codeblock>Can't exec &quot;cvs&quot;: No such file or directory at 
/sw/lib/perl5/Fink/Services.pm line 216, &lt;STDIN> line 3.
### execution of cvs failed, exit code -1</codeblock>
        <p>那么你需要安装开发工具包。</p>
        <p>如果最后一行是：</p>
        <codeblock>### execution of su failed, exit code 1</codeblock>
        <p>你需要往前查看以前输出的错误信息。如果你看到一个信息说你的连接被拒绝：</p>
        <codeblock>(Logging in to anonymous@cvs.sourceforge.net)
CVS password:
cvs [login aborted]: connect to cvs.sourceforge.net:2401 failed:
Connection refused
### execution of su failed, exit code 1
Failed: Logging into the CVS server for anonymous read-only access failed.</codeblock>
        <p>或者象下面的信息：</p>
        <codeblock>cvs [update aborted]: recv() from server cvs.sourceforge.net: 
Connection reset by peer
### execution of su failed, exit code 1
Failed: Updating using CVS failed. Check the error messages above.</codeblock>
        <p>或者：</p>
        <codeblock>cvs [update aborted]: End of file received from server</codeblock>
        <p>或者：</p>
        <codeblock>cvs [update aborted]: received broken pipe signal</codeblock>
        <p>那么很象是 cvs 服务器现在过忙，你应该晚些在尝试更新。</p>
        <p>另一个可能是你的 CVS 目录的权限设置有问题，这时会有 &quot;Permission denied&quot; 信息：</p>
        <codeblock>cvs update: in directory 10.2/stable/main:
cvs update: cannot open CVS/Entries for reading: No such file or directory
cvs server: Updating 10.2/stable/main
cvs update: cannot write 10.2/stable/main/.cvsignore: Permission denied
cvs [update aborted]: cannot make directory 10.2/stable/main/finkinfo: No such file or directory
### execution of su failed, exit code 1
Failed: Updating using CVS failed. Check the error messages above.
</codeblock>
        <p>这时你需要重置你的 CVS 目录。使用命令：</p>
        <codeblock>sudo find /sw/fink -type d -name 'CVS' -exec rm -rf {} \;
fink selfupdate-cvs</codeblock>
        <p>如果你看不到上面这些错误信息，那么很可能是你自己修改过 /sw/fink/dists 树里面的文件，而现在维护者又改动了它。查看以前的 selfupdate-cvs 输出，寻找以 &quot;C&quot; 开始的行，象这样：
</p>
        <codeblock>C 10.2/unstable/main/finkinfo/libs/db31-3.1.17-6.info
...
(other info and patch files)
...
### execution of su failed, exit code 1
Failed: Updating using CVS failed. Check the error messages above.</codeblock>
        <p>&quot;C&quot; 指 CVS 在更新最新版本的时候出现冲突。</p>
        <p>解决办法是删除在 selfupdate-cvs 命令的输出中 &quot;C&quot; 开头的错误信息所涉及的文件，然后重新试一次。</p>
        <codeblock>sudo rm /sw/fink/10.2/unstable/main/finkinfo/libs/db31-3.1.17-6.info
fink selfupdate-cvs</codeblock>
      </answer>
    </faqentry>
    <faqentry name="kernel-panics" >
      <question>
        <p>当我使用 Fink 的时候，碰到整个机器没有反应/核心恐慌/死机。救命！</p>
      </question>
      <answer>
        <p> 最近在
<link url="http://sourceforge.net/mailarchive/forum.php?forum=fink-users" >fink 用户邮件列表</link> 中有不少关于这个问题的反映（包括核心恐慌和不断旋转的彩轮），这通常在安装有防病毒软件的机器上编译软件包时发生。也许在使用 Fink 之前你应该关闭所有防病毒软件。
</p>
      </answer>
    </faqentry>
    <faqentry name="not-found" >
      <question>
        <p>我试图安装一个软件包，但 Fink 不能下载它。下载的网站显示一个比 Fink 里面更新的版本号。我该怎么办？</p>
      </question>
      <answer>
        <p>当新版本发布的时候，源程序包会被从上游网站移走。</p>
        <p>首先你应该做的是运行 <code>fink selfupdate</code>。
也许软件包的维护者已经修正了这一点，你获得一个包含最新版本或更新过下载网址的软件包描述。</p>
        <p>如果这个办法不奏效，多数的源程序包可以在 <link url="http://distfiles.master.finkmirrors.net/" >http://distfiles.master.finkmirrors.net/</link> 下载到（感谢 Rob Braun），你可以运行 <code>fink configure</code> 来选择搜索 &quot;Master&quot; 源程序镜像，这样 Fink 就会自动在那里寻找。</p>
        <p>如果这还不奏效，请通知程序包维护者（可以通过 &quot;<code>fink describe <em>软件包名</em>
          </code>&quot; 获得）) 下载链接已经失效；并不是所有维护者总是阅读邮件列表的消息的。</p>
        <p>要获得一个可用的源程序包，首先尝试在原来的站点的其它目录寻找 Fink 所要的相同版本文件（例如，在一个名为 &quot;old&quot; 的目录里面）。记住，虽然一些站点可能已经扔掉了旧版本的软件包。但是如果官方站点上找不到的话，你可以尝试一个互联网上的搜索——仍然会有一些非官方的站点保存有你所需要的压缩档。另外一个寻找的地方是 <link url="http://us.dl.sourceforge.net/fink/direct_download/source/" >http://us.dl.sourceforge.net/fink/direct_download/source/</link>，这是 Fink 存放它们已经以二进制发布过的软件包的源文件的地方。如果这些都不成功，你可以考虑在
<link url="http://sourceforge.net/mailarchive/forum.php?forum=fink-users" >fink 用户邮件列表</link> 里面发信询问是否有人会有旧的源代码压缩档可以给你。</p>
        <p>一旦你找到合适的源程序压缩档，手工下载它，然后把它移到 Fink 的源程序文件目录里面（对默认安装，可以使用 &quot;<code>sudo mv <em>package-source.tar.gz</em> /sw/src/</code>&quot;命令）。然后和平常一样用 '<code>fink install <em>软件包名</em>
          </code>' 安装。</p>
        <p>如果你没有办法找到源程序文件，那么你只能等待维护者来处理这个问题。它们可能会发布一个到旧源文件的链接，或升级 .info 和 .patch 文件来使用新的版本。
</p>
      </answer>
    </faqentry>
    <faqentry name="fink-not-found" >
      <question>
        <p>当我运行 Fink 或我用 Fink 安装的东西的时候，我碰到一个 &quot;command not found&quot; 错误。</p>
      </question>
      <answer>
        <p>如果这总是发生，那么也许你已经不小心修改了你的启动脚本。运行 <filename>/sw/bin/pathsetup.command</filename> 脚本（在 Finder 里面双击或在终端窗口中运行），它会尝试检测你启动配置。然后需要你需要重新打开一个新的终端窗口来使用新的环境设置。</p>
        <p>另一方面，如果你只在苹果的 X11 终端中碰到这个问题，这也许意味着你需要创建一个 <link url="http://fink.sourceforge.net/doc/x11/run-xfree86.php#xinitrc" >.xinitrc</link> 文件并在靠近文件开头的地方（就是说，在运行任何程序以前）添加一行：</p>
        <codeblock>. /sw/bin/init.sh</codeblock>
        <p>在做完以后，重新运行 X11。</p>
      </answer>
    </faqentry>
    <faqentry name="invisible-sw" >
      <question>
        <p>我希望在 Finder 里面隐藏 /sw 而避免用户破坏 Fink 的设置。</p>
      </question>
      <answer>
        <p>如果你安装了开发工具包，你可以做到这一点。你可以运行下面的命令：</p>
        <codeblock>sudo /Developer/Tools/SetFile -a V /sw</codeblock>
        <p>这会使得 /sw 象其它标准系统文件夹一样（比如 /usr），在 Finder 中不可见。如果你没有开发工具包，也有其它第三方程序可以让你修改文件属性-你需要把 /sw 设为隐藏。</p>
      </answer>
    </faqentry>
    <faqentry name="install-info-bad" >
      <question>
        <p>我不能安装任何软件，因为我碰到下面的错误信息：&quot;install-info: unrecognized option `--infodir=/sw/share/info'&quot;。</p>
      </question>
      <answer>
        <p>这通常是由于你的 PATH 环境变量的原因。在终端窗口输入：</p>
        <codeblock>printenv PATH</codeblock>
        <p>如果输出里面没有 <filename>/sw/sbin</filename>，那么你需要按照用户指南中的<link url="http://fink.sourceforge.net/doc/users-guide/install.php#setup" >方法</link>来设置你的环境变量。如果有 <filename>/sw/sbin</filename>，但有其它目录在它前面（比如 <filename>/usr/local/bin</filename>），那么你要么需要重新安排你 PATH 里面的顺序，使得 <filename>/sw/sbin</filename> 排在前面，要么如果你的确需要把其它目录放在 <filename>/sw/sbin</filename> 之前，这时也许你需要在使用 Fink 的时候临时重命名其它 <filename>install-info</filename>。</p>
      </answer>
    </faqentry>
    <faqentry name="bad-list-file" >
      <question>
        <p>我不能安装或删除任何东西，因为一个 &quot;files list file&quot; 问题。</p>
      </question>
      <answer>
        <p>通常这些错误的形式是：</p>
        <codeblock>files list file for package <em>软件包名</em> contains empty filename</codeblock>
        <p>或</p>
        <codeblock>files list file for package <em>软件包名</em> is missing final newline</codeblock>
        <p>这可以通过一点小小的工作而修复。如果你在系统里面有发生问题的这个软件包的 .deb 文件，用下面命令检查它的完整性：</p>
        <codeblock>dpkg --contents <em>deb文件的完整路径</em>
        </codeblock>
        <p>例如</p>
        <codeblock>dpkg --contents /sw/fink/debs/libgnomeui2-dev_2.0.6-2_darwin-powerpc.deb</codeblock>
        <p>如果你获得了一列目录和文件，那么你的 .deb 是正确的。如果输出是目录和文件以外的其它东西，或者你没有 .deb 文件，你仍然可以继续操作，因为这个错误不会影响构建。</p>
        <p>如果你是从二进制包进行安装或你肯定知道二进制包里面的版本和你已经安装的版本一致（比如，通过检查<link url="http://fink.sourceforge.net/pdb/index.php" >软件包数据库</link>），你可以用下面的办法获取一个 .deb 文件： <code>sudo apt=get install --reinstall --download-only <em>软件包名</em>
          </code>。否则你也可以用下面的办法自己从源代码重新构建一个：<code>fink rebuild <em>软件包名</em>
          </code>，但它暂时还不能安装。</p>
        <p>一旦你有了一个正常的 .deb 文件，你可以重新安装文件。首先用下面的命令成为 root 用户：<code>sudo -s</code>（有需要的话，输入你的管理员密码），然后使用下面的命令（我们把它分行以方便阅读，但实际使用的时候，你应该在一行里面输入）：</p>
        <codeblock>dpkg -c <em>deb文件的完整路径</em>
  | awk '{if ($6 == &quot;./&quot;){ print &quot;/.&quot;; } else if (substr($6, length($6), 1) == &quot;/&quot;)
    {print substr($6, 2, length($6) - 2); } else { print substr($6, 2, length($6) - 1);}}' 
  > /sw/var/lib/dpkg/info/<em>软件包名</em>.list</codeblock>
        <p>例如：</p>
        <codeblock>dpkg -c /sw/fink/debs/libgnomeui2-dev_2.0.6-2_darwin-powerpc.deb
  | awk '{if ($6 == &quot;./&quot;) { print &quot;/.&quot;; } else if (substr($6, length($6), 1) == &quot;/&quot;)
   {print substr($6, 2, length($6) - 2); } else { print substr($6, 2, length($6) - 1);}}'
  > /sw/var/lib/dpkg/info/libgnomeui2-dev.list</codeblock>
        <p>这里做的事情是抽取 .deb 文件的内容，删掉除文件名以外的所有信息，并把文件名信息写回到 .list 文件中。</p>
      </answer>
    </faqentry>
    <faqentry name="error-nineteen" >
      <question>
        <p>当我使用 Fink 二进制安装包的时候，我碰到一个很大的 &quot;19&quot; 在窗口中，而不能安装任何东西。</p>
      </question>
      <answer>
        <p>显示数字 19 是因为你的 OS X 系统被本地化为别的语言。（这是苹果安装程序的一个问题，它这时没有显示英语的错误信息）。</p>
        <p>对应于错误 19 的英语错误信息是：</p>
        <p>&quot;/sw 目录已存在，请参阅自述文件已获取升级指南，或关于如何安装 Fink 到一个单独的宗卷。&quot;</p>
        <p>如果你以前使用过 Fink，而又没有删除 <filename>/sw</filename> 目录，你会碰到这个错误信息。如果你以前没有安装过 Fink，最大的可能是你作为 .Mac 用户免费安装了 Virex 程序。
正如 Fink 的网页所解释的一样，Virex 与 Fink 不兼容（因为 Virex 错误的设置方式）。</p>
      </answer>
    </faqentry>
    <faqentry name="dselect-garbage" >
      <question>
        <p>当我在 <filename>dselect</filename> 中选择软件包时，屏幕显示一堆乱七八糟的东西。怎么办？</p>
      </question>
      <answer>
        <p>在 <filename>dselect</filename> 和 终端程序（<filename>Terminal.app</filename>）中间存在一些问题。暂时解决方法是在运行 <filename>dselect</filename> 前输入下面的命令。</p>
        <p>对 tcsh 用户：</p>
        <codeblock>setenv TERM xterm-color</codeblock>
        <p>对 bash 用户：</p>
        <codeblock>export TERM=xterm-color</codeblock>
        <p>你可以把它放到你的启动文件（比如 <code>.cshrc</code> 或 <code>.profile</code>），这样它就总是会自动运行。</p>
      </answer>
    </faqentry>
    <faqentry name="perl-undefined-symbol" >
      <question>
        <p>为什么我运行 Fink 命令时会有一堆的 &quot;dyld: perl undefined symbols&quot; 错误？</p>
      </question>
      <answer>
        <p>如果你看到象下面的错误信息：</p>
        <codeblock>dyld: perl Undefined symbols:
_Perl_safefree
_Perl_safemalloc
_Perl_saferealloc
_Perl_sv_2pv
_perl_call_sv
_perl_eval_sv
_perl_get_sv</codeblock>
        <p>那么很可能你升级了 Perl，现在 <filename>storable-pm</filename> 也应该需要升级。
你应该更新 Fink。在这个过程中，你会被提示要安装 <filename>perl-core</filename> 还是 <filename>system-perl</filename>；这时需要选择后者。 
另外，<filename>storable-pm</filename> 应该也会更新。</p>
        <p>对 OS 10.1.x，可以执行下面的命令（你需要安装了开发工具）：</p>
        <codeblock>sudo mv /sw/lib/perl5/darwin/Storable.pm /tmp
sudo mv /sw/lib/perl5/darwin/auto/Storable /tmp
fink rebuild storable-pm
fink selfupdate-cvs</codeblock>
      </answer>
    </faqentry>
    <faqentry name="cant-upgrade" >
      <question>
        <p>我看不到要升级的 Fink 版本。</p>
      </question>
      <answer>
        <p>在这种情况下，参考<link url="http://fink.sourceforge.net/download/fix-upgrade.php" >特别指引</link>。</p>
      </answer>
    </faqentry>
    <faqentry name="spaces-in-directory" >
      <question>
        <p>我可以把 Fink 放到一个名字里面有空格的目录或宗卷里面吗？</p>
      </question>
      <answer>
        <p>我们不推荐把你的 Fink 目录树放到名字中有空格的目录里面。完全不值得冒这个险。</p>
      </answer>
    </faqentry>
    <faqentry name="packages-gz" >
      <question>
        <p>当我进行二进制升级的时候，有很多 &quot;File not found&quot; 错误。</p>
      </question>
      <answer>
        <p>如果你看到这样的错误：</p>
        <codeblock>
Err file: local/main Packages
  File not found
Ign file: local/main Release
Err file: stable/main Packages
  File not found
Ign file: stable/main Release
Err file: stable/crypto Packages
  File not found
Ign file: stable/crypto Release
Hit http://us.dl.sourceforge.net 10.3/release/main Packages
Hit http://us.dl.sourceforge.net 10.3/release/main Release
Hit http://us.dl.sourceforge.net 10.3/release/crypto Packages
Hit http://us.dl.sourceforge.net 10.3/release/crypto Release
Hit http://us.dl.sourceforge.net 10.3/current/main Packages
Hit http://us.dl.sourceforge.net 10.3/current/main Release
Hit http://us.dl.sourceforge.net 10.3/current/crypto Packages
Hit http://us.dl.sourceforge.net 10.3/current/crypto Release
Failed to fetch
file:/sw/fink/dists/local/main/binary-darwin-powerpc/Packages
File not found
Failed to fetch
file:/sw/fink/dists/stable/main/binary-darwin-powerpc/Packages
File not found
Failed to fetch
file:/sw/fink/dists/stable/crypto/binary-darwin-powerpc/Packages
File not found
Reading Package Lists... Done
Building Dependency Tree... Done
E: Some index files failed to download, they have been ignored, or old
ones used instead.

update available list script returned error exit status 1.
</codeblock>
        <p>那么你需要做的是运行 <code>fink scanpackages</code>。这会生成那些找不到的文件。</p>
      </answer>
    </faqentry>
    <faqentry name="wrong-tree" >
      <question>
        <p>我更改了我的错误系统或开发工具，但 Fink 没有认出这些改动。</p>
      </question>
      <answer>
        <p>在改动 Fink 的安装环境（源代码或二进制安装都是它的子集），需要告诉 Fink 发生了这些变动。要这样做，我们要运行一个通常是在首次安装的时候才运行的脚本：</p>
        <codeblock>/sw/lib/fink/postinstall.pl</codeblock>
        <p>运行完这个脚本以后，Fink 应该能够适应改动的结果。</p>
      </answer>
    </faqentry>
    <faqentry name="seg-fault" >
      <question>
        <p>当我运行<code> fileutils </code>中的 <code>gzip</code> 或 <code>dpkg-deb</code> 程序时出现错误！救命！</p>
      </question>
      <answer>
        <p>出错的形式：</p>
        <codeblock>gzip -dc /sw/src/dpkg-1.10.9.tar.gz | /sw/bin/tar -xf -
### execution of gzip failed, exit code 139</codeblock>
        <p>或</p>
        <codeblock>gzip -dc /sw/src/aquaterm-0.3.0a.tar.gz | /sw/bin/tar -xf -
gzip: stdout: Broken pipe
### execution of gzip failed, exit code 138</codeblock>
        <p>或</p>
        <codeblock>dpkg-deb -b root-base-files-1.9.0-1
/sw/fink/dists/unstable/main/binary-darwin-powerpc/base
### execution of dpkg-deb failed, exit code 10
Failed: can't create package base-files_1.9.0-1_darwin-powerpc.deb</codeblock>
        <p>或在运行<code> fileutils</code> 中的工具时出现 segmentation faults 错误。比如：<code>ls</code> 或 <code>mv</code>，这很可能时因为某个库的预绑定错误，这可以通过运行下面命令来修正：</p>
        <codeblock>sudo /sw/var/lib/fink/prebound/update-package-prebinding.pl -f</codeblock>
      </answer>
    </faqentry>
    <faqentry name="pathsetup-keeps-running" >
      <question>
        <p>当我打开终端程序窗口时，我看到下面的信息 &quot;Your environment seems to be correctly
set up for Fink already.&quot;，然后它就退出登录了。</p>
      </question>
      <answer>
        <p>发生这个现象的原因是 OS X 的终端程序被告知每次登录的时候需要运行 <code>/sw/bin/pathsetup.command</code> 命令。你可以通过删除下面的文件 <code>~/Library/Preferences/com.apple.Terminal.plist</code> 来修正这一点。</p>
        <p>如果这个配置文件里面有你需要保留的配置信息（所以你不能删除它），你可以用纯文本编辑器来编辑它，删除包含 <code>/sw/bin/pathsetup.command</code> 的一行。</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="comp-general" >
    <title>一般性编译问题</title>
    <shorttitle>编译（１）</shorttitle>
    <faqentry name="compiler" >
      <question>
        <p>一个配置脚本出错说找不到一个 &quot;acceptable cc&quot;。什么意思？</p>
      </question>
      <answer>
        <p>
下次应该阅读一下文档。
要从源代码编译软件包，你需要安装开发工具包，其中就包括 C 编译器：<code>cc</code>。
</p>
      </answer>
    </faqentry>
    <faqentry name="cvs" >
      <question>
        <p>我运行 &quot;fink selfupdate-cvs&quot;，但出现这个错误：&quot;cvs: Command not found.&quot;。</p>
      </question>
      <answer>
        <p>你需要安装开发工具包。</p>
      </answer>
    </faqentry>
    <faqentry name="missing-make" >
      <question>
        <p>我碰到一个涉及 <code>make</code> 的错误。
        </p>
      </question>
      <answer>
        <p>如果错误信息是这种形式</p>
        <codeblock>make: command not found</codeblock>
        <p>或</p>
        <codeblock>Can't exec &quot;make&quot;: No such file or directory at /sw/lib/perl5/Fink/Services.pm line 190.</codeblock>
        <p>它表示你需要安装开发工具。</p>
        <p>如果你的错误信息是这样的</p>
        <codeblock>make: illegal option -- C</codeblock>
        <p>那是因为你把开发工具包里面 GNU 版本的 <code>make</code> 工具换成了 BSD 版本。许多软件包依赖于 GNU Make 的特有功能。
确定 <code>/usr/bin/make</code> 是一个指向
<code>gnumake</code>的符号链接，而不是指向 <code>bsdmake</code>。另外，确定 <code>/usr/local/bin/</code> 中没有另外一个 <code>make</code>。
</p>
      </answer>
    </faqentry>
    <faqentry name="head" >
      <question>
        <p>我碰到 head 命令的一个奇怪的错误信息。什么出问题了？</p>
      </question>
      <answer>
        <p>如果你看到的是：</p>
        <codeblock>Unknown option: 1
Usage: head [-options] &lt;url>...</codeblock>
        <p>后面是一列选项描述，你的 <code>head</code> 程序被损坏了。
这会在你安装 Perl 的 libwww 库到一个 HFS+ 系统宗卷时发生。
原因是它会建立一个新的命令 <code>/usr/bin/HEAD</code>，它会覆盖现存的 <code>head</code> 命令，因为 HFS+ 是不区分大小写的。
<code>head</code> 是一个在许多 shell 脚本和 Makefiles 中用到的标准命令。
如果你想使用 Fink，你需要装回原来的 <code>head</code> 程序。
</p>
        <p>
现在源代码发布版的 bootstrap 脚本会检查这一点，但你仍然会碰到这个问题，如果你使用二进制安装或在安装 Fink 以后又安装 libwww。
</p>
        <p>也曾经有报告说发生这个问题是因为安装了 <filename>/sw/bin/HEAD</filename>（这不是 Fink 软件包安装的）。这种情况很容易解决：重命名 <filename>/sw/bin/HEAD</filename>。</p>
      </answer>
    </faqentry>
    <faqentry name="also_in" >
      <question>
        <p>当我安装一个软件包的时候，我碰到一个错误信息说我试图覆盖另外一个软件包的文件。</p>
      </question>
      <answer>
        <p>当你安装那些具有版本分支的软件包（也就是那些名字末尾有 -dev，-shlibs，等的）时，如果需要有些文件从一个版本分支移动到另一个版本分支（例如，从 <code>foo</code> 到 <code>foo-shlibs</code>）的时候，你就会碰到这个错误。你可以做的是使用你现在安装的版本来覆盖旧有的版本（因为他们通常是相同的）：</p>
        <codeblock>sudo dpkg -i --force-overwrite <em>文件名</em>
        </codeblock>
        <p>这里文件名 <em>filename</em> 是对应于你要安装的软件包的 .deb 文件名称。</p>
      </answer>
    </faqentry>
    <faqentry name="weak_lib" >
      <question>
        <p>我安装了 December 2002 开发工具包以后，碰到 &quot;weak libraries&quot; 的错误。</p>
      </question>
      <answer>
        <p>这是 December 2002 工具的新问题。偶尔你会看到这样的信息（比如说选择 libgdk-pixbuf）：</p>
        <p>
          <code>ld: warning dynamic shared library: /sw/lib/libgdk-pixbuf.dylib not made a weak library in output with MACOSX_DEPLOYMENT_TARGET environment variable set to: 10.1</code>
        </p>
        <p>你可以把这些看做一些无害的信息。如果你对此好奇的话，仔细阅读开发者文档目录里面的 release notes，尤其是关于 GCC 和 linker　的部分。补充的信息的是，对于那些使用弱引用的程序，它和程序启动的时候发现一些运行时标识不存在话，是否把它当做致命错误有关。</p>
      </answer>
    </faqentry>
    <faqentry name="mv-failed" >
      <question>
        <p>当我构建一个软件包时，&quot;execution of mv failed, exit code 1&quot; 错误是什么意思？</p>
      </question>
      <answer>
        <p>如果你安装了 StuffIt Pro，这可能是因为你使用了 &quot;Archive Via Real Name&quot; 模式。在系统预置中检查 StuffIt 面板，禁用 &quot;ArchiveViaRealName&quot;。它包括对一些重要的系统调用的不正确的替代，从而引起一些古怪的错误。</p>
        <p>否则，一个 <filename>mv</filename> 错误通常意味着构建过程更早期发生了错误，但是构建过程并没有因为那个错误而终止。要找到发生的问题的文件，可以搜索那个不存在文件构建时候的输出。比如，如果你碰到这样的错误：</p>
        <codeblock>mv /sw/src/root-foo-0.1.2-3/sw/lib/libbar*.dylib \
 /sw/src/root-foo-shlibs-0.1.2-3/sw/lib/
 mv: cannot stat `/sw/src/root-foo-0.1.2-3/sw/lib/libbar*.dylib': 
 No such file or directory
### execution of mv failed, exit code 1
Failed: installing foo-0.1.2-3 failed</codeblock>
        <p>那么你应该在你构建输出信息的更前面的地方寻找有关 <filename>libbar</filename> 的信息。</p>
      </answer>
    </faqentry>
    <faqentry name="node-exists" >
      <question>
        <p>我无法安装软件包或更新它，因为我碰到一个错误说一个 &quot;node&quot; 已经存在。</p>
      </question>
      <answer>
        <p>这个错误的大约是这个样子的：</p>
        <codeblock>Failed: Internal error: node for system-xfree86 already exists</codeblock>
        <p>这个问题是因为依赖关系引擎发生了混乱，原因是修改了某些软件包的 info 文件。要修正它：</p>
        <ul>
          <li>
            <p>强行删除出现问题的软件包，例如，对于上面的例子，可以：</p>
            <codeblock>sudo dpkg -r --force-all system-xfree86</codeblock>
          </li>
          <li>
            <p>再尝试安装或升级。有时会提示一个包含你删除了的软件包的 &quot;virtual dependency&quot;。选择它，它会在构建过程中重新被安装。</p>
          </li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="usr-local-libs" >
      <question>
        <p>我听说安装在 /usr/local/lib 的库有时会引起 Fink 构建的问题。是这样吗？</p>
      </question>
      <answer>
        <p>这是一个经常发生的问题，因为软件包的配置脚本会在搜索 <filename>/usr/local/lib</filename> 之后才在 Fink 路径中搜索库。如果你碰到其它 FAQ 中没有解释的构建问题，你应该检查涉及的库时候在 <filename>/usr/local/lib</filename> 中。如果是这样的话，尝试把 <filename>/usr/local</filename> 改成其它名字，例如：</p>
        <codeblock>sudo mv /usr/local /usr/local.moved</codeblock>
        <p>完成你的构建，然后把 <filename>/usr/local</filename> 改回来：</p>
        <codeblock>sudo mv /usr/local.moved /usr/local</codeblock>
      </answer>
    </faqentry>
    <faqentry name="toc-out-of-date" >
      <question>
        <p>当我构建一个软件包的时候，我碰到一个消息说 &quot;table of contents&quot; 已经过时。我需要怎么办？</p>
      </question>
      <answer>
        <p>输出已经提示了该怎么办。消息通常是这样的：</p>
        <codeblock>ld: table of contents for archive: /sw/lib/libintl.a is out of date; rerun ranlib(1) (can't load from it)</codeblock>
        <p>你需要（以 root 权限）运行 ranlib 处理引起问题的库。例如对上面的情况，你可以运行：</p>
        <codeblock>sudo ranlib /sw/lib/libintl.a</codeblock>
      </answer>
    </faqentry>
    <faqentry name="fc-atlas" >
      <question>
        <p>当我安装 atlas 时 Fink Commander 挂了。</p>
      </question>
      <answer>
        <p>这原因时在构建 <code>atlas</code> 时，Fink Commander 遗漏了一个发向用户要求选择的信息。你需要使用 <code>fink install atlas</code> 命令来安装。</p>
      </answer>
    </faqentry>
    <faqentry name="basic-headers" >
      <question>
        <p>我碰到信息说我缺少 stddef.h 文件。我可以在哪里找到它？</p>
      </question>
      <answer>
        <p>这个头文件，以及很多其它类似文件，都是由开发工具包中的 DevSDK 包提供。检查你系统中是否存在 <filename>/Library/Receipts/DevSDK.pkg</filename> 文件。如果没有的话，再运行一次开发工具安装程序，并使用定制安装来安装 DevSDK 包。</p>
      </answer>
    </faqentry>
    <faqentry name="multiple-dependencies" >
      <question>
        <p>我无法升级，因为 Fink &quot;unable to resolve version conflict on multiple dependencies&quot;。</p>
      </question>
      <answer>
        <p>要回避这个问题，尝试升级一个单独的软件包，然后再次尝试使用 &quot;fink update-all&quot;。如果你还碰到这个信息，重复这个过程。</p>
      </answer>
    </faqentry>
    <faqentry name="dpkg-parse-error" >
      <question>
        <p>我不能安装任何东西，因为我碰到 &quot;dpkg: parse error, in file `/sw/var/lib/dpkg/status'&quot; 错误！</p>
      </question>
      <answer>
        <p>这意味着你的 dpkg 数据库被损坏了，通常是由于一次程序崩溃或其它不可恢复错误造成。你可以用拷贝以前的版本的数据库办法来解决，象这样：</p>
        <codeblock>
sudo cp /sw/var/lib/dpkg/status-old /sw/var/lib/dpkg/status
</codeblock>
        <p>你也许需要重新安装问题发生前安装的最后几个软件包。</p>
      </answer>
    </faqentry>
    <faqentry name="freetype-problems" >
      <question>
        <p>我碰到一个涉及 freetype 的错误。</p>
      </question>
      <answer>
        <p>这个错误有几种形式。如果你的错误是这样的：</p>
        <codeblock>/sw/include/pango-1.0/pango/pangoft2.h:52: error: parse error before '*' token
/sw/include/pango-1.0/pango/pangoft2.h:57: error: parse error before '*' token
/sw/include/pango-1.0/pango/pangoft2.h:61: error: parse error before '*' token
/sw/include/pango-1.0/pango/pangoft2.h:86: error: parse error before &quot;pango_ft2_font_get_face&quot;
/sw/include/pango-1.0/pango/pangoft2.h:86: warning: data definition has no type or storage class
make[2]: *** [rsvg-gz.lo] Error 1
make[1]: *** [all-recursive] Error 1
make: *** [all-recursive-am] Error 2
### execution of make failed, exit code 2
Failed: compiling librsvg2-2.4.0-3 failed</codeblock>
        <p>或</p>
        <codeblock>In file included from vteft2.c:32:
vteglyph.h:64: error: parse error before &quot;FT_Library&quot;
vteglyph.h:64: warning: no semicolon at end of struct or union
vteft2.c: In function `_vte_ft2_get_text_width':
vteft2.c:236: error: dereferencing pointer to incomplete type
vteft2.c: In function `_vte_ft2_get_text_height':
vteft2.c:244: error: dereferencing pointer to incomplete type
vteft2.c: In function `_vte_ft2_get_text_ascent':
vteft2.c:252: error: dereferencing pointer to incomplete type
vteft2.c: In function `_vte_ft2_draw_text':
vteft2.c:294: error: dereferencing pointer to incomplete type
vteft2.c:295: error: dereferencing pointer to incomplete type
make[2]: *** [vteft2.lo] Error 1
make[1]: *** [all-recursive] Error 1
make: *** [all] Error 2
### execution of make failed, exit code 2
Failed: compiling vte-0.11.10-3 failed</codeblock>
        <p>或</p>
        <codeblock>checking for freetype-config... /usr/X11R6/bin/freetype-config
checking For sufficiently new FreeType (at least 2.0.1)... no
configure: error: pangoxft Pango backend found but did not find freetype libraries
make: *** No targets specified and no makefile found.  Stop.
### execution of LD_TWOLEVEL_NAMESPACE=1 failed, exit code 2
Failed: compiling gtk+2-2.2.4-2 failed</codeblock>
        <p>问题发生在 <code>freetype</code> 或 <code>freetype-hinting</code> 软件包的头文件和包含在 X11 或 XFree86 中的 <code>freetype2</code> 头文件之间发生混淆。</p>
        <codeblock>fink remove freetype freetype-hinting</codeblock>
        <p>命令可以删除你安装的（导致问题的）变种。如果你的错误是这样的：</p>
        <codeblock>ld: Undefined symbols:
_FT_Access_Frame </codeblock>
        <p>这通常是用于以前安装的 X11 的残余文件。你需要重新安装 X11 SDK。最后，如果你获得一个这样的错误：</p>
        <codeblock>dyld: klines Undefined symbols:
/sw/lib/libqt-mt.3.dylib undefined reference to _FT_Access_Frame
</codeblock>
        <p>那么你很可能安装了一个在 Jaguar 上使用 <code>gcc3.3</code> 编译的二进制包，但它却不能在 Panther 上使用。这现在已经被修正了，所以你只需要更新你的软件包就可以了，例如，通过 <code>sudo apt-get update ; sudo apt-get dist-upgrade</code>。</p>
      </answer>
    </faqentry>
    <faqentry name="dlfcn-from-oo" >
      <question>
        <p>我碰到一个涉及 `Dl_info' 的编译错误。</p>
      </question>
      <answer>
        <p>如果你的错误是这样的</p>
        <codeblock>unix_dl.c: In function `rep_open_dl_library':
unix_dl.c:328: warning: assignment discards qualifiers from pointer target type
unix_dl.c: In function `rep_find_c_symbol':
unix_dl.c:466: error: `Dl_info' undeclared (first use in this function)
unix_dl.c:466: error: (Each undeclared identifier is reported only once
unix_dl.c:466: error: for each function it appears in.)
unix_dl.c:466: error: parse error before &quot;info&quot;
unix_dl.c:467: error: `info' undeclared (first use in this function)
make[1]: *** [unix_dl.lo] Error 1</codeblock>
        <p>最可能是你有这样的一个头文件：<code>/usr/local/include/dlfcn.h</code>，它和 Panther 不兼容。</p>
        <p>这一般是由 Open Office 所安装的，你应该通过符号链接把这个头文件和对应的 <code>/usr/local/lib/libdl.dylib</code> 库指向 Panther 的内置文件</p>
        <codeblock>sudo ln -s /usr/include/dlfcn.h /usr/local/include/dlfcn.h
sudo ln -s /usr/lib/libdl.dylib /usr/local/lib/libdl.dylib</codeblock>
      </answer>
    </faqentry>
    <faqentry name="gcc2" >
      <question>
        <p>Fink 说我缺少 <filename>gcc2</filename>，但我不知道怎么安装它。</p>
      </question>
      <answer>
        <p>这是因为 <filename>gcc2</filename> 是一个代表你系统上 gcc-2.95 的虚拟软件包。在 XCode 工具中安装 gcc2.95 软件包（早期操作系统的开发工具安装把 gcc-2.95 作为主要的编译工具安装）。</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="comp-packages" >
    <title>编译问题－特定软件包</title>
    <shorttitle>编译（２）</shorttitle>
    <faqentry name="libgtop" >
      <question>
        <p>一个软件包构建失败，错误和 <code>sed</code> 有关。</p>
      </question>
      <answer>
        <p>如果你的登录脚本（例如 <code>~/.cshrc</code>）向终端输出了些信息，比如 &quot;<code>echo Hello</code>&quot; 或 <code>xttitle</code>，可能会导致这个错误。要消除这个问题，最简单的办法是注释掉这些行。</p>
        <p>如果你想保留这些回显信息，你可以这样做：</p>
        <codeblock>if ( $?prompt) then
echo Hello
endif</codeblock>
      </answer>
    </faqentry>
    <faqentry name="cant-install-xfree" >
      <question>
        <p>我想改用 Fink　的 XFree86 软件包，但我不能安装 <code>xfree86-base</code> 或 <code>xfree86</code>，因为它和 <code>system-xfree86</code> 冲突。</p>
      </question>
      <answer>
        <p>很不幸，各种 X11 都不可避免地要安装在 /usr/X11R6 中。因此 Fink 的 <code>xfree86-base</code> 和 <code>xfree86-rootless</code> 软件包也需要安装在那里。不过，由于 Fink 不会删除任何没有在它数据库里面的文件，它不会自动替换非 Fink 安装的 X11。</p>
        <p/>
        <p>下面是应该怎么做：</p>
        <p/>
        <p>
          <em>注意：安装了新版（0.16.2 或更新）Fink 的 10.2.x 用户和 10.3.x 的用户应该跳过下面的步骤 1（事实上，他们也做不了步骤 1）。</em>
        </p>
        <p>1. 删除 <code>system-xfree86</code>。如果你暂时还没有依赖于 X11 的软件包，这很简单。但通常情况是，已经安装了需要依赖于 X11 的软件包。如果不想全部删除他们，你可以使用：</p>
        <p>
          <code>sudo dpkg --remove --force-depends system-xfree86</code>
        </p>
        <p>来进行删除，而保持其它软件包仍然存在。如果你没有安装 <code>system-xfree86</code>，那么跳到步骤 3。</p>
        <p>2. 手工删除所有 XFree86。可以这么做：</p>
        <p>
          <code>sudo rm -rf /Applications/XDarwin.app /usr/X11R6 /etc/X11</code>
        </p>
        <p>如果你正在使用的是苹果的 X11，同时也删除 X11 程序。</p>
        <p>3. 要获取 XFree86-4.2.1，用通常的办法安装 Fink 的 <code>xfree86-base</code> 和 <code>xfree86-rootless</code> 软件包：对使用源代码安装的用户　&quot;<code>fink install</code>&quot;；对二进制安装的用户 &quot;<code>apt-get install</code>&quot; 或 <code>dselect</code>。</p>
        <p>或</p>
        <p>3a. 要获取 XFree86-4.3.x，使用 &quot;fink install xfree86&quot; 安装 Fink 的 <code>xfree86</code> 软件包，这个版本目前还没有二进制安装版发布，而且仅有未稳定的版本[FAQ 3.9]。</p>
      </answer>
    </faqentry>
    <faqentry name="change-thread-nothread" >
      <question>
        <p>怎么把 Fink 的 XFree86 从非线程化的版本改为线程化的版本（或相反）？</p>
      </question>
      <answer>
        <p>如果你正在使用 Fink 版本的 XFree86，并且你希望在线程化或非线程化的版本之间转换，你需要手工删除旧的版本，你可以用下面的命令行命令实现：</p>
        <codeblock>
sudo dpkg -r --force-depends xfree86-base
sudo dpkg -r --force-depends xfree86-shlibs
sudo dpkg -r --force-depends xfree86-rootless
sudo dpkg -r --force-depends xfree86-rootless-shlibs
	</codeblock>
        <p>或者删除线程化的版本：</p>
        <codeblock>
sudo dpkg -r --force-depends xfree86-base-threaded
sudo dpkg -r --force-depends xfree86-shlibs-threaded
sudo dpkg -r --force-depends xfree86-rootless-threaded
sudo dpkg -r --force-depends xfree86-rootless-threaded-shlibs
	</codeblock>
        <p>FinkCommander 也可以删除软件包。在源代码版本窗口，选择一个软件包，然后在 <code>Source Menu</code> 使用 &quot;<code>Force Remove</code>&quot;。</p>
        <p>如果你正在使用 system-xfree86，查看前面关于删除它的问题。</p>
        <p>安装你需要的 xfree86 版本：</p>
        <p>
          <code>xfree86-base</code> 和 <code>xfree86-rootless</code>
        </p>
        <p>
          <code>xfree86-base-threaded</code> 和 <code>xfree86-rootless-threaded</code>
        </p>
        <p>你可以使用通常的办法：对源代码安装用户 &quot;<code>fink install</code>&quot;；对二进制安装用户 &quot;<code>apt-get install</code>&quot; or <code>dselect</code> 。</p>
      </answer>
    </faqentry>
<!--obsolete><faqentry name="apple-x11" >
<question>
<p>I've installed the Apple X11 package, but system-xfree86 won't install.</p>
</question>
<answer>
<p>If you get error messages like the following:</p>
<codeblock>- missing /usr/X11R6/lib/libX11.dylib
- missing /usr/X11R6/lib/libXpm.dylib
- missing /usr/X11R6/lib/libXaw.dylib
- missing /usr/X11R6/include/X11/Xlib.h

Your XFree86 installation is missing or incomplete. Please make sure you have
an XFree86 release installed and retry the installation of the system-xfree86
package.
</codeblock>
<p>then you need to install the SDK package as well as the User package. If you are running Panther, the SDK is on the XCode disk and is <em>NOT</em> automatically installed. The SDK as well as X11 beta for Jaguar is no longer available, and you'll either have to upgrade to Panther or use Fink's xfree86.</p>
<p>If, on the other hand, you get the following message:</p>
<codeblock>An error occurred trying to find your XFree86 installation's
version. This really shouldn't happen, so I'm bailing. :(</codeblock>
<p>then you need to update your package descriptions and install a newer version of system-xfree86. If you are installing Apple X11 Beta 3, then you will need <filename>system-xfree86-4.2-11</filename> or later.</p>
</answer>
</faqentry><-->    <faqentry name="cctools" >
      <question>
        <p>&quot;当我安装 KDE 的时候，我碰到下面的信息：'Can't resolve dependency &quot;cctools (>= 446-1)&quot;'</p>
      </question>
      <answer>
        <p>这个晦涩的消息表明你需要安装 December 2002 开发工具。</p>
      </answer>
    </faqentry>
<!--obsolete><faqentry name="system-xfree86-upgrade" >
<question>
<p>I can't update system-xfree86, because of a conflict with x11.</p>
</question>
<answer>
	<p>This problem has come about because of changes needed to allow for externally installed XFree86-4.3. Originally, <code>system-xfree86</code> provided the <code>x11</code> virtual package when an externally installed XFree86 was present. Because it only worked for XFree86-4.2, it was decided to have two separate packages for XFree86 4.2.x and Apple X11 beta 3, and one for XFree86 4.3.x and Apple X11 1.0</p>
<p>Either of these will provide <code>x11</code>. <code>system-xfree86</code> is now a bundle that installs the appropriate one of the above packages, depending on the version of XFree86 / Apple X11 that is installed. Unfortunately, switching the provider of a virtual package is sufficiently complicated that the automatic upgrade procedure can't deal with it (currently). Do an additional <code>selfupdate</code> to get the latest version of the package, then try to update again.</p>
</answer>
</faqentry><-->  </chapter>
  <chapter filename="usage-general" >
    <title>一般性软件包使用问题</title>
    <shorttitle>使用（１）</shorttitle>
    <faqentry name="xlocale" >
      <question>
        <p>我碰到很多这样的消息：&quot;locale not supported by C library&quot;。有问题吗？</p>
      </question>
      <answer>
        <p>
没有什么问题，它只是表示程序会使用默认的英语信息提示，日期格式等。
程序其它的功能应该是正常的。
X11 文档有更多的<link url="http://fink.sourceforge.net/doc/x11/trouble.php#locale" >细节</link>。
</p>
      </answer>
    </faqentry>
    <faqentry name="passwd" >
      <question>
        <p>我的系统上突然多很很多陌生的用户，名字象 &quot;mysql&quot;，&quot;pgsql&quot;，和 &quot;games&quot;。
它们是哪来的？</p>
      </question>
      <answer>
        <p>
你用 Fink 安装了一些软件包，这些软件包依赖于另外一个叫 passwd 的软件包。passwd 出于安全的原因在你的系统上增加了一些额外的用户－Unix 系统上，文件和进程由一些（不同的） &quot;owners&quot; 所有，这可以使得系统管理员可以微调系统的权限和安全性设置。
象 Apache 和 MySQL 这样的程序需要有 &quot;owner&quot;，把这些守护进程由 root 来运行是不安全的（想像一下如果 Apache 被攻破而它又有对系统所有文件的写权限的情况）。
因此，passwd 软件按照 Fink 软件包的需要建立了这些额外的用户。</p>
        <p>如果在你的&quot;系统预置：用户&quot;面板里面突然出现了这些用户，那么要警惕，但不要那么着急去删除它们：
</p>
        <ul>
          <li>首先，很明显你选择安装了那些需要这些用户的软件包，所以删除它们是不合情理的，不是吗？</li>
          <li>事实上，在 Mac OS X 里面已经有很多这些你不是很清楚的额外用户：www，daemon，nobody，只是其中的一部分。
这些额外用户的存在是标准的 Unix 运行某些服务的方式；passwd 软件包只是添加了一些苹果没有提供的一些额外的用户。你可以在 NetInfo管理器程序或运行
<code>niutil -list . /users</code> 命令看到这些苹果定义的用户。
          </li>
          <li>如果你的确决定要删除这些用户，那么你要很小心如何去做。使用 &quot;系统预置：用户&quot; 面板去删除会把它们拥有的文件随机分配给一个管理员帐号，而且的确已经发生过因此而造成的使用管理员帐号的大混乱。这是系统预置的一个软件缺陷，并已经被提交给苹果公司。一个从你的系统中删除这些用户的安全的办法是使用 NetInfo管理器程序或使用命令行工具 <code>niutil</code>。阅读 <code>niutil</code> 的帮助页可以获得关于 NetInfo　的更多信息。</li>
        </ul>
        <p>Fink 在你安装 passwd 软件包的时候<em>确实</em>曾经向你要求安装这些额外用户的许可， 所以这些用户的存在本不应该觉得奇怪的。
</p>
      </answer>
    </faqentry>
    <faqentry name="compile-myself" >
      <question>
        <p>如何使用 Fink 安装的软件编译一些我自己的东西？</p>
      </question>
      <answer>
<!-- TODO: maybe change this to use LIBRARY_PATH / DYLD_LIBRARY_PATH ? -->        <p>当你编译一些不属于 Fink 的东西的时候，编译器和连接器需要知道去哪里找 Fink 安装的库和头文件。对于那些使用标准 configure/make 过程的软件，你需要设置这些环境变量：
</p>
        <p>对于 tcsh</p>
        <codeblock>setenv CFLAGS -I/sw/include
setenv LDFLAGS -L/sw/lib
setenv CXXFLAGS $CFLAGS
setenv CPPFLAGS $CXXFLAGS
setenv ACLOCAL_FLAGS &quot;-I /sw/share/aclocal&quot;
setenv PKG_CONFIG_PATH &quot;/sw/lib/pkgconfig&quot;</codeblock>
        <p>对于 bash</p>
        <codeblock>export CFLAGS=-I/sw/include
export LDFLAGS=-L/sw/lib
export CXXFLAGS=$CFLAGS
export CPPFLAGS=$CXXFLAGS
export ACLOCAL_FLAGS=&quot;-I /sw/share/aclocal&quot;
export PKG_CONFIG_PATH=&quot;/sw/lib/pkgconfig&quot;</codeblock>
        <p>
通常最简单的办法是把这些东西加到你的启动脚本文件（比如 <filename>.cshrc</filename> 或 <filename>.profile</filename>），这样他们就可以自动被设置。
如果一个软件包不使用这些环境变量，你需要自己添加
&quot;-I/sw/include&quot; (对头文件) 和 &quot;-L/sw/lib&quot; (对库文件) 到编译指令的一行。有些软件包会使用类似 EXTRA_CFLAGS 或 --with-qt-dir= 这样的非标准配置选项。
通常 &quot;./configure --help&quot; 会告诉你额外的编译选项。
</p>
        <p>另外，你也许需要安装那些你使用的软件包的开发版的头文件（例如 <em>foo-1.0-1-dev</em>），如果你还没有安装它们的话）。</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x11-applications-menu" >
      <question>
        <p>我不能在苹果的 X11 的应用程序菜单里面运行任何 Fink 安装的程序。</p>
      </question>
      <answer>
        <p>苹果的 X11 不使用 Fink 的环境变量设置，这意味着应用程序菜单没有正确的环境变量设置来找到你的 Fink 程序。解决办法是在 Fink 安装的程序前面加上：</p>
        <codeblock>source /sw/bin/init.sh ; </codeblock>
        <p>例如，如果你希望运行 Fink 安装的 GIMP，那么填入</p>
        <codeblock>source /sw/bin/init.sh ; gimp</codeblock>
        <p>到你 GIMP 项的命令一栏。</p>
        <p>你也可以编辑你的 .xinitrc 文件（在你的用户目录中）并添加：</p>
        <codeblock>source /sw/bin/init.sh</codeblock>
        <p>到第一行之后。</p>
      </answer>
    </faqentry>
    <faqentry name="x-options" >
      <question>
        <p>我被 X11 的选择弄糊涂了：苹果 X11，XFree86，等等。我应该安装哪一个？</p>
      </question>
      <answer>
        <p>这些都是 XFree86 的变种（它们都基于 XFree86 的代码），但之前有一些轻微的差别。苹果的 X11，从 XFree86-4.2.1 修改而来，而 XFree86-4.3 比标准的 XFree86-4.2.1.1 要快，但后者就更稳定。另外，还有对 4.2.1.1 的修订来添加进线程的支持，这对一些软件包来说是必须的。</p>
        <p>现在，在 Panther 下，苹果的 X11 （在第三张光盘上）是唯一的选择。不要忘记同时安装 X11 SDK （在 XCode 光盘上），如果你希望编译程序。</p>
        <p>在 Jaguar 下，多数的选择是通过 Fink 安装的：</p>
        <ul>
          <li>
            <p>Fink 的 4.2.x 版：安装 <code>xfree86-base</code> 和 <code>xfree86-rootless</code> 或 <code>xfree86-base-threaded</code> 和 <code>xfree86-rootless-threaded</code> （以及相应的 <code>-shlibs</code>）</p>
          </li>
          <li>
            <p>Fink 的 4.3.x 版：安装 <code>xfree86</code> 和 <code>xfree86-shlibs</code> 软件包</p>
          </li>
          <li>
            <p>苹果的 4.2.x 版（安装了用户和 SDK 软件包）： 安装 <code>system-xfree86</code> 软件包</p>
          </li>
        </ul>
        <p>还有另外一些选择。在 <link url="http://fink.sourceforge.net/doc/x11/index.php" >运行 X11 的文档</link>里面有专门的叙述。</p>
      </answer>
    </faqentry>
    <faqentry name="no-display" >
      <question>
        <p>当我试图运行一个程序，我碰到一个错误信息说： &quot;cannot open display:&quot;。我应该怎么办？</p>
      </question>
      <answer>
        <p>这个错误意味着系统不能连接到你的 X 显示。确定你按下面的步骤处理：</p>
        <p>1. 启动 X （苹果的 X11，XFree86，…）。</p>
        <p>2. 确定你正确设置了 DISPLAY 环境变量。如果你使用 X 的默认设置，你应该这么做：</p>
        <p>如果你使用 <code>tcsh</code></p>
        <codeblock>setenv DISPLAY :0</codeblock>
        <p>或如果你使用 <code>bash</code></p>
        <codeblock>export DISPLAY=:0</codeblock>
      </answer>
    </faqentry>
    <faqentry name="suggest-package" >
      <question>
        <p>我在 Fink 里面看不到我喜欢的那个程序。我应该怎么建议增加一个新的软件包到 Fink 里面？</p>
      </question>
      <answer>
        <p>在 Fink 项目的<link url="http://sourceforge.net/tracker/?atid=371315&amp;group_id=17203" >软件包需求追踪器</link>。</p>
        <p>注意你需要一个 SourceForge 帐号才可以添加。</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="usage-packages" >
    <title>特定软件包使用问题</title>
    <shorttitle>使用（２）</shorttitle>
    <faqentry name="xmms-quiet" >
      <question>
        <p>在 XMMS 中我听不到声音。</p>
      </question>
      <answer>
        <p>
确定你在 XMMS 的 preferences 中选择了 &quot;eSound Output Plugin&quot;。
由于一些很奇怪的原因，它默认选择 disk writer 插件。
</p>
        <p>
如果还不行或 XMMS 提示说找不到你的声卡，尝试这个办法：
</p>
        <ul>
          <li>确定你没有在 Mac OS X 中把声音输出设定为静音状态。</li>
          <li>运行 <code>esdcat /usr/libexec/config.guess</code> （或任意一个有一定长度的文件）。
如果你能听到一些短的声音，eSound 工作正常，那么如果配置正确的话 XMMS 应该也可以工作。
如果你听不到任何声音，因为某种原因，esd 没有工作。
你可以尝试手工启动 <code>esd &amp;</code> 并观察消息的输出。
</li>
          <li>
如果还不行，检查
<code>/tmp/.esd</code> 和 <code>/tmp/.esd/socket</code> 文件的权限。
它们应该是被你的普通用户帐号所拥有。
如果它们不是由你拥有，杀掉运行中的 esd 进程，用 root 权限删除那些目录（<code>sudo rm -rf /tmp/.esd</code>），然后重新启动 esd
（作为普通用户，而不是 root）。
</li>
        </ul>
        <p>
注意 esd 是设计为由普通用户运行，而不是 root。
它通常通过文件系统的套接字
<code>/tmp/.esd/socket</code>来通信。
如果你希望在网络上的另一台计算机上运行 esd 客户，你只需要添加 <code>-tcp</code> 和 <code>-port</code> 开关。
</p>
        <p>还有一些报告说 XMMS 在 10.1 下会崩溃或挂掉。目前我们还没有分析或修正。</p>
      </answer>
    </faqentry>
    <faqentry name="nedit-window-locks" >
      <question>
        <p>在我用 nedit 编辑一个文件时，想要打开另外一个文件，但窗口出现了，却没有响应。</p>
      </question>
      <answer>
        <p>这是 <filename>nedit</filename> 和 <filename>lesstif</filename> 的当前版本在所有平台上的已知问题。暂时的办法时用 File-->New 先打开一个窗口，然后打开你需要打开的另一个文件。</p>
        <p>在 <filename>nedit-5.3-6</filename> 中这个问题得到修正，这个版本依赖于 <filename>openmotif3</filename> 而不是 <filename>lesstif</filename>。</p>
      </answer>
    </faqentry>
    <faqentry name="xdarwin-start" >
      <question>
        <p>求救！当我启动 XDarwin，它立刻就退出了！</p>
      </question>
      <answer>
        <p>
不要惊慌。
现在《运行 X11》文档有专门一部分<link url="http://fink.sourceforge.net/doc/x11/trouble.php#immediate-quit" >《故障排除》</link>针对这个常见问题。
</p>
      </answer>
    </faqentry>
    <faqentry name="no-server" >
      <question>
        <p>当我尝试启动 XDarwin 的时候，我碰到这个错误信息：&quot;xinit: No such file or directory (errno 2): no server &quot;/usr/X11R6/bin/X&quot; in PATH&quot;。</p>
      </question>
      <answer>
        <p>首先，确定你在你的 X 启动文件 <code>~/.xinitrc</code> 中引用了 init.sh 文件。</p>
        <p>在 Jaguar 中，有时会构建了所有的 <code>xfree86</code> 软件包，但只有 <code>xfree86-base</code> 和 <code>xfree86-base-shlibs</code> 被安装了。检查时候已经安装了 <code>xfree86-rootless</code> 和 <code>xfree86-rootless-shlibs</code>。如果没有，运行 <code>fink install xfree86-rootless</code> 应该可以解决问题。</p>
        <p>如果你都安装了它们，那么尝试 <code>fink rebuild xfree86-rootless</code>。如果还不行，检查是否有把 <code>/usr/bin/X11R6</code> 包括在你的 PATH 中。</p>
      </answer>
    </faqentry>
<!--
<faqentry name="xfree-keymapping" >
#<question>
<p>I just upgraded to MacOS X 10.1 and now XFree86 always quits immediately. In the messages it says &quot;assert failed on line 454 of darwinKeyboard.c!&quot;. What's wrong?</p>
</question>
<answer>
	<p>This is a known problem on 10.1. You must use the &quot;Load from file&quot; keymapping option since the default option (loading it from the kernel) doesn't work anymore. The setting is in the XDarwin Preferences dialog. Be sure that a file is selected (e.g. USA.keymapping) - simply activating the check box may not be sufficient with some versions. If you can't get to the Preferences dialog because you disabled all splash screens, you can delete <code>~/Library/Preferences/org.xfree86.XDarwin.plist</code> to get it back, then start XDarwin and go to the Preferences dialog while the splash screen is displayed. Alternatively, you can edit that file manually in a text editor to enable the keymapping option (the UseKeymappingFile and KeymappingFile bits). </p>
<p>As a last resort, you can run <code>startx -x- -quartz -keymap
USA.keymapping</code> from Terminal.app.
If this still doesn't work, you have another problem in addition to
the keymapping problem that prevents XDarwin from starting.
You'll get a bunch of diagnostic messages in Terminal.app to help you
sort this out.
</p>
</answer>
</faqentry>
-->    <faqentry name="xterm-error" >
      <question>
        <p>xterm 出现错误：&quot;dyld: xterm Undefined symbols: xterm undefined reference to _tgetent expected to be defined in /usr/lib/libSystem.B.dylib&quot;。</p>
      </question>
      <answer>
        <p>这是因为使用了 10.1 版本的 XFree86 在 10.2 上。你需要升级到一个 10.2 的版本。</p>
        <p>如果你使用 Fink <code>xfree86</code> 软件包，那么你不能用通常的办法升级（对于从源代码安装：&quot;<code>fink selfupdate-cvs ; fink update-all</code>&quot;；对于从二进制安装：<code>fink selfupdate ; ; sudo apt-get update; sudo apt-get dist-upgrade</code>&quot;）。</p>
        <p>如果你用其它手段安装了 XFree86，你可以在 <link url="http://mrcla.com/XonX" >XonX 网站</link>上找到更新的补丁。</p>
      </answer>
    </faqentry>
    <faqentry name="libXmuu" >
      <question>
        <p>当我启动 XFree86 时，出现错误：&quot;dyld: xinit can't open library: /usr/X11R6/lib/libXmuu.1.dylib&quot; or &quot;dyld: xinit can't open library: /usr/X11R6/lib/libXext.6.dylib&quot;</p>
      </question>
      <answer>
        <p>
你缺少一个应该由 <code>xfree86-base-(threaded)-shlibs</code> 安装的文件。你应该用 <code>fink reinstall xfree86-base-shlibs</code>来从源文件重新安装它（如果你使用线程化的 XFree86 软件包，那么应该是 <code>fink reinstall xfree86-base-threaded-shlibs</code>）或用 <code>sudo apt-get install --reinstall xfree86-base-shlibs</code> 从二进制安装。</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x-bugs" >
      <question>
        <p>我已经安装了 Fink 的 XFree86，然后我把它换成苹果的 X11，现在一切都崩溃了！</p>
      </question>
      <answer>
        <p>首先，如果你以前安装了&quot;线程化&quot;的 Fink XFree86 软件包，你需要重新编译崩溃的软件。一些程序在编译的时候检测时候具有线程支持，然后从此以后就假设总是可以使用线程。 </p>
        <p>第二，也许你碰上苹果的 X11 的一个软件缺陷。在写本文档的时候，已知由几个缺陷正在由苹果团队在修正。
 </p>
        <p>如果你有与 Fink 没有直接联系的苹果 X11 的一般性问题，你可以访问<link url="http://www.lists.apple.com/x11-users" >苹果 X11 官方讨论组</link>。他们还希望把缺陷<link url="http://developer.apple.com/bugreporter" >提交到苹果软件缺陷报告</link>。
 </p>
      </answer>
    </faqentry>
    <faqentry name="apple-x-delete" >
      <question>
        <p>我希望苹果 X11 里面删除键和 XDarwin 中的作用一样。</p>
      </question>
      <answer>
        <p>有些用户报告说 XDarwin 和苹果 X11 中删除键的行为不一样。这可以通过在恰当的 X 启动文件中添加几行来修正：</p>
        <p>
          <em>.Xmodmap 里面：</em>
        </p>
        <codeblock>keycode 59 = Delete</codeblock>
        <p>
          <em>.Xresources 里面：</em>
        </p>
        <codeblock>
xterm*.deleteIsDEL: true
xterm*.backarrowKey: false
xterm*.ttyModes: erase ^?
</codeblock>
        <p>
          <em>.xinitrc 里面：</em>
        </p>
        <codeblock>xrdb -load $HOME/.Xresources
xmodmap $HOME/.Xmodmap</codeblock>
        <p/>
      </answer>
    </faqentry>
    <faqentry name="gnome-two" >
      <question>
        <p>我从 GNOME 1.x 升级到 GNOME 2.x，现在<code>gnome-session</code> 不会打开一个窗口管理器。</p>
      </question>
      <answer>
        <p>在 GNOME 1.x 下，<code>gnome-session</code> 自动调用 <code>sawfish</code> 窗口管理器；在 GNOME 2.x 下，你要在运行<code>gnome-session</code>之前在 <code>~/.xinitrc</code> 启动窗口管理器：</p>
        <codeblock>...
exec metacity &amp;
exec gnome-session</codeblock>
      </answer>
    </faqentry>
    <faqentry name="apple-x11-no-windowbar" >
      <question>
        <p>我在 Panther 中升级到苹果 X11，现在看不到窗口的标题栏了。</p>
      </question>
      <answer>
        <p>你还没有升级到与 Panther 一起提供的 X11 版本 &quot;X11 1.0 - XFree86 4.3.0&quot;。你可以在第三张光盘的 X11.pkg 安装 X11。</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x11-wants-xfree86" >
      <question>
        <p>我在 Panther 中安装了苹果的 X11，但 Fink 还要我安装 xfree86。</p>
      </question>
      <answer>
        <p>你需要（重）安装 X11SDK，它在 Xcode CD 上，它<em>不会</em>默认安装。</p>
        <p>即使你安装了 XCode，X11SDK 也<em>不会</em>默认安装。它只能作为 Xcode 的一个定制安装，或者双击 <code>Packages</code> 文件夹里面的 <code>X11SDK</code> pkg 文件进行安装。</p>
        <p>你可以通过运行 <code>fink-virtual-pkgs</code> 来检查安装情况。确定 <code>Package: system-xfree86</code> 部分存在和 <code>provides:</code> 一行包括 <code>x11</code>。
        </p>
        <p>如果你看不到这些东西都正确安装，最安全的办法是删除所有旧的 xfree86 或 system-xfree86，并重新安装苹果的 X11 和 X11SDK。你也许会在第一行看到警告信息，你可以忽略它：</p>
        <codeblock>sudo dpkg -r --force-all system-xfree86 system-xfree86-42 system-xfree86-43 \
xfree86-base xfree86-base-shlibs; rm -rf /Library/Receipts/X11SDK.pkg \
/Library/Receipts/X11User.pkg; fink selfupdate; fink index</codeblock>
        <p>然后，从 Panther 的第三张 CD 安装 X11，以及从 Xcode CD 中安装 X11SDK 。</p>
        <p>注意：如果你使用 <code>fink-0.17.0</code> 或更新版本，对二进制安装，<code>system-xfree86</code> 不在需要 X11SDK。</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x11-beta-wants-xfree86" >
      <question>
        <p>我安装了苹果的 X11 以及 10.2-gcc3.3 版本的 Fink，但 Fink 仍然要求我安装 xfree86。</p>
      </question>
      <answer>
        <p>你需要（重）安装 X11SDK，你应该在下载 Beta 版苹果的 X11 的同时下载得到。</p>
        <p>你可以用 <code>fink-virtual-pkgs</code> 来检查你的安装，你应该查看 <code>Package: system-xfree86</code> 部分在不在，以及 <code>provides:</code> 一行有没有包括 <code>x11</code>。
        </p>
        <p>如果你没有看到全部东西都正确安装，最安全的修复这个错误的办法是删除全部 xfree86 或 system-xfree86，并重新安装苹果的 X11 和 X11SDK。你也许会看到第一行产生警告信息，你可以忽略它：</p>
        <codeblock>sudo dpkg -r --force-all system-xfree86 system-xfree86-42 system-xfree86-43 \
xfree86-base xfree86-base-shlibs; rm -rf /Library/Receipts/X11SDK.pkg \
/Library/Receipts/X11User.pkg; fink selfupdate; fink index</codeblock>
        <p>然后，重新安装 X11 和 X11SDK。</p>
        <p>注意：如果你使用 <code>fink-0.17.0</code> 或更新版本，对二进制安装，<code>system-xfree86</code> 不在需要 X11SDK。</p>
      </answer>
    </faqentry>
  </chapter>
</document>
